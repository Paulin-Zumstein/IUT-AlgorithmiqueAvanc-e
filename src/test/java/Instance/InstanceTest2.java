package Instance;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class InstanceTest2 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        boolean[][] booleanArray15 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray15, coord16, 52);
        fr.umontpellier.iut.algogen.Solution solution19 = instance18.greedySolver();
        boolean boolean20 = instance12.estValide(solution19);
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance12.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(solution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord36 = instance35.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord61, 52);
        fr.umontpellier.iut.algogen.Coord coord64 = instance63.getStartingP();
        int int65 = instance63.getNbC();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        java.lang.String str71 = instance63.toString(solution70);
        java.lang.String str72 = instance46.toString(solution70);
        boolean boolean73 = instance35.estValide(solution70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = instance9.evaluerSolution(solution70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        java.lang.String str38 = instance37.toString();
        int int39 = instance37.getK();
        int int40 = instance37.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance37.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance37.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord43 = instance37.getStartingP();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord54, (int) (short) 100);
        int int57 = instance56.getNbC();
        int int58 = instance56.getK();
        boolean[][] booleanArray59 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, 52);
        fr.umontpellier.iut.algogen.Solution solution63 = instance62.greedySolver();
        boolean boolean64 = instance56.estValide(solution63);
        boolean boolean65 = instance37.estValide(solution63);
        // The following exception was thrown during execution in test generation
        try {
            int int66 = instance27.evaluerSolution(solution63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(solution63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        java.lang.String str55 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = instance9.piecePresente(coord56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str55, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = instance27.piecePresente(coord32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(coord31);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        java.lang.Class<?> wildcardClass22 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = instance30.piecePresente(coord33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        java.lang.String str27 = instance26.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance26.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution54 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.String str29 = instance27.toString();
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = instance27.piecePresente(coord30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.lang.String str17 = instance9.toString();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        int int30 = instance27.getNbL();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance27.getStartingP();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getNbL();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution52 = null;
        java.lang.String str53 = instance51.toString(solution52);
        java.util.ArrayList<java.lang.Integer> intList54 = instance51.greedyPermut();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        int int66 = instance64.getK();
        int int67 = instance64.getK();
        fr.umontpellier.iut.algogen.Coord coord68 = instance64.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance64.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord70 = instance64.getStartingP();
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 100);
        int int84 = instance83.getNbC();
        int int85 = instance83.getK();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        boolean boolean91 = instance83.estValide(solution90);
        boolean boolean92 = instance64.estValide(solution90);
        java.lang.String str93 = instance51.toString(solution90);
        java.lang.String str94 = instance43.toString(solution90);
        java.lang.String str95 = instance27.toString(solution90);
        java.lang.String str96 = instance9.toString(solution90);
        java.lang.Class<?> wildcardClass97 = solution90.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(intList54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList18);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList28 = instance27.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        int int19 = instance9.getNbC();
        int int20 = instance9.getNbC();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord34, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord37, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord40, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList43 = instance42.getListeCoordPieces();
        int int44 = instance42.getK();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Solution solution49 = instance48.greedySolver();
        boolean boolean50 = instance42.estValide(solution49);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = instance9.evaluerSolution(solution49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(coordList43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(solution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        int int27 = instance24.getK();
        int int28 = instance24.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance24.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance24.getListeCoordPieces();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        java.lang.String str41 = instance40.toString();
        int int42 = instance40.getK();
        int int43 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance40.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList45 = instance40.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord46 = instance40.getStartingP();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 100);
        int int60 = instance59.getNbC();
        int int61 = instance59.getK();
        boolean[][] booleanArray62 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, 52);
        fr.umontpellier.iut.algogen.Solution solution66 = instance65.greedySolver();
        boolean boolean67 = instance59.estValide(solution66);
        boolean boolean68 = instance40.estValide(solution66);
        boolean boolean69 = instance24.estValide(solution66);
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        boolean boolean75 = instance24.estValide(solution74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = instance9.evaluerSolution(solution74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertNotNull(coordList45);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(solution66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        int int31 = instance27.getNbC();
        java.lang.String str32 = instance27.toString();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        int int45 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance42.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord48 = instance42.getStartingP();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance42.estValide(solution68);
        java.lang.String str71 = instance27.toString(solution68);
        java.lang.String str72 = instance9.toString(solution68);
        int int73 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = instance9.piecePresente(coord74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Solution solution16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = instance15.toString(solution16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getNbC();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = instance9.evaluerSolution(solution13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = coord17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getNbC();
        java.lang.String str29 = instance24.toString();
        int int30 = instance24.getNbL();
        int int31 = instance24.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance24.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord45 = instance42.getStartingP();
        int int46 = instance42.getNbC();
        java.lang.String str47 = instance42.toString();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        java.lang.String str86 = instance42.toString(solution83);
        java.lang.String str87 = instance24.toString(solution83);
        java.lang.String str88 = instance9.toString(solution83);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution89 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.Class<?> wildcardClass13 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        java.lang.String str35 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord36 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord37 = instance28.getStartingP();
        java.lang.String str38 = instance28.toString();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 1);
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance51.toString(solution74);
        boolean boolean77 = instance28.estValide(solution74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = instance9.evaluerSolution(solution74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution7 = null;
        java.lang.String str8 = instance6.toString(solution7);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = instance6.getNbC();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance15.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord32, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord35, 52);
        fr.umontpellier.iut.algogen.Coord coord38 = instance37.getStartingP();
        int int39 = instance37.getNbC();
        boolean[][] booleanArray40 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, 52);
        fr.umontpellier.iut.algogen.Solution solution44 = instance43.greedySolver();
        java.lang.String str45 = instance37.toString(solution44);
        java.lang.String str46 = instance18.toString(solution44);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution47 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(solution44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ".x\n.x\n" + "'", str45, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        int int12 = instance9.getK();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbL();
        int int31 = instance28.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance28.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 1);
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord59, 52);
        fr.umontpellier.iut.algogen.Coord coord62 = instance61.getStartingP();
        int int63 = instance61.getNbC();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        java.lang.String str69 = instance61.toString(solution68);
        java.lang.String str70 = instance45.toString(solution68);
        boolean boolean71 = instance28.estValide(solution68);
        boolean boolean72 = instance9.estValide(solution68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList73 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList7 = instance6.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord8 = instance6.getStartingP();
        java.lang.Class<?> wildcardClass9 = instance6.getClass();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(coordList7);
        org.junit.Assert.assertNull(coord8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.String str21 = instance18.toString();
        fr.umontpellier.iut.algogen.Solution solution22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = instance18.toString(solution22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 100);
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getNbL();
        int int35 = instance33.getNbC();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance45.toString(solution69);
        boolean boolean72 = instance33.estValide(solution69);
        java.lang.String str73 = instance23.toString(solution69);
        boolean boolean74 = instance9.estValide(solution69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList75 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        java.lang.Class<?> wildcardClass16 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass20 = coordList19.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getK();
        fr.umontpellier.iut.algogen.Coord coord24 = instance22.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance22.getListeCoordPieces();
        int int26 = instance22.getNbC();
        fr.umontpellier.iut.algogen.Coord coord27 = instance22.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord28 = instance22.getStartingP();
        java.lang.String str29 = instance22.toString();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        int int53 = instance52.getNbL();
        int int54 = instance52.getNbC();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord79, 52);
        fr.umontpellier.iut.algogen.Coord coord82 = instance81.getStartingP();
        int int83 = instance81.getNbC();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        java.lang.String str89 = instance81.toString(solution88);
        java.lang.String str90 = instance64.toString(solution88);
        boolean boolean91 = instance52.estValide(solution88);
        java.lang.String str92 = instance42.toString(solution88);
        java.lang.String str93 = instance22.toString(solution88);
        boolean boolean94 = instance12.estValide(solution88);
        java.lang.Class<?> wildcardClass95 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertNotNull(coordList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNull(coord82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        java.lang.Class<?> wildcardClass38 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, 52);
        fr.umontpellier.iut.algogen.Coord coord30 = instance29.getStartingP();
        int int31 = instance29.getNbL();
        int int32 = instance29.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        int int53 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord54 = instance52.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord55 = instance52.getStartingP();
        int int56 = instance52.getNbC();
        java.lang.String str57 = instance52.toString();
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[][] booleanArray64 = new boolean[][] { booleanArray60, booleanArray63 };
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, (int) '4');
        java.lang.String str68 = instance67.toString();
        int int69 = instance67.getK();
        int int70 = instance67.getK();
        fr.umontpellier.iut.algogen.Coord coord71 = instance67.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList72 = instance67.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord73 = instance67.getStartingP();
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[] booleanArray79 = new boolean[] { false, true };
        boolean[][] booleanArray80 = new boolean[][] { booleanArray76, booleanArray79 };
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord84, (int) (short) 100);
        int int87 = instance86.getNbC();
        int int88 = instance86.getK();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance86.estValide(solution93);
        boolean boolean95 = instance67.estValide(solution93);
        java.lang.String str96 = instance52.toString(solution93);
        java.lang.String str97 = instance42.toString(solution93);
        boolean boolean98 = instance29.estValide(solution93);
        java.lang.String str99 = instance9.toString(solution93);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str68, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertNotNull(coordList72);
        org.junit.Assert.assertNull(coord73);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".x\n.x\n" + "'", str97, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + ".x\n.x\n" + "'", str99, ".x\n.x\n");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 100);
        int int46 = instance45.getNbC();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution54 = null;
        java.lang.String str55 = instance53.toString(solution54);
        int int56 = instance53.getK();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 100);
        int int70 = instance69.getNbC();
        int int71 = instance69.getK();
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        boolean boolean77 = instance69.estValide(solution76);
        boolean boolean78 = instance53.estValide(solution76);
        boolean boolean79 = instance45.estValide(solution76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = instance30.evaluerSolution(solution76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 100);
        int int46 = instance45.getNbC();
        int int47 = instance45.getK();
        boolean[][] booleanArray48 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, 52);
        fr.umontpellier.iut.algogen.Solution solution52 = instance51.greedySolver();
        boolean boolean53 = instance45.estValide(solution52);
        java.lang.String str54 = instance26.toString(solution52);
        java.lang.String str55 = instance9.toString(solution52);
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = instance9.piecePresente(coord56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(solution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbC();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance27.getListeCoordPieces();
        int int31 = instance27.getNbC();
        java.lang.String str32 = instance27.toString();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord49, (int) 'a');
        int int52 = instance51.getNbC();
        int int53 = instance51.getK();
        fr.umontpellier.iut.algogen.Coord coord54 = instance51.getStartingP();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance51.toString(solution77);
        boolean boolean80 = instance27.estValide(solution77);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = instance9.evaluerSolution(solution77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 97 + "'", int53 == 97);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        java.lang.Class<?> wildcardClass34 = instance33.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getNbL();
        int int15 = instance12.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        java.lang.Class<?> wildcardClass17 = coordList16.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(coordList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance27.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance18.getListeCoordPieces();
        java.lang.String str22 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = instance18.piecePresente(coord23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(coordList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 0);
        int int33 = instance32.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance43.estValide(solution93);
        java.lang.String str95 = instance32.toString(solution93);
        boolean boolean96 = instance9.estValide(solution93);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution97 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass18 = coordList17.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        int int32 = instance30.getNbC();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance30.estValide(solution34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNull(coord33);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = instance48.getStartingP();
        int int50 = instance48.getNbC();
        boolean[][] booleanArray51 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, 52);
        fr.umontpellier.iut.algogen.Solution solution55 = instance54.greedySolver();
        java.lang.String str56 = instance48.toString(solution55);
        java.lang.String str57 = instance32.toString(solution55);
        boolean boolean58 = instance9.estValide(solution55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList59 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(solution55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance9.piecePresente(coord13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getNbC();
        java.lang.Class<?> wildcardClass30 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance9.estValide(solution59);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = instance9.piecePresente(coord61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution33 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        int int20 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        java.lang.String str22 = instance21.toString();
        java.lang.String str23 = instance21.toString();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord34, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord37, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord40, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord43, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance45.getListeCoordPieces();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance45.estValide(solution51);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = instance21.evaluerSolution(solution51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str23, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getK();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        java.lang.String str23 = instance22.toString();
        int int24 = instance22.getK();
        java.lang.String str25 = instance22.toString();
        java.lang.String str26 = instance22.toString();
        int int27 = instance22.getK();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        java.lang.String str38 = instance37.toString();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord52, 52);
        fr.umontpellier.iut.algogen.Coord coord55 = instance54.getStartingP();
        int int56 = instance54.getNbC();
        boolean[][] booleanArray57 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, 52);
        fr.umontpellier.iut.algogen.Solution solution61 = instance60.greedySolver();
        java.lang.String str62 = instance54.toString(solution61);
        java.lang.String str63 = instance37.toString(solution61);
        java.lang.String str64 = instance22.toString(solution61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = instance9.evaluerSolution(solution61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str23, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(solution61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ".x\n.x\n" + "'", str63, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ".x\n.x\n" + "'", str64, ".x\n.x\n");
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution12 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        java.lang.String str15 = instance12.toString();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance25.getListeCoordPieces();
        int int29 = instance25.getNbC();
        fr.umontpellier.iut.algogen.Coord coord30 = instance25.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord48, (int) 'a');
        int int51 = instance50.getNbC();
        int int52 = instance50.getK();
        fr.umontpellier.iut.algogen.Coord coord53 = instance50.getStartingP();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord67, 52);
        fr.umontpellier.iut.algogen.Coord coord70 = instance69.getStartingP();
        int int71 = instance69.getNbC();
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        java.lang.String str77 = instance69.toString(solution76);
        java.lang.String str78 = instance50.toString(solution76);
        boolean boolean79 = instance25.estValide(solution76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = instance12.evaluerSolution(solution76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 97 + "'", int52 == 97);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution57 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        java.lang.String str14 = instance12.toString();
        int int15 = instance12.getK();
        java.lang.Class<?> wildcardClass16 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList27 = instance24.getListeCoordPieces();
        int int28 = instance24.getNbC();
        fr.umontpellier.iut.algogen.Coord coord29 = instance24.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord30 = instance24.getStartingP();
        java.lang.String str31 = instance24.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        int int55 = instance54.getNbL();
        int int56 = instance54.getNbC();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        java.lang.String str67 = instance66.toString();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord81, 52);
        fr.umontpellier.iut.algogen.Coord coord84 = instance83.getStartingP();
        int int85 = instance83.getNbC();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        java.lang.String str91 = instance83.toString(solution90);
        java.lang.String str92 = instance66.toString(solution90);
        boolean boolean93 = instance54.estValide(solution90);
        java.lang.String str94 = instance44.toString(solution90);
        java.lang.String str95 = instance24.toString(solution90);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = instance9.evaluerSolution(solution90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNotNull(coordList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str67, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNull(coord84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord34, (int) (short) 100);
        int int37 = instance36.getNbC();
        int int38 = instance36.getK();
        boolean[][] booleanArray39 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, 52);
        fr.umontpellier.iut.algogen.Solution solution43 = instance42.greedySolver();
        boolean boolean44 = instance36.estValide(solution43);
        boolean boolean45 = instance20.estValide(solution43);
        boolean boolean46 = instance12.estValide(solution43);
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = instance12.piecePresente(coord47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(solution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution31 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass21 = coordList20.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance12.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        java.lang.Class<?> wildcardClass17 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = instance27.piecePresente(coord29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance12.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        fr.umontpellier.iut.algogen.Solution solution20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance9.estValide(solution20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getNbC();
        java.lang.Class<?> wildcardClass31 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        java.lang.Class<?> wildcardClass25 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getNbL();
        int int24 = instance22.getNbC();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, 52);
        fr.umontpellier.iut.algogen.Coord coord52 = instance51.getStartingP();
        int int53 = instance51.getNbC();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Solution solution58 = instance57.greedySolver();
        java.lang.String str59 = instance51.toString(solution58);
        java.lang.String str60 = instance34.toString(solution58);
        boolean boolean61 = instance22.estValide(solution58);
        java.lang.String str62 = instance12.toString(solution58);
        fr.umontpellier.iut.algogen.Coord coord63 = instance12.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution64 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(solution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertNull(coord63);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbL();
        java.lang.Class<?> wildcardClass17 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.estValide(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(coordList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 100);
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) 'a');
        int int35 = instance34.getNbC();
        int int36 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance34.getStartingP();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord51, 52);
        fr.umontpellier.iut.algogen.Coord coord54 = instance53.getStartingP();
        int int55 = instance53.getNbC();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        java.lang.String str61 = instance53.toString(solution60);
        java.lang.String str62 = instance34.toString(solution60);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = instance15.evaluerSolution(solution60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ".x\n.x\n" + "'", str61, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.lang.String str14 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        java.lang.String str22 = instance21.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList24 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList23);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = instance21.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList28 = instance27.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        int int32 = instance30.getNbC();
        int int33 = instance30.getNbC();
        int int34 = instance30.getNbC();
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = instance30.piecePresente(coord35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(coordList15);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getK();
        boolean[][] booleanArray30 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, 52);
        fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
        boolean boolean35 = instance27.estValide(solution34);
        boolean boolean36 = instance9.estValide(solution34);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution37 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(solution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getNbC();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        java.lang.String str25 = instance24.toString();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = instance41.getStartingP();
        int int43 = instance41.getNbC();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Solution solution48 = instance47.greedySolver();
        java.lang.String str49 = instance41.toString(solution48);
        java.lang.String str50 = instance24.toString(solution48);
        java.lang.String str51 = instance9.toString(solution48);
        java.lang.Class<?> wildcardClass52 = solution48.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(solution48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ".x\n.x\n" + "'", str49, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ".x\n.x\n" + "'", str50, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = coord14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        int int16 = instance15.getNbC();
        java.lang.String str17 = instance15.toString();
        int int18 = instance15.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord32, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord35, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord38, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance40.getListeCoordPieces();
        int int42 = instance40.getK();
        boolean[][] booleanArray43 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, 52);
        fr.umontpellier.iut.algogen.Solution solution47 = instance46.greedySolver();
        boolean boolean48 = instance40.estValide(solution47);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = instance18.evaluerSolution(solution47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(solution47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList13 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getK();
        java.lang.String str68 = instance9.toString();
        java.lang.String str69 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList70 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str68, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str69, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        int int19 = instance18.getNbC();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord33, 0);
        int int36 = instance35.getK();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        int int47 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance46.getStartingP();
        int int49 = instance46.getK();
        int int50 = instance46.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance46.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList52 = instance46.getListeCoordPieces();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        java.lang.String str63 = instance62.toString();
        int int64 = instance62.getK();
        int int65 = instance62.getK();
        fr.umontpellier.iut.algogen.Coord coord66 = instance62.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList67 = instance62.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord68 = instance62.getStartingP();
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[][] booleanArray75 = new boolean[][] { booleanArray71, booleanArray74 };
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord79, (int) (short) 100);
        int int82 = instance81.getNbC();
        int int83 = instance81.getK();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        boolean boolean89 = instance81.estValide(solution88);
        boolean boolean90 = instance62.estValide(solution88);
        boolean boolean91 = instance46.estValide(solution88);
        boolean[][] booleanArray92 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord93 = null;
        fr.umontpellier.iut.algogen.Instance instance95 = new fr.umontpellier.iut.algogen.Instance(booleanArray92, coord93, 52);
        fr.umontpellier.iut.algogen.Solution solution96 = instance95.greedySolver();
        boolean boolean97 = instance46.estValide(solution96);
        java.lang.String str98 = instance35.toString(solution96);
        java.lang.String str99 = instance18.toString(solution96);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNotNull(coordList52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str63, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(coordList67);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(booleanArray92);
        org.junit.Assert.assertNotNull(solution96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + ".x\n.x\n" + "'", str99, ".x\n.x\n");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        int int13 = instance9.getK();
        int int14 = instance9.getNbL();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.lang.String str27 = instance24.toString();
        java.lang.String str28 = instance24.toString();
        int int29 = instance24.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance24.getListeCoordPieces();
        java.lang.String str31 = instance24.toString();
        fr.umontpellier.iut.algogen.Coord coord32 = instance24.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList33 = instance24.getListeCoordPieces();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord44, (int) (short) 1);
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance46.toString(solution69);
        boolean boolean72 = instance24.estValide(solution69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = instance9.evaluerSolution(solution69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNotNull(coordList33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Solution solution38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = instance12.estValide(solution38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList15);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        int int24 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance21.piecePresente(coord25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList26 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(coordList25);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution12 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNull(coord11);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        int int17 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.String str24 = instance21.toString();
        int int25 = instance21.getNbC();
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = instance21.piecePresente(coord26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        java.util.ArrayList<java.lang.Integer> intList24 = instance20.greedyPermut();
        java.util.ArrayList<java.lang.Integer> intList25 = instance20.greedyPermut();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        int int36 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance35.getStartingP();
        int int38 = instance35.getNbC();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord52, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord55, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord58, (int) ' ');
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord74, 52);
        fr.umontpellier.iut.algogen.Coord coord77 = instance76.getStartingP();
        int int78 = instance76.getNbC();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        java.lang.String str84 = instance76.toString(solution83);
        java.lang.String str85 = instance60.toString(solution83);
        boolean boolean86 = instance35.estValide(solution83);
        java.lang.String str87 = instance20.toString(solution83);
        boolean boolean88 = instance9.estValide(solution83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList89 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(intList25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNull(coord77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        int int19 = instance18.getNbC();
        java.lang.String str20 = instance18.toString();
        int int21 = instance18.getNbL();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        boolean boolean34 = instance27.estValide(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        java.lang.Class<?> wildcardClass36 = solution33.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Solution solution18 = instance17.greedySolver();
        boolean boolean19 = instance12.estValide(solution18);
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord33, 52);
        fr.umontpellier.iut.algogen.Coord coord36 = instance35.getStartingP();
        int int37 = instance35.getNbC();
        java.lang.String str38 = instance35.toString();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 1);
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance51.toString(solution74);
        java.lang.String str77 = instance35.toString(solution74);
        boolean boolean78 = instance12.estValide(solution74);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = instance12.piecePresente(coord79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertNotNull(solution18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        int int14 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList13 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        java.lang.String str28 = instance27.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance12.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance9.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance9.piecePresente(coord13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        int int18 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getK();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord36, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord39, (int) (byte) 10);
        int int42 = instance41.getNbC();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        int int53 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord54 = instance52.getStartingP();
        int int55 = instance52.getK();
        int int56 = instance52.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance52.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance52.getListeCoordPieces();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        java.lang.String str69 = instance68.toString();
        int int70 = instance68.getK();
        int int71 = instance68.getK();
        fr.umontpellier.iut.algogen.Coord coord72 = instance68.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList73 = instance68.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord74 = instance68.getStartingP();
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[] booleanArray80 = new boolean[] { false, true };
        boolean[][] booleanArray81 = new boolean[][] { booleanArray77, booleanArray80 };
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord85, (int) (short) 100);
        int int88 = instance87.getNbC();
        int int89 = instance87.getK();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        boolean boolean95 = instance87.estValide(solution94);
        boolean boolean96 = instance68.estValide(solution94);
        boolean boolean97 = instance52.estValide(solution94);
        java.lang.String str98 = instance41.toString(solution94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = instance21.evaluerSolution(solution94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str69, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNull(coord72);
        org.junit.Assert.assertNotNull(coordList73);
        org.junit.Assert.assertNull(coord74);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Coord coord38 = instance12.getStartingP();
        int int39 = instance12.getNbL();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord53, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord56, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord59, (int) ' ');
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, 52);
        fr.umontpellier.iut.algogen.Coord coord78 = instance77.getStartingP();
        int int79 = instance77.getNbC();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        java.lang.String str85 = instance77.toString(solution84);
        java.lang.String str86 = instance61.toString(solution84);
        // The following exception was thrown during execution in test generation
        try {
            int int87 = instance12.evaluerSolution(solution84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNull(coord78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        int int22 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        boolean[][] booleanArray34 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, 52);
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution41 = null;
        java.lang.String str42 = instance40.toString(solution41);
        java.util.ArrayList<java.lang.Integer> intList43 = instance40.greedyPermut();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        java.lang.String str82 = instance40.toString(solution79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = instance33.evaluerSolution(solution79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(intList43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        java.lang.Class<?> wildcardClass32 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance12.piecePresente(coord13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        int int19 = instance15.getNbC();
        int int20 = instance15.getNbC();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        int int31 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        java.lang.String str33 = instance30.toString();
        java.lang.String str34 = instance30.toString();
        int int35 = instance30.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance30.getListeCoordPieces();
        java.lang.String str37 = instance30.toString();
        int int38 = instance30.getNbL();
        int int39 = instance30.getNbL();
        fr.umontpellier.iut.algogen.Coord coord40 = instance30.getStartingP();
        int int41 = instance30.getK();
        boolean[][] booleanArray42 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, 52);
        int int46 = instance45.getK();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 100);
        int int60 = instance59.getNbC();
        int int61 = instance59.getK();
        boolean[][] booleanArray62 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, 52);
        fr.umontpellier.iut.algogen.Solution solution66 = instance65.greedySolver();
        boolean boolean67 = instance59.estValide(solution66);
        boolean boolean68 = instance45.estValide(solution66);
        java.lang.String str69 = instance30.toString(solution66);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = instance15.evaluerSolution(solution66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(solution66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord43, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord46, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord49, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList52 = instance51.getListeCoordPieces();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance56.greedySolver();
        boolean boolean58 = instance51.estValide(solution57);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = instance27.evaluerSolution(solution57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(coordList52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getNbL();
        int int24 = instance22.getNbC();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, 52);
        fr.umontpellier.iut.algogen.Coord coord52 = instance51.getStartingP();
        int int53 = instance51.getNbC();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Solution solution58 = instance57.greedySolver();
        java.lang.String str59 = instance51.toString(solution58);
        java.lang.String str60 = instance34.toString(solution58);
        boolean boolean61 = instance22.estValide(solution58);
        java.lang.String str62 = instance12.toString(solution58);
        fr.umontpellier.iut.algogen.Coord coord63 = instance12.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = instance12.estValide(solution64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(solution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertNull(coord63);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getNbL();
        boolean[][] booleanArray24 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, 52);
        fr.umontpellier.iut.algogen.Solution solution28 = instance27.greedySolver();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = instance21.evaluerSolution(solution28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertNotNull(solution28);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNull(coord13);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = coord17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = instance27.piecePresente(coord28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList34 = instance33.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = instance9.piecePresente(coord14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[][] booleanArray18 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, 52);
        int int22 = instance21.getK();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 100);
        int int36 = instance35.getNbC();
        int int37 = instance35.getK();
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Solution solution42 = instance41.greedySolver();
        boolean boolean43 = instance35.estValide(solution42);
        boolean boolean44 = instance21.estValide(solution42);
        java.lang.String str45 = instance9.toString(solution42);
        int int46 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution47 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(solution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ".x\n.x\n" + "'", str45, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        java.lang.Class<?> wildcardClass16 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        int int33 = instance30.getK();
        java.lang.Class<?> wildcardClass34 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord48, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord51, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList54 = instance53.getListeCoordPieces();
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance53.estValide(solution59);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = instance30.evaluerSolution(solution59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(coordList54);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        int int32 = instance27.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList33 = instance27.getListeCoordPieces();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean boolean89 = instance27.estValide(solution85);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = instance9.evaluerSolution(solution85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(coordList33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 10);
        java.lang.String str31 = instance30.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        int int29 = instance26.getK();
        int int30 = instance26.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        int int45 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance42.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord48 = instance42.getStartingP();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance42.estValide(solution68);
        boolean boolean71 = instance26.estValide(solution68);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = instance9.evaluerSolution(solution68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        int int19 = instance18.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        boolean[][] booleanArray15 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray15, coord16, 52);
        fr.umontpellier.iut.algogen.Solution solution19 = instance18.greedySolver();
        boolean boolean20 = instance12.estValide(solution19);
        int int21 = instance12.getNbC();
        java.lang.String str22 = instance12.toString();
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = instance12.piecePresente(coord23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(solution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance18.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        java.lang.Class<?> wildcardClass38 = solution35.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance18.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(coord21);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        int int19 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord35 = instance34.getStartingP();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance45.toString(solution69);
        boolean boolean72 = instance34.estValide(solution69);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = instance15.evaluerSolution(solution69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        java.lang.String str22 = instance21.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.Class<?> wildcardClass24 = coordList23.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.lang.Class<?> wildcardClass32 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        int int18 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance9.getListeCoordPieces();
        int int20 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList21 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Solution solution4 = instance3.greedySolver();
        java.lang.String str5 = instance3.toString();
        fr.umontpellier.iut.algogen.Coord coord6 = instance3.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = instance3.estValide(solution7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(solution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "k = 52\nnb pieces = 0\nstarting point = null\n" + "'", str5, "k = 52\nnb pieces = 0\nstarting point = null\n");
        org.junit.Assert.assertNull(coord6);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 100);
        int int46 = instance45.getNbC();
        int int47 = instance45.getK();
        boolean[][] booleanArray48 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, 52);
        fr.umontpellier.iut.algogen.Solution solution52 = instance51.greedySolver();
        boolean boolean53 = instance45.estValide(solution52);
        java.lang.String str54 = instance26.toString(solution52);
        java.lang.String str55 = instance9.toString(solution52);
        int int56 = instance9.getNbL();
        java.lang.Class<?> wildcardClass57 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(solution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int19 = instance9.evaluerSolution(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance18.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass16 = coordList15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '4');
        java.lang.Class<?> wildcardClass19 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getNbC();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        java.lang.String str41 = instance40.toString();
        int int42 = instance40.getK();
        int int43 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance40.getStartingP();
        int int45 = instance40.getNbC();
        int int46 = instance40.getK();
        int int47 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance40.getStartingP();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        int int53 = instance52.getK();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 100);
        int int67 = instance66.getNbC();
        int int68 = instance66.getK();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        boolean boolean74 = instance66.estValide(solution73);
        boolean boolean75 = instance52.estValide(solution73);
        java.lang.String str76 = instance40.toString(solution73);
        java.lang.String str77 = instance27.toString(solution73);
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = instance27.piecePresente(coord78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance39.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord42 = instance39.getStartingP();
        int int43 = instance39.getNbC();
        java.lang.String str44 = instance39.toString();
        fr.umontpellier.iut.algogen.Coord coord45 = instance39.getStartingP();
        int int46 = instance39.getK();
        int int47 = instance39.getNbC();
        fr.umontpellier.iut.algogen.Coord coord48 = instance39.getStartingP();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution56 = null;
        java.lang.String str57 = instance55.toString(solution56);
        java.util.ArrayList<java.lang.Integer> intList58 = instance55.greedyPermut();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        java.lang.String str69 = instance68.toString();
        int int70 = instance68.getK();
        int int71 = instance68.getK();
        fr.umontpellier.iut.algogen.Coord coord72 = instance68.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList73 = instance68.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord74 = instance68.getStartingP();
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[] booleanArray80 = new boolean[] { false, true };
        boolean[][] booleanArray81 = new boolean[][] { booleanArray77, booleanArray80 };
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord85, (int) (short) 100);
        int int88 = instance87.getNbC();
        int int89 = instance87.getK();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        boolean boolean95 = instance87.estValide(solution94);
        boolean boolean96 = instance68.estValide(solution94);
        java.lang.String str97 = instance55.toString(solution94);
        java.lang.String str98 = instance39.toString(solution94);
        // The following exception was thrown during execution in test generation
        try {
            int int99 = instance27.evaluerSolution(solution94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(intList58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str69, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertNull(coord72);
        org.junit.Assert.assertNotNull(coordList73);
        org.junit.Assert.assertNull(coord74);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 100 + "'", int89 == 100);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        int int19 = instance15.getNbC();
        int int20 = instance15.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution21 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        java.lang.Class<?> wildcardClass28 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord31, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord34, 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord37, 32);
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord53, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord56, (int) 'a');
        int int59 = instance58.getNbC();
        int int60 = instance58.getNbC();
        fr.umontpellier.iut.algogen.Coord coord61 = instance58.getStartingP();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, 52);
        fr.umontpellier.iut.algogen.Coord coord78 = instance77.getStartingP();
        int int79 = instance77.getNbC();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        java.lang.String str85 = instance77.toString(solution84);
        boolean boolean86 = instance58.estValide(solution84);
        java.lang.String str87 = instance39.toString(solution84);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = instance9.evaluerSolution(solution84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNull(coord78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance38.getStartingP();
        int int42 = instance38.getNbC();
        java.lang.String str43 = instance38.toString();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        java.lang.String str82 = instance38.toString(solution79);
        java.lang.String str83 = instance28.toString(solution79);
        boolean boolean84 = instance15.estValide(solution79);
        int int85 = instance15.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList86 = instance15.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList87 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(coordList86);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution45 = null;
        java.lang.String str46 = instance44.toString(solution45);
        int int47 = instance44.getK();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 100);
        int int61 = instance60.getNbC();
        int int62 = instance60.getK();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        boolean boolean68 = instance60.estValide(solution67);
        boolean boolean69 = instance44.estValide(solution67);
        boolean boolean70 = instance9.estValide(solution67);
        int int71 = instance9.getNbC();
        java.lang.String str72 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = instance9.piecePresente(coord73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str72, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord24, 52);
        fr.umontpellier.iut.algogen.Coord coord27 = instance26.getStartingP();
        int int28 = instance26.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        java.lang.String str34 = instance26.toString(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution36 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".x\n.x\n" + "'", str34, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 100);
        int int46 = instance45.getNbC();
        int int47 = instance45.getK();
        boolean[][] booleanArray48 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, 52);
        fr.umontpellier.iut.algogen.Solution solution52 = instance51.greedySolver();
        boolean boolean53 = instance45.estValide(solution52);
        java.lang.String str54 = instance26.toString(solution52);
        java.lang.String str55 = instance9.toString(solution52);
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[][] booleanArray62 = new boolean[][] { booleanArray58, booleanArray61 };
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord66, (int) (short) 100);
        int int69 = instance68.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        boolean boolean75 = instance68.estValide(solution74);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = instance9.evaluerSolution(solution74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(solution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Solution solution4 = instance3.greedySolver();
        java.lang.String str5 = instance3.toString();
        fr.umontpellier.iut.algogen.Coord coord6 = instance3.getStartingP();
        java.lang.String str7 = instance3.toString();
        java.lang.Class<?> wildcardClass8 = instance3.getClass();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(solution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "k = 52\nnb pieces = 0\nstarting point = null\n" + "'", str5, "k = 52\nnb pieces = 0\nstarting point = null\n");
        org.junit.Assert.assertNull(coord6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "k = 52\nnb pieces = 0\nstarting point = null\n" + "'", str7, "k = 52\nnb pieces = 0\nstarting point = null\n");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 100);
        int int38 = instance37.getNbC();
        int int39 = instance37.getK();
        boolean[][] booleanArray40 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, 52);
        fr.umontpellier.iut.algogen.Solution solution44 = instance43.greedySolver();
        boolean boolean45 = instance37.estValide(solution44);
        java.lang.String str46 = instance24.toString(solution44);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution47 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(solution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 10);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = instance36.piecePresente(coord37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, (int) '#');
        java.lang.Class<?> wildcardClass13 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        int int20 = instance18.getNbL();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        int int31 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        int int34 = instance30.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance30.getListeCoordPieces();
        int int36 = instance30.getNbL();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 100);
        int int50 = instance49.getNbC();
        int int51 = instance49.getK();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        boolean boolean57 = instance49.estValide(solution56);
        boolean boolean58 = instance30.estValide(solution56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = instance18.evaluerSolution(solution56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution28 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getNbC();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        boolean[] booleanArray12 = new boolean[] { false, true };
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[][] booleanArray16 = new boolean[][] { booleanArray12, booleanArray15 };
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        fr.umontpellier.iut.algogen.Instance instance19 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord17, (int) '4');
        int int20 = instance19.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance19.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance19.getStartingP();
        int int23 = instance19.getNbC();
        java.lang.String str24 = instance19.toString();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        int int36 = instance34.getK();
        int int37 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord38 = instance34.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance34.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord40 = instance34.getStartingP();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 100);
        int int54 = instance53.getNbC();
        int int55 = instance53.getK();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        boolean boolean61 = instance53.estValide(solution60);
        boolean boolean62 = instance34.estValide(solution60);
        java.lang.String str63 = instance19.toString(solution60);
        java.lang.String str64 = instance9.toString(solution60);
        java.lang.Class<?> wildcardClass65 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ".x\n.x\n" + "'", str63, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ".x\n.x\n" + "'", str64, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        java.lang.String str28 = instance25.toString();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance39.getStartingP();
        int int42 = instance39.getK();
        int int43 = instance39.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance39.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList45 = instance39.getListeCoordPieces();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        java.lang.String str56 = instance55.toString();
        int int57 = instance55.getK();
        int int58 = instance55.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance55.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList60 = instance55.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord61 = instance55.getStartingP();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 100);
        int int75 = instance74.getNbC();
        int int76 = instance74.getK();
        boolean[][] booleanArray77 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, 52);
        fr.umontpellier.iut.algogen.Solution solution81 = instance80.greedySolver();
        boolean boolean82 = instance74.estValide(solution81);
        boolean boolean83 = instance55.estValide(solution81);
        boolean boolean84 = instance39.estValide(solution81);
        boolean boolean85 = instance25.estValide(solution81);
        boolean boolean86 = instance9.estValide(solution81);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertNotNull(coordList45);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(coordList60);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(solution81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        int int16 = instance12.getNbC();
        int int17 = instance12.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getNbC();
        java.lang.String str31 = instance27.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = instance21.piecePresente(coord24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) 'a');
        int int35 = instance34.getNbC();
        int int36 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance34.getStartingP();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord51, 52);
        fr.umontpellier.iut.algogen.Coord coord54 = instance53.getStartingP();
        int int55 = instance53.getNbC();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        java.lang.String str61 = instance53.toString(solution60);
        java.lang.String str62 = instance34.toString(solution60);
        boolean boolean63 = instance9.estValide(solution60);
        java.lang.Class<?> wildcardClass64 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ".x\n.x\n" + "'", str61, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        int int16 = instance15.getK();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        int int29 = instance26.getK();
        int int30 = instance26.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        int int45 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance42.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord48 = instance42.getStartingP();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance42.estValide(solution68);
        boolean boolean71 = instance26.estValide(solution68);
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        boolean boolean77 = instance26.estValide(solution76);
        java.lang.String str78 = instance15.toString(solution76);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList79 = instance15.getListeCoordPieces();
        java.lang.Class<?> wildcardClass80 = instance15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertNotNull(coordList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance18.getListeCoordPieces();
        int int22 = instance18.getNbC();
        java.lang.Class<?> wildcardClass23 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(coordList21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution7 = null;
        java.lang.String str8 = instance6.toString(solution7);
        java.util.ArrayList<java.lang.Integer> intList9 = instance6.greedyPermut();
        boolean[] booleanArray12 = new boolean[] { false, true };
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[][] booleanArray16 = new boolean[][] { booleanArray12, booleanArray15 };
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        fr.umontpellier.iut.algogen.Instance instance19 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord17, (int) '4');
        java.lang.String str20 = instance19.toString();
        int int21 = instance19.getK();
        int int22 = instance19.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance19.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList24 = instance19.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord25 = instance19.getStartingP();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 100);
        int int39 = instance38.getNbC();
        int int40 = instance38.getK();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        boolean boolean46 = instance38.estValide(solution45);
        boolean boolean47 = instance19.estValide(solution45);
        java.lang.String str48 = instance6.toString(solution45);
        fr.umontpellier.iut.algogen.Solution solution49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int50 = instance6.evaluerSolution(solution49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(intList9);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNotNull(coordList24);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass18 = coordList17.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.String str24 = instance21.toString();
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance21.piecePresente(coord25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList57 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNull(coord33);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        int int43 = instance42.getNbC();
        int int44 = instance42.getK();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Solution solution49 = instance48.greedySolver();
        boolean boolean50 = instance42.estValide(solution49);
        java.lang.String str51 = instance29.toString(solution49);
        boolean boolean52 = instance9.estValide(solution49);
        java.lang.Class<?> wildcardClass53 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(solution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = instance9.toString(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution45 = null;
        java.lang.String str46 = instance44.toString(solution45);
        int int47 = instance44.getK();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 100);
        int int61 = instance60.getNbC();
        int int62 = instance60.getK();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        boolean boolean68 = instance60.estValide(solution67);
        boolean boolean69 = instance44.estValide(solution67);
        boolean boolean70 = instance9.estValide(solution67);
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = instance9.piecePresente(coord71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = instance27.piecePresente(coord28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        java.lang.String str28 = instance27.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        int int14 = instance9.getK();
        int int15 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        boolean[][] booleanArray11 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        fr.umontpellier.iut.algogen.Instance instance14 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord12, 52);
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord15, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        java.lang.String str19 = instance17.toString(solution18);
        java.util.ArrayList<java.lang.Integer> intList20 = instance17.greedyPermut();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        java.lang.String str31 = instance30.toString();
        int int32 = instance30.getK();
        int int33 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord36 = instance30.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 100);
        int int50 = instance49.getNbC();
        int int51 = instance49.getK();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        boolean boolean57 = instance49.estValide(solution56);
        boolean boolean58 = instance30.estValide(solution56);
        java.lang.String str59 = instance17.toString(solution56);
        java.lang.String str60 = instance9.toString(solution56);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = instance9.piecePresente(coord61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 100);
        int int30 = instance29.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution38 = null;
        java.lang.String str39 = instance37.toString(solution38);
        int int40 = instance37.getK();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 100);
        int int54 = instance53.getNbC();
        int int55 = instance53.getK();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        boolean boolean61 = instance53.estValide(solution60);
        boolean boolean62 = instance37.estValide(solution60);
        boolean boolean63 = instance29.estValide(solution60);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = instance9.evaluerSolution(solution60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = instance9.toString(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        int int33 = instance30.getNbC();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        int int45 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance43.getStartingP();
        int int47 = instance43.getK();
        int int48 = instance43.getNbC();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance43.estValide(solution68);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = instance30.evaluerSolution(solution68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getNbL();
        int int15 = instance12.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance15.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        int int32 = instance30.getNbC();
        int int33 = instance30.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution34 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        int int29 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance26.getStartingP();
        int int31 = instance26.getK();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance41.getListeCoordPieces();
        int int45 = instance41.getNbC();
        java.lang.String str46 = instance41.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord63, (int) 'a');
        int int66 = instance65.getNbC();
        int int67 = instance65.getK();
        fr.umontpellier.iut.algogen.Coord coord68 = instance65.getStartingP();
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[][] booleanArray75 = new boolean[][] { booleanArray71, booleanArray74 };
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord79, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord82, 52);
        fr.umontpellier.iut.algogen.Coord coord85 = instance84.getStartingP();
        int int86 = instance84.getNbC();
        boolean[][] booleanArray87 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        fr.umontpellier.iut.algogen.Instance instance90 = new fr.umontpellier.iut.algogen.Instance(booleanArray87, coord88, 52);
        fr.umontpellier.iut.algogen.Solution solution91 = instance90.greedySolver();
        java.lang.String str92 = instance84.toString(solution91);
        java.lang.String str93 = instance65.toString(solution91);
        boolean boolean94 = instance41.estValide(solution91);
        java.lang.String str95 = instance26.toString(solution91);
        java.lang.String str96 = instance9.toString(solution91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList97 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 97 + "'", int67 == 97);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNull(coord85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(solution91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        java.lang.Class<?> wildcardClass31 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        int int19 = instance18.getNbC();
        java.lang.String str20 = instance18.toString();
        java.lang.Class<?> wildcardClass21 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution24 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        java.lang.String str27 = instance26.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance26.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution61 = null;
        java.lang.String str62 = instance60.toString(solution61);
        int int63 = instance60.getK();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance60.estValide(solution83);
        java.lang.String str86 = instance9.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord87 = instance9.getStartingP();
        java.lang.String str88 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertNull(coord87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str88, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = instance30.piecePresente(coord31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        java.lang.String str30 = instance27.toString();
        java.lang.String str31 = instance27.toString();
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = instance27.piecePresente(coord32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        int int18 = instance9.getNbC();
        int int19 = instance9.getNbL();
        int int20 = instance9.getNbL();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 1);
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord44, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord47, 52);
        fr.umontpellier.iut.algogen.Coord coord50 = instance49.getStartingP();
        int int51 = instance49.getNbC();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        java.lang.String str57 = instance49.toString(solution56);
        java.lang.String str58 = instance33.toString(solution56);
        // The following exception was thrown during execution in test generation
        try {
            int int59 = instance9.evaluerSolution(solution56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ".x\n.x\n" + "'", str58, ".x\n.x\n");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        int int31 = instance30.getNbL();
        int int32 = instance30.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        java.lang.String str45 = instance42.toString();
        java.lang.String str46 = instance42.toString();
        int int47 = instance42.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance42.getListeCoordPieces();
        java.lang.String str49 = instance42.toString();
        fr.umontpellier.iut.algogen.Coord coord50 = instance42.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord51 = instance42.getStartingP();
        java.lang.String str52 = instance42.toString();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 1);
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord79, 52);
        fr.umontpellier.iut.algogen.Coord coord82 = instance81.getStartingP();
        int int83 = instance81.getNbC();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        java.lang.String str89 = instance81.toString(solution88);
        java.lang.String str90 = instance65.toString(solution88);
        boolean boolean91 = instance42.estValide(solution88);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = instance30.evaluerSolution(solution88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str52, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNull(coord82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        int int19 = instance18.getK();
        java.lang.Class<?> wildcardClass20 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        java.lang.String str22 = instance21.toString();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord36, 52);
        fr.umontpellier.iut.algogen.Coord coord39 = instance38.getStartingP();
        int int40 = instance38.getNbC();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        java.lang.String str46 = instance38.toString(solution45);
        java.lang.String str47 = instance21.toString(solution45);
        boolean boolean48 = instance9.estValide(solution45);
        fr.umontpellier.iut.algogen.Solution solution49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = instance9.estValide(solution49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ".x\n.x\n" + "'", str47, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        int int31 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        java.lang.String str33 = instance30.toString();
        java.lang.String str34 = instance30.toString();
        int int35 = instance30.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance30.getListeCoordPieces();
        java.lang.String str37 = instance30.toString();
        fr.umontpellier.iut.algogen.Coord coord38 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance30.getListeCoordPieces();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 1);
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord66, 52);
        fr.umontpellier.iut.algogen.Coord coord69 = instance68.getStartingP();
        int int70 = instance68.getNbC();
        boolean[][] booleanArray71 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, 52);
        fr.umontpellier.iut.algogen.Solution solution75 = instance74.greedySolver();
        java.lang.String str76 = instance68.toString(solution75);
        java.lang.String str77 = instance52.toString(solution75);
        boolean boolean78 = instance30.estValide(solution75);
        boolean boolean79 = instance18.estValide(solution75);
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = instance18.piecePresente(coord80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(solution75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = instance18.piecePresente(coord23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        int int19 = instance18.getNbC();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[][] booleanArray18 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord22, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution25 = null;
        java.lang.String str26 = instance24.toString(solution25);
        java.util.ArrayList<java.lang.Integer> intList27 = instance24.greedyPermut();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        java.lang.String str38 = instance37.toString();
        int int39 = instance37.getK();
        int int40 = instance37.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance37.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance37.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord43 = instance37.getStartingP();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord54, (int) (short) 100);
        int int57 = instance56.getNbC();
        int int58 = instance56.getK();
        boolean[][] booleanArray59 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, 52);
        fr.umontpellier.iut.algogen.Solution solution63 = instance62.greedySolver();
        boolean boolean64 = instance56.estValide(solution63);
        boolean boolean65 = instance37.estValide(solution63);
        java.lang.String str66 = instance24.toString(solution63);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = instance9.evaluerSolution(solution63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(intList27);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(solution63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        java.lang.Class<?> wildcardClass25 = instance24.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        java.lang.Class<?> wildcardClass20 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        int int19 = instance18.getK();
        java.lang.String str20 = instance18.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 0\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 0\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = instance9.piecePresente(coord14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getNbL();
        int int15 = instance12.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        int int17 = instance12.getNbC();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        int int30 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        int int32 = instance27.getK();
        int int33 = instance27.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance27.getListeCoordPieces();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 1);
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 100);
        int int61 = instance60.getNbC();
        int int62 = instance60.getK();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        boolean boolean68 = instance60.estValide(solution67);
        java.lang.String str69 = instance47.toString(solution67);
        boolean boolean70 = instance27.estValide(solution67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = instance12.evaluerSolution(solution67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        int int19 = instance18.getNbC();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.estValide(solution20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        java.lang.String str57 = instance18.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList58 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 10);
        int int37 = instance36.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        java.lang.String str14 = instance12.toString();
        int int15 = instance12.getK();
        int int16 = instance12.getNbC();
        int int17 = instance12.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution7 = null;
        java.lang.String str8 = instance6.toString(solution7);
        java.util.ArrayList<java.lang.Integer> intList9 = instance6.greedyPermut();
        boolean[] booleanArray12 = new boolean[] { false, true };
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[][] booleanArray16 = new boolean[][] { booleanArray12, booleanArray15 };
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        fr.umontpellier.iut.algogen.Instance instance19 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord17, (int) '4');
        java.lang.String str20 = instance19.toString();
        int int21 = instance19.getK();
        int int22 = instance19.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance19.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList24 = instance19.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord25 = instance19.getStartingP();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 100);
        int int39 = instance38.getNbC();
        int int40 = instance38.getK();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        boolean boolean46 = instance38.estValide(solution45);
        boolean boolean47 = instance19.estValide(solution45);
        java.lang.String str48 = instance6.toString(solution45);
        int int49 = instance6.getNbL();
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = instance6.piecePresente(coord50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(intList9);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNotNull(coordList24);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance18.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance21.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getK();
        int int30 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance27.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord33 = instance27.getStartingP();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord44, (int) (short) 100);
        int int47 = instance46.getNbC();
        int int48 = instance46.getK();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        boolean boolean54 = instance46.estValide(solution53);
        boolean boolean55 = instance27.estValide(solution53);
        java.lang.String str56 = instance9.toString(solution53);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertNotNull(coordList57);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getNbL();
        int int28 = instance26.getNbC();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        java.lang.String str39 = instance38.toString();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord53, 52);
        fr.umontpellier.iut.algogen.Coord coord56 = instance55.getStartingP();
        int int57 = instance55.getNbC();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        java.lang.String str63 = instance55.toString(solution62);
        java.lang.String str64 = instance38.toString(solution62);
        boolean boolean65 = instance26.estValide(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList68 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ".x\n.x\n" + "'", str63, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ".x\n.x\n" + "'", str64, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        boolean[] booleanArray2 = new boolean[] { false, false };
        boolean[] booleanArray5 = new boolean[] { false, false };
        boolean[] booleanArray8 = new boolean[] { false, false };
        boolean[] booleanArray11 = new boolean[] { false, false };
        boolean[][] booleanArray12 = new boolean[][] { booleanArray2, booleanArray5, booleanArray8, booleanArray11 };
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray12, coord13, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance15.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false]");
        org.junit.Assert.assertNotNull(booleanArray12);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[][] booleanArray23 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, 52);
        fr.umontpellier.iut.algogen.Solution solution27 = instance26.greedySolver();
        boolean boolean28 = instance21.estValide(solution27);
        java.lang.String str29 = instance21.toString();
        int int30 = instance21.getNbC();
        java.lang.Class<?> wildcardClass31 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(solution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.lang.String str27 = instance24.toString();
        java.lang.String str28 = instance24.toString();
        int int29 = instance24.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance24.getListeCoordPieces();
        java.lang.String str31 = instance24.toString();
        int int32 = instance24.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList33 = instance24.getListeCoordPieces();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord46 = instance43.getStartingP();
        int int47 = instance43.getNbC();
        java.lang.String str48 = instance43.toString();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        java.lang.String str59 = instance58.toString();
        int int60 = instance58.getK();
        int int61 = instance58.getK();
        fr.umontpellier.iut.algogen.Coord coord62 = instance58.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance58.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord64 = instance58.getStartingP();
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 100);
        int int78 = instance77.getNbC();
        int int79 = instance77.getK();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        boolean boolean85 = instance77.estValide(solution84);
        boolean boolean86 = instance58.estValide(solution84);
        java.lang.String str87 = instance43.toString(solution84);
        java.lang.String str88 = instance24.toString(solution84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = instance9.evaluerSolution(solution84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(coordList33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str59, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getK();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord31 = instance28.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance28.getListeCoordPieces();
        int int33 = instance28.getK();
        int int34 = instance28.getNbL();
        java.lang.String str35 = instance28.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        int int47 = instance45.getK();
        int int48 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord49 = instance45.getStartingP();
        int int50 = instance45.getNbC();
        int int51 = instance45.getK();
        int int52 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord53 = instance45.getStartingP();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        int int58 = instance57.getK();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord69, (int) (short) 100);
        int int72 = instance71.getNbC();
        int int73 = instance71.getK();
        boolean[][] booleanArray74 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, 52);
        fr.umontpellier.iut.algogen.Solution solution78 = instance77.greedySolver();
        boolean boolean79 = instance71.estValide(solution78);
        boolean boolean80 = instance57.estValide(solution78);
        java.lang.String str81 = instance45.toString(solution78);
        java.lang.String str82 = instance28.toString(solution78);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = instance9.evaluerSolution(solution78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(solution78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = coord14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution13 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = instance9.evaluerSolution(solution15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList7 = instance6.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord8 = instance6.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord9 = instance6.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = coord9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(coordList7);
        org.junit.Assert.assertNull(coord8);
        org.junit.Assert.assertNull(coord9);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getK();
        boolean[][] booleanArray30 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, 52);
        fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
        boolean boolean35 = instance27.estValide(solution34);
        boolean boolean36 = instance9.estValide(solution34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList37 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(solution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        int int35 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord36 = instance34.getStartingP();
        java.lang.String str37 = instance34.toString();
        java.lang.String str38 = instance34.toString();
        int int39 = instance34.getNbL();
        fr.umontpellier.iut.algogen.Coord coord40 = instance34.getStartingP();
        int int41 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance34.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        java.lang.String str53 = instance52.toString();
        int int54 = instance52.getK();
        int int55 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord56 = instance52.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance52.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord58 = instance52.getStartingP();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord69, (int) (short) 100);
        int int72 = instance71.getNbC();
        int int73 = instance71.getK();
        boolean[][] booleanArray74 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, 52);
        fr.umontpellier.iut.algogen.Solution solution78 = instance77.greedySolver();
        boolean boolean79 = instance71.estValide(solution78);
        boolean boolean80 = instance52.estValide(solution78);
        java.lang.String str81 = instance34.toString(solution78);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = instance24.evaluerSolution(solution78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str53, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertNull(coord58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(solution78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getNbL();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance27.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNull(coord30);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getK();
        java.lang.String str68 = instance9.toString();
        java.lang.String str69 = instance9.toString();
        int int70 = instance9.getNbL();
        java.lang.Class<?> wildcardClass71 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str68, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str69, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 1);
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance27.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = instance9.piecePresente(coord54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance21.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = instance27.piecePresente(coord28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertNull(coord21);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getK();
        java.lang.String str68 = instance9.toString();
        java.lang.String str69 = instance9.toString();
        int int70 = instance9.getNbL();
        java.lang.String str71 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution72 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str68, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str69, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str71, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        java.lang.Class<?> wildcardClass38 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        java.lang.String str16 = instance12.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance26.getListeCoordPieces();
        int int31 = instance26.getK();
        int int32 = instance26.getNbL();
        java.lang.String str33 = instance26.toString();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        int int45 = instance43.getK();
        int int46 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance43.getStartingP();
        int int48 = instance43.getNbC();
        int int49 = instance43.getK();
        int int50 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord51 = instance43.getStartingP();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        int int56 = instance55.getK();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 100);
        int int70 = instance69.getNbC();
        int int71 = instance69.getK();
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        boolean boolean77 = instance69.estValide(solution76);
        boolean boolean78 = instance55.estValide(solution76);
        java.lang.String str79 = instance43.toString(solution76);
        java.lang.String str80 = instance26.toString(solution76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = instance12.evaluerSolution(solution76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        java.lang.Class<?> wildcardClass33 = coordList32.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance38.getStartingP();
        int int42 = instance38.getNbC();
        java.lang.String str43 = instance38.toString();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        java.lang.String str82 = instance38.toString(solution79);
        java.lang.String str83 = instance28.toString(solution79);
        boolean boolean84 = instance15.estValide(solution79);
        int int85 = instance15.getNbL();
        int int86 = instance15.getK();
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = instance15.piecePresente(coord87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 52 + "'", int86 == 52);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = instance21.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getK();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 1);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution37 = instance36.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (-1));
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Solution solution25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance24.estValide(solution25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.lang.String str18 = instance9.toString();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList23 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = instance24.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList27 = instance24.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance24.getListeCoordPieces();
        int int29 = instance24.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution30 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNotNull(coordList27);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 0);
        int int33 = instance32.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance43.estValide(solution93);
        java.lang.String str95 = instance32.toString(solution93);
        boolean boolean96 = instance9.estValide(solution93);
        int int97 = instance9.getNbC();
        java.lang.Class<?> wildcardClass98 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getK();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        java.lang.String str45 = instance42.toString();
        java.lang.String str46 = instance42.toString();
        int int47 = instance42.getK();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 1);
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord74, 52);
        fr.umontpellier.iut.algogen.Coord coord77 = instance76.getStartingP();
        int int78 = instance76.getNbC();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        java.lang.String str84 = instance76.toString(solution83);
        java.lang.String str85 = instance60.toString(solution83);
        boolean boolean86 = instance42.estValide(solution83);
        boolean boolean87 = instance30.estValide(solution83);
        java.lang.Class<?> wildcardClass88 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNull(coord77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.lang.String str18 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord32, (int) ' ');
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord48, 52);
        fr.umontpellier.iut.algogen.Coord coord51 = instance50.getStartingP();
        int int52 = instance50.getNbC();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance56.greedySolver();
        java.lang.String str58 = instance50.toString(solution57);
        java.lang.String str59 = instance34.toString(solution57);
        boolean boolean60 = instance9.estValide(solution57);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution61 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ".x\n.x\n" + "'", str58, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution26 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(coordList25);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getNbL();
        int int33 = instance30.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList34 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.Class<?> wildcardClass13 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(coordList18);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        int int32 = instance31.getK();
        fr.umontpellier.iut.algogen.Coord coord33 = instance31.getStartingP();
        java.lang.String str34 = instance31.toString();
        java.lang.String str35 = instance31.toString();
        int int36 = instance31.getNbL();
        fr.umontpellier.iut.algogen.Coord coord37 = instance31.getStartingP();
        int int38 = instance31.getK();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord52, 52);
        fr.umontpellier.iut.algogen.Coord coord55 = instance54.getStartingP();
        int int56 = instance54.getNbL();
        int int57 = instance54.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance54.getListeCoordPieces();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord69, (int) (short) 1);
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[][] booleanArray78 = new boolean[][] { booleanArray74, booleanArray77 };
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord82, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord85, 52);
        fr.umontpellier.iut.algogen.Coord coord88 = instance87.getStartingP();
        int int89 = instance87.getNbC();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        java.lang.String str95 = instance87.toString(solution94);
        java.lang.String str96 = instance71.toString(solution94);
        boolean boolean97 = instance54.estValide(solution94);
        java.lang.String str98 = instance31.toString(solution94);
        java.lang.String str99 = instance21.toString(solution94);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNull(coord88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + ".x\n.x\n" + "'", str99, ".x\n.x\n");
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 32);
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance43.getListeCoordPieces();
        int int47 = instance43.getNbC();
        java.lang.String str48 = instance43.toString();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord62, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord65, (int) 'a');
        int int68 = instance67.getNbC();
        int int69 = instance67.getK();
        fr.umontpellier.iut.algogen.Coord coord70 = instance67.getStartingP();
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord84, 52);
        fr.umontpellier.iut.algogen.Coord coord87 = instance86.getStartingP();
        int int88 = instance86.getNbC();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        java.lang.String str94 = instance86.toString(solution93);
        java.lang.String str95 = instance67.toString(solution93);
        boolean boolean96 = instance43.estValide(solution93);
        // The following exception was thrown during execution in test generation
        try {
            int int97 = instance33.evaluerSolution(solution93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 97 + "'", int69 == 97);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNull(coord87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 100);
        int int22 = instance21.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        int int14 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord36 = instance35.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord61, 52);
        fr.umontpellier.iut.algogen.Coord coord64 = instance63.getStartingP();
        int int65 = instance63.getNbC();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        java.lang.String str71 = instance63.toString(solution70);
        java.lang.String str72 = instance46.toString(solution70);
        boolean boolean73 = instance35.estValide(solution70);
        boolean boolean74 = instance9.estValide(solution70);
        java.lang.Class<?> wildcardClass75 = solution70.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord32 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance28.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        int int46 = instance44.getK();
        int int47 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance44.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance44.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord50 = instance44.getStartingP();
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord61, (int) (short) 100);
        int int64 = instance63.getNbC();
        int int65 = instance63.getK();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        boolean boolean71 = instance63.estValide(solution70);
        boolean boolean72 = instance44.estValide(solution70);
        boolean boolean73 = instance28.estValide(solution70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = instance9.evaluerSolution(solution70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.Class<?> wildcardClass29 = coordList28.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) ' ');
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord32, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord35, 52);
        fr.umontpellier.iut.algogen.Coord coord38 = instance37.getStartingP();
        int int39 = instance37.getNbC();
        boolean[][] booleanArray40 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, 52);
        fr.umontpellier.iut.algogen.Solution solution44 = instance43.greedySolver();
        java.lang.String str45 = instance37.toString(solution44);
        java.lang.String str46 = instance21.toString(solution44);
        java.lang.Class<?> wildcardClass47 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(solution44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ".x\n.x\n" + "'", str45, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        int int31 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        java.lang.String str33 = instance30.toString();
        java.lang.String str34 = instance30.toString();
        int int35 = instance30.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance30.getListeCoordPieces();
        java.lang.String str37 = instance30.toString();
        fr.umontpellier.iut.algogen.Coord coord38 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance30.getListeCoordPieces();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 1);
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord66, 52);
        fr.umontpellier.iut.algogen.Coord coord69 = instance68.getStartingP();
        int int70 = instance68.getNbC();
        boolean[][] booleanArray71 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, 52);
        fr.umontpellier.iut.algogen.Solution solution75 = instance74.greedySolver();
        java.lang.String str76 = instance68.toString(solution75);
        java.lang.String str77 = instance52.toString(solution75);
        boolean boolean78 = instance30.estValide(solution75);
        boolean boolean79 = instance18.estValide(solution75);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution80 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(solution75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        java.lang.Class<?> wildcardClass21 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        java.lang.Class<?> wildcardClass16 = instance15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution30 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution55 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        java.lang.String str34 = instance30.toString();
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = instance30.piecePresente(coord35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getNbL();
        int int15 = instance12.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        int int17 = instance12.getNbC();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getNbC();
        int int29 = instance27.getNbL();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        java.lang.String str31 = instance27.toString();
        boolean[][] booleanArray32 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, 52);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution39 = null;
        java.lang.String str40 = instance38.toString(solution39);
        int int41 = instance38.getK();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 100);
        int int55 = instance54.getNbC();
        int int56 = instance54.getK();
        boolean[][] booleanArray57 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, 52);
        fr.umontpellier.iut.algogen.Solution solution61 = instance60.greedySolver();
        boolean boolean62 = instance54.estValide(solution61);
        boolean boolean63 = instance38.estValide(solution61);
        boolean boolean64 = instance27.estValide(solution61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = instance12.evaluerSolution(solution61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(solution61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 0);
        java.lang.Class<?> wildcardClass31 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getK();
        int int23 = instance21.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList24 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance9.estValide(solution13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) 'a');
        int int35 = instance34.getNbC();
        int int36 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance34.getStartingP();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord51, 52);
        fr.umontpellier.iut.algogen.Coord coord54 = instance53.getStartingP();
        int int55 = instance53.getNbC();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        java.lang.String str61 = instance53.toString(solution60);
        java.lang.String str62 = instance34.toString(solution60);
        boolean boolean63 = instance9.estValide(solution60);
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        boolean[][] booleanArray78 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, 52);
        fr.umontpellier.iut.algogen.Solution solution82 = instance81.greedySolver();
        boolean boolean83 = instance76.estValide(solution82);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = instance9.evaluerSolution(solution82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 97 + "'", int36 == 97);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ".x\n.x\n" + "'", str61, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(solution82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.lang.String str27 = instance24.toString();
        fr.umontpellier.iut.algogen.Coord coord28 = instance24.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance24.getStartingP();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord43, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord46, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord49, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord52, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord55, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord58, (int) (short) 10);
        int int61 = instance60.getK();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord78, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord81, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList84 = instance83.getListeCoordPieces();
        int int85 = instance83.getK();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        boolean boolean91 = instance83.estValide(solution90);
        java.lang.String str92 = instance60.toString(solution90);
        java.lang.String str93 = instance24.toString(solution90);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = instance9.evaluerSolution(solution90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(coordList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 97 + "'", int85 == 97);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 1);
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = instance41.getStartingP();
        int int43 = instance41.getNbC();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Solution solution48 = instance47.greedySolver();
        java.lang.String str49 = instance41.toString(solution48);
        java.lang.String str50 = instance25.toString(solution48);
        java.lang.String str51 = instance9.toString(solution48);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = instance9.piecePresente(coord52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(solution48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ".x\n.x\n" + "'", str49, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ".x\n.x\n" + "'", str50, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance9.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Coord coord38 = instance12.getStartingP();
        int int39 = instance12.getNbL();
        java.lang.Class<?> wildcardClass40 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        int int28 = instance27.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getNbL();
        int int24 = instance22.getNbC();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, 52);
        fr.umontpellier.iut.algogen.Coord coord52 = instance51.getStartingP();
        int int53 = instance51.getNbC();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Solution solution58 = instance57.greedySolver();
        java.lang.String str59 = instance51.toString(solution58);
        java.lang.String str60 = instance34.toString(solution58);
        boolean boolean61 = instance22.estValide(solution58);
        java.lang.String str62 = instance12.toString(solution58);
        int int63 = instance12.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(solution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList21 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord30, (int) 'a');
        int int33 = instance32.getNbC();
        int int34 = instance32.getK();
        fr.umontpellier.iut.algogen.Coord coord35 = instance32.getStartingP();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, 52);
        fr.umontpellier.iut.algogen.Coord coord52 = instance51.getStartingP();
        int int53 = instance51.getNbC();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Solution solution58 = instance57.greedySolver();
        java.lang.String str59 = instance51.toString(solution58);
        java.lang.String str60 = instance32.toString(solution58);
        boolean boolean61 = instance12.estValide(solution58);
        int int62 = instance12.getNbC();
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = instance12.piecePresente(coord63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(solution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        java.lang.Class<?> wildcardClass17 = instance15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        boolean[][] booleanArray17 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, 52);
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord24, (int) ' ');
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        int int37 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord38 = instance36.getStartingP();
        int int39 = instance36.getK();
        int int40 = instance36.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance36.getListeCoordPieces();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        java.lang.String str53 = instance52.toString();
        int int54 = instance52.getK();
        int int55 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord56 = instance52.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance52.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord58 = instance52.getStartingP();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord69, (int) (short) 100);
        int int72 = instance71.getNbC();
        int int73 = instance71.getK();
        boolean[][] booleanArray74 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, 52);
        fr.umontpellier.iut.algogen.Solution solution78 = instance77.greedySolver();
        boolean boolean79 = instance71.estValide(solution78);
        boolean boolean80 = instance52.estValide(solution78);
        boolean boolean81 = instance36.estValide(solution78);
        boolean[][] booleanArray82 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray82, coord83, 52);
        fr.umontpellier.iut.algogen.Solution solution86 = instance85.greedySolver();
        boolean boolean87 = instance36.estValide(solution86);
        java.lang.String str88 = instance26.toString(solution86);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = instance9.evaluerSolution(solution86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str53, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertNull(coord58);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNotNull(solution78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(solution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 1);
        java.lang.Class<?> wildcardClass31 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        fr.umontpellier.iut.algogen.Coord coord25 = instance23.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance23.getStartingP();
        int int27 = instance23.getNbC();
        java.lang.String str28 = instance23.toString();
        int int29 = instance23.getNbL();
        int int30 = instance23.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance23.getListeCoordPieces();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord44 = instance41.getStartingP();
        int int45 = instance41.getNbC();
        java.lang.String str46 = instance41.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        java.lang.String str57 = instance56.toString();
        int int58 = instance56.getK();
        int int59 = instance56.getK();
        fr.umontpellier.iut.algogen.Coord coord60 = instance56.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList61 = instance56.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord62 = instance56.getStartingP();
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[][] booleanArray69 = new boolean[][] { booleanArray65, booleanArray68 };
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord73, (int) (short) 100);
        int int76 = instance75.getNbC();
        int int77 = instance75.getK();
        boolean[][] booleanArray78 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, 52);
        fr.umontpellier.iut.algogen.Solution solution82 = instance81.greedySolver();
        boolean boolean83 = instance75.estValide(solution82);
        boolean boolean84 = instance56.estValide(solution82);
        java.lang.String str85 = instance41.toString(solution82);
        java.lang.String str86 = instance23.toString(solution82);
        java.lang.String str87 = instance12.toString(solution82);
        java.lang.String str88 = instance12.toString();
        int int89 = instance12.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(coordList61);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(solution82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str88, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord31 = instance28.getStartingP();
        int int32 = instance28.getNbC();
        java.lang.String str33 = instance28.toString();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        int int45 = instance43.getK();
        int int46 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance43.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord49 = instance43.getStartingP();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 100);
        int int63 = instance62.getNbC();
        int int64 = instance62.getK();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        boolean boolean70 = instance62.estValide(solution69);
        boolean boolean71 = instance43.estValide(solution69);
        java.lang.String str72 = instance28.toString(solution69);
        java.lang.String str73 = instance9.toString(solution69);
        java.lang.Class<?> wildcardClass74 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance24.piecePresente(coord25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getNbC();
        int int26 = instance24.getNbL();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getNbC();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        java.lang.String str41 = instance38.toString();
        java.lang.String str42 = instance38.toString();
        int int43 = instance38.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance38.getListeCoordPieces();
        java.lang.String str45 = instance38.toString();
        fr.umontpellier.iut.algogen.Coord coord46 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord47 = instance38.getStartingP();
        java.lang.String str48 = instance38.toString();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 1);
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, 52);
        fr.umontpellier.iut.algogen.Coord coord78 = instance77.getStartingP();
        int int79 = instance77.getNbC();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        java.lang.String str85 = instance77.toString(solution84);
        java.lang.String str86 = instance61.toString(solution84);
        boolean boolean87 = instance38.estValide(solution84);
        boolean boolean88 = instance24.estValide(solution84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = instance9.evaluerSolution(solution84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNull(coord78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        int int29 = instance27.getNbC();
        fr.umontpellier.iut.algogen.Solution solution30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = instance27.toString(solution30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        int int24 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord25 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance21.getStartingP();
        java.lang.String str28 = instance21.toString();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getNbL();
        int int40 = instance38.getNbC();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        java.lang.String str51 = instance50.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance50.toString(solution74);
        boolean boolean77 = instance38.estValide(solution74);
        java.lang.String str78 = instance21.toString(solution74);
        boolean boolean79 = instance9.estValide(solution74);
        java.lang.String str80 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str80, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        int int16 = instance12.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList21 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        int int13 = instance9.getK();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        fr.umontpellier.iut.algogen.Coord coord25 = instance23.getStartingP();
        java.lang.String str26 = instance23.toString();
        fr.umontpellier.iut.algogen.Coord coord27 = instance23.getStartingP();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        int int38 = instance37.getK();
        fr.umontpellier.iut.algogen.Coord coord39 = instance37.getStartingP();
        int int40 = instance37.getK();
        int int41 = instance37.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance37.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList43 = instance37.getListeCoordPieces();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        boolean boolean82 = instance37.estValide(solution79);
        boolean boolean83 = instance23.estValide(solution79);
        boolean boolean84 = instance9.estValide(solution79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList85 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNotNull(coordList43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        int int16 = instance15.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        int int33 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance30.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        java.lang.String str13 = instance12.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        fr.umontpellier.iut.algogen.Coord coord25 = instance23.getStartingP();
        int int26 = instance23.getK();
        int int27 = instance23.getNbC();
        int int28 = instance23.getNbC();
        java.lang.String str29 = instance23.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance23.getListeCoordPieces();
        int int31 = instance23.getNbC();
        int int32 = instance23.getK();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        java.lang.String str45 = instance42.toString();
        java.lang.String str46 = instance42.toString();
        int int47 = instance42.getK();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord69, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord72, 52);
        fr.umontpellier.iut.algogen.Coord coord75 = instance74.getStartingP();
        int int76 = instance74.getNbC();
        boolean[][] booleanArray77 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, 52);
        fr.umontpellier.iut.algogen.Solution solution81 = instance80.greedySolver();
        java.lang.String str82 = instance74.toString(solution81);
        java.lang.String str83 = instance57.toString(solution81);
        java.lang.String str84 = instance42.toString(solution81);
        java.lang.String str85 = instance23.toString(solution81);
        boolean boolean86 = instance12.estValide(solution81);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNull(coord75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(solution81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        int int20 = instance18.getNbC();
        int int21 = instance18.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getK();
        java.lang.String str35 = instance33.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        int int46 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance45.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord48 = instance45.getStartingP();
        int int49 = instance45.getNbC();
        java.lang.String str50 = instance45.toString();
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        java.lang.String str61 = instance60.toString();
        int int62 = instance60.getK();
        int int63 = instance60.getK();
        fr.umontpellier.iut.algogen.Coord coord64 = instance60.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList65 = instance60.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord66 = instance60.getStartingP();
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[][] booleanArray73 = new boolean[][] { booleanArray69, booleanArray72 };
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord77, (int) (short) 100);
        int int80 = instance79.getNbC();
        int int81 = instance79.getK();
        boolean[][] booleanArray82 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray82, coord83, 52);
        fr.umontpellier.iut.algogen.Solution solution86 = instance85.greedySolver();
        boolean boolean87 = instance79.estValide(solution86);
        boolean boolean88 = instance60.estValide(solution86);
        java.lang.String str89 = instance45.toString(solution86);
        java.lang.String str90 = instance33.toString(solution86);
        boolean boolean91 = instance21.estValide(solution86);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution92 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str50, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str61, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(coordList65);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(solution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 1);
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord39, (int) (short) 100);
        int int42 = instance41.getNbC();
        int int43 = instance41.getK();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Solution solution48 = instance47.greedySolver();
        boolean boolean49 = instance41.estValide(solution48);
        java.lang.String str50 = instance28.toString(solution48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = instance9.evaluerSolution(solution48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(solution48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ".x\n.x\n" + "'", str50, ".x\n.x\n");
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord31 = instance28.getStartingP();
        int int32 = instance28.getNbC();
        java.lang.String str33 = instance28.toString();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        int int45 = instance43.getK();
        int int46 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance43.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord49 = instance43.getStartingP();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 100);
        int int63 = instance62.getNbC();
        int int64 = instance62.getK();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        boolean boolean70 = instance62.estValide(solution69);
        boolean boolean71 = instance43.estValide(solution69);
        java.lang.String str72 = instance28.toString(solution69);
        java.lang.String str73 = instance9.toString(solution69);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = instance9.piecePresente(coord74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        java.lang.String str12 = instance9.toString();
        int int13 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 10);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution40 = instance39.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.String str29 = instance27.toString();
        java.lang.Class<?> wildcardClass30 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        java.lang.String str35 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord36 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord37 = instance28.getStartingP();
        java.lang.String str38 = instance28.toString();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 1);
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance51.toString(solution74);
        boolean boolean77 = instance28.estValide(solution74);
        boolean boolean78 = instance9.estValide(solution74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList79 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getNbL();
        int int17 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord32, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord35, (int) 'a');
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 100);
        int int51 = instance50.getNbC();
        int int52 = instance50.getK();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance56.greedySolver();
        boolean boolean58 = instance50.estValide(solution57);
        java.lang.String str59 = instance37.toString(solution57);
        boolean boolean60 = instance9.estValide(solution57);
        int int61 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList62 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[][] booleanArray23 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, 52);
        fr.umontpellier.iut.algogen.Solution solution27 = instance26.greedySolver();
        boolean boolean28 = instance21.estValide(solution27);
        java.lang.String str29 = instance21.toString();
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = instance21.piecePresente(coord30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(solution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 100);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 100);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getK();
        fr.umontpellier.iut.algogen.Coord coord24 = instance22.getStartingP();
        int int25 = instance22.getK();
        int int26 = instance22.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList27 = instance22.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance22.getListeCoordPieces();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        java.lang.String str39 = instance38.toString();
        int int40 = instance38.getK();
        int int41 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance38.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList43 = instance38.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord44 = instance38.getStartingP();
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord55, (int) (short) 100);
        int int58 = instance57.getNbC();
        int int59 = instance57.getK();
        boolean[][] booleanArray60 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, 52);
        fr.umontpellier.iut.algogen.Solution solution64 = instance63.greedySolver();
        boolean boolean65 = instance57.estValide(solution64);
        boolean boolean66 = instance38.estValide(solution64);
        boolean boolean67 = instance22.estValide(solution64);
        java.lang.String str68 = instance9.toString(solution64);
        java.lang.Class<?> wildcardClass69 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(coordList27);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(coordList43);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(solution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ".x\n.x\n" + "'", str68, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        int int19 = instance18.getNbC();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        int int30 = instance29.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance29.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance29.getListeCoordPieces();
        int int33 = instance29.getNbC();
        java.lang.String str34 = instance29.toString();
        int int35 = instance29.getNbC();
        int int36 = instance29.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance29.getListeCoordPieces();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        java.lang.String str48 = instance47.toString();
        int int49 = instance47.getK();
        int int50 = instance47.getK();
        fr.umontpellier.iut.algogen.Coord coord51 = instance47.getStartingP();
        int int52 = instance47.getNbC();
        int int53 = instance47.getK();
        int int54 = instance47.getK();
        fr.umontpellier.iut.algogen.Coord coord55 = instance47.getStartingP();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        int int60 = instance59.getK();
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 100);
        int int74 = instance73.getNbC();
        int int75 = instance73.getK();
        boolean[][] booleanArray76 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, 52);
        fr.umontpellier.iut.algogen.Solution solution80 = instance79.greedySolver();
        boolean boolean81 = instance73.estValide(solution80);
        boolean boolean82 = instance59.estValide(solution80);
        java.lang.String str83 = instance47.toString(solution80);
        java.lang.String str84 = instance29.toString(solution80);
        java.lang.String str85 = instance18.toString(solution80);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(coordList37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(solution80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        boolean[] booleanArray12 = new boolean[] { false, true };
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[][] booleanArray16 = new boolean[][] { booleanArray12, booleanArray15 };
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        fr.umontpellier.iut.algogen.Instance instance19 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord17, (int) '4');
        int int20 = instance19.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance19.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance19.getStartingP();
        int int23 = instance19.getNbC();
        java.lang.String str24 = instance19.toString();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        int int36 = instance34.getK();
        int int37 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord38 = instance34.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance34.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord40 = instance34.getStartingP();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 100);
        int int54 = instance53.getNbC();
        int int55 = instance53.getK();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        boolean boolean61 = instance53.estValide(solution60);
        boolean boolean62 = instance34.estValide(solution60);
        java.lang.String str63 = instance19.toString(solution60);
        java.lang.String str64 = instance9.toString(solution60);
        java.lang.Class<?> wildcardClass65 = solution60.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ".x\n.x\n" + "'", str63, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ".x\n.x\n" + "'", str64, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        java.lang.String str30 = instance27.toString();
        java.lang.String str31 = instance27.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.Class<?> wildcardClass29 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        int int13 = instance9.getK();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord30, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord33, 0);
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord52, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord55, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord58, (int) 'a');
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 100);
        int int74 = instance73.getNbC();
        int int75 = instance73.getK();
        boolean[][] booleanArray76 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, 52);
        fr.umontpellier.iut.algogen.Solution solution80 = instance79.greedySolver();
        boolean boolean81 = instance73.estValide(solution80);
        java.lang.String str82 = instance60.toString(solution80);
        java.lang.String str83 = instance35.toString(solution80);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = instance9.evaluerSolution(solution80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(solution80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        java.lang.String str57 = instance18.toString();
        fr.umontpellier.iut.algogen.Solution solution58 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int59 = instance18.evaluerSolution(solution58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbC();
        java.lang.String str18 = instance15.toString();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 1);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = instance47.getStartingP();
        int int49 = instance47.getNbC();
        boolean[][] booleanArray50 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, 52);
        fr.umontpellier.iut.algogen.Solution solution54 = instance53.greedySolver();
        java.lang.String str55 = instance47.toString(solution54);
        java.lang.String str56 = instance31.toString(solution54);
        java.lang.String str57 = instance15.toString(solution54);
        java.lang.Class<?> wildcardClass58 = instance15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(solution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        java.lang.Class<?> wildcardClass55 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getK();
        boolean[][] booleanArray30 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, 52);
        fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
        boolean boolean35 = instance27.estValide(solution34);
        boolean boolean36 = instance9.estValide(solution34);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList38 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(solution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(coordList37);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance9.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertNotNull(coordList21);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance18.estValide(solution22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNull(coord21);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution21 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList20);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        int int16 = instance15.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance15.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution21 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        int int32 = instance31.getK();
        fr.umontpellier.iut.algogen.Coord coord33 = instance31.getStartingP();
        int int34 = instance31.getNbC();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord48, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord51, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord54, (int) ' ');
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord70, 52);
        fr.umontpellier.iut.algogen.Coord coord73 = instance72.getStartingP();
        int int74 = instance72.getNbC();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        java.lang.String str80 = instance72.toString(solution79);
        java.lang.String str81 = instance56.toString(solution79);
        boolean boolean82 = instance31.estValide(solution79);
        // The following exception was thrown during execution in test generation
        try {
            int int83 = instance21.evaluerSolution(solution79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNull(coord73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getK();
        int int12 = instance9.getNbL();
        int int13 = instance9.getNbL();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        int int18 = instance17.getK();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 100);
        int int32 = instance31.getNbC();
        int int33 = instance31.getK();
        boolean[][] booleanArray34 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, 52);
        fr.umontpellier.iut.algogen.Solution solution38 = instance37.greedySolver();
        boolean boolean39 = instance31.estValide(solution38);
        boolean boolean40 = instance17.estValide(solution38);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = instance9.evaluerSolution(solution38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNotNull(solution38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 100);
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        int int30 = instance28.getK();
        java.lang.String str31 = instance28.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        int int45 = instance41.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance41.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance41.getListeCoordPieces();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        boolean boolean86 = instance41.estValide(solution83);
        java.lang.String str87 = instance28.toString(solution83);
        java.lang.String str88 = instance18.toString(solution83);
        java.lang.Class<?> wildcardClass89 = solution83.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        int int16 = instance15.getK();
        int int17 = instance15.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance15.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord30, (int) 'a');
        int int33 = instance32.getNbC();
        int int34 = instance32.getK();
        fr.umontpellier.iut.algogen.Coord coord35 = instance32.getStartingP();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, 52);
        fr.umontpellier.iut.algogen.Coord coord52 = instance51.getStartingP();
        int int53 = instance51.getNbC();
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Solution solution58 = instance57.greedySolver();
        java.lang.String str59 = instance51.toString(solution58);
        java.lang.String str60 = instance32.toString(solution58);
        boolean boolean61 = instance12.estValide(solution58);
        int int62 = instance12.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList63 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNotNull(solution58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 1);
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        int int41 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance40.getStartingP();
        int int43 = instance40.getK();
        int int44 = instance40.getNbC();
        int int45 = instance40.getNbC();
        int int46 = instance40.getNbL();
        int int47 = instance40.getNbL();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        int int58 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance57.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord60 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList61 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance57.getListeCoordPieces();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        java.lang.String str85 = instance57.toString(solution83);
        java.lang.String str86 = instance40.toString(solution83);
        boolean boolean87 = instance30.estValide(solution83);
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = instance30.piecePresente(coord88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(coordList61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord24, 52);
        fr.umontpellier.iut.algogen.Coord coord27 = instance26.getStartingP();
        int int28 = instance26.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        java.lang.String str34 = instance26.toString(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        java.lang.String str36 = instance9.toString();
        int int37 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList38 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".x\n.x\n" + "'", str34, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance30.getListeCoordPieces();
        java.lang.Class<?> wildcardClass35 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = instance24.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        java.lang.String str22 = instance21.toString();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord36, 52);
        fr.umontpellier.iut.algogen.Coord coord39 = instance38.getStartingP();
        int int40 = instance38.getNbC();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        java.lang.String str46 = instance38.toString(solution45);
        java.lang.String str47 = instance21.toString(solution45);
        boolean boolean48 = instance9.estValide(solution45);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = instance9.piecePresente(coord49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ".x\n.x\n" + "'", str47, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 52);
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        java.lang.String str35 = instance34.toString();
        int int36 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance34.getStartingP();
        int int38 = instance34.getK();
        int int39 = instance34.getNbC();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 100);
        int int53 = instance52.getNbC();
        int int54 = instance52.getK();
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance52.estValide(solution59);
        boolean boolean61 = instance34.estValide(solution59);
        java.lang.String str62 = instance24.toString(solution59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList63 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ".x\n.x\n" + "'", str62, ".x\n.x\n");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getNbC();
        java.lang.Class<?> wildcardClass30 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getK();
        int int30 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance27.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord33 = instance27.getStartingP();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord44, (int) (short) 100);
        int int47 = instance46.getNbC();
        int int48 = instance46.getK();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        boolean boolean54 = instance46.estValide(solution53);
        boolean boolean55 = instance27.estValide(solution53);
        java.lang.String str56 = instance9.toString(solution53);
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = instance9.piecePresente(coord57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getNbC();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        java.lang.String str41 = instance40.toString();
        int int42 = instance40.getK();
        int int43 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance40.getStartingP();
        int int45 = instance40.getNbC();
        int int46 = instance40.getK();
        int int47 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance40.getStartingP();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        int int53 = instance52.getK();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 100);
        int int67 = instance66.getNbC();
        int int68 = instance66.getK();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        boolean boolean74 = instance66.estValide(solution73);
        boolean boolean75 = instance52.estValide(solution73);
        java.lang.String str76 = instance40.toString(solution73);
        java.lang.String str77 = instance27.toString(solution73);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution78 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbC();
        java.lang.String str18 = instance15.toString();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 1);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = instance47.getStartingP();
        int int49 = instance47.getNbC();
        boolean[][] booleanArray50 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, 52);
        fr.umontpellier.iut.algogen.Solution solution54 = instance53.greedySolver();
        java.lang.String str55 = instance47.toString(solution54);
        java.lang.String str56 = instance31.toString(solution54);
        java.lang.String str57 = instance15.toString(solution54);
        fr.umontpellier.iut.algogen.Coord coord58 = instance15.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(solution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertNull(coord58);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        int int23 = instance22.getK();
        fr.umontpellier.iut.algogen.Coord coord24 = instance22.getStartingP();
        int int25 = instance22.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance22.getStartingP();
        int int27 = instance22.getK();
        int int28 = instance22.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance22.getListeCoordPieces();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        int int43 = instance42.getNbC();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution51 = null;
        java.lang.String str52 = instance50.toString(solution51);
        int int53 = instance50.getK();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 100);
        int int67 = instance66.getNbC();
        int int68 = instance66.getK();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        boolean boolean74 = instance66.estValide(solution73);
        boolean boolean75 = instance50.estValide(solution73);
        boolean boolean76 = instance42.estValide(solution73);
        boolean boolean77 = instance22.estValide(solution73);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = instance9.evaluerSolution(solution73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = instance9.piecePresente(coord12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        int int32 = instance30.getNbC();
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = instance30.piecePresente(coord33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord31, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord34, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord37, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord40, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord43, (int) (short) 10);
        int int46 = instance45.getK();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord63, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord66, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance68.getListeCoordPieces();
        int int70 = instance68.getK();
        boolean[][] booleanArray71 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, 52);
        fr.umontpellier.iut.algogen.Solution solution75 = instance74.greedySolver();
        boolean boolean76 = instance68.estValide(solution75);
        java.lang.String str77 = instance45.toString(solution75);
        java.lang.String str78 = instance9.toString(solution75);
        java.lang.String str79 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(solution75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str79, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.String str21 = instance18.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord23 = instance18.getStartingP();
        int int24 = instance18.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        java.lang.String str35 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord36 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord37 = instance28.getStartingP();
        java.lang.String str38 = instance28.toString();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        int int49 = instance48.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance48.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance48.getListeCoordPieces();
        int int52 = instance48.getNbC();
        fr.umontpellier.iut.algogen.Coord coord53 = instance48.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord54 = instance48.getStartingP();
        int int55 = instance48.getK();
        java.lang.String str56 = instance48.toString();
        int int57 = instance48.getNbC();
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[][] booleanArray64 = new boolean[][] { booleanArray60, booleanArray63 };
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, (int) '4');
        int int68 = instance67.getK();
        fr.umontpellier.iut.algogen.Coord coord69 = instance67.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord70 = instance67.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList71 = instance67.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList72 = instance67.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList73 = instance67.getListeCoordPieces();
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[] booleanArray79 = new boolean[] { false, true };
        boolean[][] booleanArray80 = new boolean[][] { booleanArray76, booleanArray79 };
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord84, (int) (short) 100);
        int int87 = instance86.getNbC();
        int int88 = instance86.getK();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance86.estValide(solution93);
        java.lang.String str95 = instance67.toString(solution93);
        java.lang.String str96 = instance48.toString(solution93);
        boolean boolean97 = instance28.estValide(solution93);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = instance9.evaluerSolution(solution93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str38, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(coordList71);
        org.junit.Assert.assertNotNull(coordList72);
        org.junit.Assert.assertNotNull(coordList73);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        fr.umontpellier.iut.algogen.Coord coord25 = instance23.getStartingP();
        java.lang.String str26 = instance23.toString();
        java.lang.String str27 = instance23.toString();
        int int28 = instance23.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance23.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance23.getListeCoordPieces();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord47, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord50 = instance49.getStartingP();
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        java.lang.String str61 = instance60.toString();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, 52);
        fr.umontpellier.iut.algogen.Coord coord78 = instance77.getStartingP();
        int int79 = instance77.getNbC();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        java.lang.String str85 = instance77.toString(solution84);
        java.lang.String str86 = instance60.toString(solution84);
        boolean boolean87 = instance49.estValide(solution84);
        boolean boolean88 = instance23.estValide(solution84);
        boolean boolean89 = instance9.estValide(solution84);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution90 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str61, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNull(coord78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 100);
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getNbL();
        int int35 = instance33.getNbC();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance45.toString(solution69);
        boolean boolean72 = instance33.estValide(solution69);
        java.lang.String str73 = instance23.toString(solution69);
        boolean boolean74 = instance9.estValide(solution69);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList75 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(coordList75);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        java.lang.String str35 = instance28.toString();
        int int36 = instance28.getNbL();
        int int37 = instance28.getNbL();
        fr.umontpellier.iut.algogen.Coord coord38 = instance28.getStartingP();
        int int39 = instance28.getNbL();
        java.lang.String str40 = instance28.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance28.getListeCoordPieces();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        int int52 = instance51.getK();
        fr.umontpellier.iut.algogen.Coord coord53 = instance51.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord54 = instance51.getStartingP();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 1);
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord81, 52);
        fr.umontpellier.iut.algogen.Coord coord84 = instance83.getStartingP();
        int int85 = instance83.getNbC();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        java.lang.String str91 = instance83.toString(solution90);
        java.lang.String str92 = instance67.toString(solution90);
        java.lang.String str93 = instance51.toString(solution90);
        boolean boolean94 = instance28.estValide(solution90);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = instance9.evaluerSolution(solution90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str40, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNull(coord84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getNbL();
        int int25 = instance23.getNbC();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        java.lang.String str36 = instance35.toString();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord50, 52);
        fr.umontpellier.iut.algogen.Coord coord53 = instance52.getStartingP();
        int int54 = instance52.getNbC();
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        java.lang.String str60 = instance52.toString(solution59);
        java.lang.String str61 = instance35.toString(solution59);
        boolean boolean62 = instance23.estValide(solution59);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = instance9.evaluerSolution(solution59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ".x\n.x\n" + "'", str61, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        java.lang.String str16 = instance12.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance12.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        int int19 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance9.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        java.lang.String str19 = instance18.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getNbC();
        java.lang.String str19 = instance9.toString();
        java.lang.Class<?> wildcardClass20 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.lang.String str17 = instance9.toString();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        int int30 = instance27.getNbL();
        fr.umontpellier.iut.algogen.Coord coord31 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance27.getStartingP();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getNbL();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution52 = null;
        java.lang.String str53 = instance51.toString(solution52);
        java.util.ArrayList<java.lang.Integer> intList54 = instance51.greedyPermut();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        int int66 = instance64.getK();
        int int67 = instance64.getK();
        fr.umontpellier.iut.algogen.Coord coord68 = instance64.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance64.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord70 = instance64.getStartingP();
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 100);
        int int84 = instance83.getNbC();
        int int85 = instance83.getK();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        boolean boolean91 = instance83.estValide(solution90);
        boolean boolean92 = instance64.estValide(solution90);
        java.lang.String str93 = instance51.toString(solution90);
        java.lang.String str94 = instance43.toString(solution90);
        java.lang.String str95 = instance27.toString(solution90);
        java.lang.String str96 = instance9.toString(solution90);
        java.lang.Class<?> wildcardClass97 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(intList54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance24.piecePresente(coord25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = coord17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance21.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance21.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbC();
        java.lang.Class<?> wildcardClass16 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass15 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.estValide(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getNbL();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = instance24.getStartingP();
        int int26 = instance24.getNbC();
        int int27 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance24.getStartingP();
        java.lang.Class<?> wildcardClass29 = instance24.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 1);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = instance47.getStartingP();
        int int49 = instance47.getNbC();
        boolean[][] booleanArray50 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, 52);
        fr.umontpellier.iut.algogen.Solution solution54 = instance53.greedySolver();
        java.lang.String str55 = instance47.toString(solution54);
        java.lang.String str56 = instance31.toString(solution54);
        boolean boolean57 = instance9.estValide(solution54);
        java.lang.String str58 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = instance9.piecePresente(coord59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(solution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance33.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbC();
        int int19 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance9.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        java.lang.String str13 = instance12.toString();
        fr.umontpellier.iut.algogen.Solution solution14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = instance12.evaluerSolution(solution14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 1);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        java.lang.String str53 = instance31.toString(solution51);
        java.lang.String str54 = instance9.toString(solution51);
        java.lang.Class<?> wildcardClass55 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ".x\n.x\n" + "'", str53, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 0);
        int int33 = instance32.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance43.estValide(solution93);
        java.lang.String str95 = instance32.toString(solution93);
        boolean boolean96 = instance9.estValide(solution93);
        int int97 = instance9.getNbC();
        java.lang.String str98 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str98, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Solution solution14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = instance9.estValide(solution14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = instance9.evaluerSolution(solution35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getNbC();
        java.lang.String str29 = instance24.toString();
        int int30 = instance24.getNbL();
        int int31 = instance24.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance24.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord45 = instance42.getStartingP();
        int int46 = instance42.getNbC();
        java.lang.String str47 = instance42.toString();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        java.lang.String str86 = instance42.toString(solution83);
        java.lang.String str87 = instance24.toString(solution83);
        java.lang.String str88 = instance9.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord89 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList90 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertNull(coord89);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        java.lang.String str27 = instance24.toString();
        java.lang.String str28 = instance24.toString();
        int int29 = instance24.getNbL();
        fr.umontpellier.iut.algogen.Coord coord30 = instance24.getStartingP();
        int int31 = instance24.getK();
        int int32 = instance24.getNbC();
        int int33 = instance24.getNbL();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        java.lang.String str46 = instance43.toString();
        java.lang.String str47 = instance43.toString();
        int int48 = instance43.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        java.lang.String str50 = instance43.toString();
        fr.umontpellier.iut.algogen.Coord coord51 = instance43.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord52 = instance43.getStartingP();
        java.lang.String str53 = instance43.toString();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 1);
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[][] booleanArray73 = new boolean[][] { booleanArray69, booleanArray72 };
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord77, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord80, 52);
        fr.umontpellier.iut.algogen.Coord coord83 = instance82.getStartingP();
        int int84 = instance82.getNbC();
        boolean[][] booleanArray85 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        fr.umontpellier.iut.algogen.Instance instance88 = new fr.umontpellier.iut.algogen.Instance(booleanArray85, coord86, 52);
        fr.umontpellier.iut.algogen.Solution solution89 = instance88.greedySolver();
        java.lang.String str90 = instance82.toString(solution89);
        java.lang.String str91 = instance66.toString(solution89);
        boolean boolean92 = instance43.estValide(solution89);
        boolean boolean93 = instance24.estValide(solution89);
        boolean boolean94 = instance9.estValide(solution89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList95 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str50, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str53, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNull(coord83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(solution89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[][] booleanArray23 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, 52);
        fr.umontpellier.iut.algogen.Solution solution27 = instance26.greedySolver();
        boolean boolean28 = instance21.estValide(solution27);
        java.lang.String str29 = instance21.toString();
        int int30 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution31 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(solution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getK();
        java.lang.String str41 = instance39.toString();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        int int52 = instance51.getK();
        fr.umontpellier.iut.algogen.Coord coord53 = instance51.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord54 = instance51.getStartingP();
        int int55 = instance51.getNbC();
        java.lang.String str56 = instance51.toString();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        java.lang.String str67 = instance66.toString();
        int int68 = instance66.getK();
        int int69 = instance66.getK();
        fr.umontpellier.iut.algogen.Coord coord70 = instance66.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList71 = instance66.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord72 = instance66.getStartingP();
        boolean[] booleanArray75 = new boolean[] { false, true };
        boolean[] booleanArray78 = new boolean[] { false, true };
        boolean[][] booleanArray79 = new boolean[][] { booleanArray75, booleanArray78 };
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord83, (int) (short) 100);
        int int86 = instance85.getNbC();
        int int87 = instance85.getK();
        boolean[][] booleanArray88 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        fr.umontpellier.iut.algogen.Instance instance91 = new fr.umontpellier.iut.algogen.Instance(booleanArray88, coord89, 52);
        fr.umontpellier.iut.algogen.Solution solution92 = instance91.greedySolver();
        boolean boolean93 = instance85.estValide(solution92);
        boolean boolean94 = instance66.estValide(solution92);
        java.lang.String str95 = instance51.toString(solution92);
        java.lang.String str96 = instance39.toString(solution92);
        boolean boolean97 = instance27.estValide(solution92);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution98 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str67, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(coordList71);
        org.junit.Assert.assertNull(coord72);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(solution92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getNbC();
        int int27 = instance25.getNbL();
        fr.umontpellier.iut.algogen.Coord coord28 = instance25.getStartingP();
        int int29 = instance25.getK();
        int int30 = instance25.getK();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 100);
        int int44 = instance43.getNbC();
        int int45 = instance43.getK();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        boolean boolean51 = instance43.estValide(solution50);
        java.lang.String str52 = instance25.toString(solution50);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = instance9.evaluerSolution(solution50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        java.lang.Class<?> wildcardClass28 = instance27.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbC();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = instance12.getStartingP();
        java.lang.String str14 = instance12.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance12.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance12.getListeCoordPieces();
        java.lang.String str16 = instance12.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getNbC();
        int int28 = instance26.getNbL();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.lang.String str30 = instance26.toString();
        java.lang.String str31 = instance26.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 1);
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord55, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord58, 52);
        fr.umontpellier.iut.algogen.Coord coord61 = instance60.getStartingP();
        int int62 = instance60.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        java.lang.String str68 = instance60.toString(solution67);
        java.lang.String str69 = instance44.toString(solution67);
        boolean boolean70 = instance26.estValide(solution67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = instance12.evaluerSolution(solution67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ".x\n.x\n" + "'", str68, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        int int24 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord25 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance21.getStartingP();
        java.lang.String str28 = instance21.toString();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getNbL();
        int int40 = instance38.getNbC();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        java.lang.String str51 = instance50.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance50.toString(solution74);
        boolean boolean77 = instance38.estValide(solution74);
        java.lang.String str78 = instance21.toString(solution74);
        boolean boolean79 = instance9.estValide(solution74);
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = instance9.piecePresente(coord80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }
}

