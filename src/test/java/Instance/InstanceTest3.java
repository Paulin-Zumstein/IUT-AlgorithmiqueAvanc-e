package Instance;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class InstanceTest3 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution40 = instance39.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        java.lang.String str18 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution23 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int24 = instance18.evaluerSolution(solution23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        int int12 = instance9.getNbC();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 100);
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        int int30 = instance28.getK();
        java.lang.String str31 = instance28.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        int int45 = instance41.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance41.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance41.getListeCoordPieces();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        boolean boolean86 = instance41.estValide(solution83);
        java.lang.String str87 = instance28.toString(solution83);
        java.lang.String str88 = instance18.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = instance18.piecePresente(coord89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, 0);
        int int31 = instance30.getK();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        int int45 = instance41.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance41.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance41.getListeCoordPieces();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        boolean boolean86 = instance41.estValide(solution83);
        boolean[][] booleanArray87 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        fr.umontpellier.iut.algogen.Instance instance90 = new fr.umontpellier.iut.algogen.Instance(booleanArray87, coord88, 52);
        fr.umontpellier.iut.algogen.Solution solution91 = instance90.greedySolver();
        boolean boolean92 = instance41.estValide(solution91);
        java.lang.String str93 = instance30.toString(solution91);
        boolean boolean94 = instance9.estValide(solution91);
        int int95 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution96 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(solution91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2 + "'", int95 == 2);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        java.lang.Class<?> wildcardClass67 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 100);
        int int30 = instance29.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance29.getListeCoordPieces();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance41.getStartingP();
        int int46 = instance41.getK();
        int int47 = instance41.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance41.getListeCoordPieces();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution70 = null;
        java.lang.String str71 = instance69.toString(solution70);
        int int72 = instance69.getK();
        boolean[] booleanArray75 = new boolean[] { false, true };
        boolean[] booleanArray78 = new boolean[] { false, true };
        boolean[][] booleanArray79 = new boolean[][] { booleanArray75, booleanArray78 };
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord83, (int) (short) 100);
        int int86 = instance85.getNbC();
        int int87 = instance85.getK();
        boolean[][] booleanArray88 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        fr.umontpellier.iut.algogen.Instance instance91 = new fr.umontpellier.iut.algogen.Instance(booleanArray88, coord89, 52);
        fr.umontpellier.iut.algogen.Solution solution92 = instance91.greedySolver();
        boolean boolean93 = instance85.estValide(solution92);
        boolean boolean94 = instance69.estValide(solution92);
        boolean boolean95 = instance61.estValide(solution92);
        boolean boolean96 = instance41.estValide(solution92);
        java.lang.String str97 = instance29.toString(solution92);
        boolean boolean98 = instance9.estValide(solution92);
        int int99 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(solution92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".x\n.x\n" + "'", str97, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution10 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        boolean[][] booleanArray11 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        fr.umontpellier.iut.algogen.Instance instance14 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord12, 52);
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord15, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        java.lang.String str19 = instance17.toString(solution18);
        java.util.ArrayList<java.lang.Integer> intList20 = instance17.greedyPermut();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        java.lang.String str31 = instance30.toString();
        int int32 = instance30.getK();
        int int33 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord36 = instance30.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 100);
        int int50 = instance49.getNbC();
        int int51 = instance49.getK();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        boolean boolean57 = instance49.estValide(solution56);
        boolean boolean58 = instance30.estValide(solution56);
        java.lang.String str59 = instance17.toString(solution56);
        java.lang.String str60 = instance9.toString(solution56);
        int int61 = instance9.getK();
        int int62 = instance9.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        int int67 = instance66.getK();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        boolean boolean89 = instance66.estValide(solution87);
        java.lang.String str90 = instance9.toString(solution87);
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean92 = instance9.piecePresente(coord91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 10);
        java.lang.Class<?> wildcardClass34 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        int int13 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getK();
        int int33 = instance30.getNbL();
        int int34 = instance30.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution35 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        java.lang.String str25 = instance24.toString();
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = instance24.piecePresente(coord26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 35\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 35\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        int int12 = instance9.getK();
        java.lang.Class<?> wildcardClass13 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        int int22 = instance21.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        int int31 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = instance30.piecePresente(coord32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        java.lang.String str18 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        int int12 = instance9.getNbC();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        int int31 = instance29.getK();
        java.lang.String str32 = instance29.toString();
        java.lang.String str33 = instance29.toString();
        int int34 = instance29.getK();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord59, 52);
        fr.umontpellier.iut.algogen.Coord coord62 = instance61.getStartingP();
        int int63 = instance61.getNbC();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        java.lang.String str69 = instance61.toString(solution68);
        java.lang.String str70 = instance44.toString(solution68);
        java.lang.String str71 = instance29.toString(solution68);
        java.lang.String str72 = instance9.toString(solution68);
        java.lang.Class<?> wildcardClass73 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution21 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        int int31 = instance29.getK();
        java.lang.String str32 = instance29.toString();
        java.lang.String str33 = instance29.toString();
        int int34 = instance29.getK();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord59, 52);
        fr.umontpellier.iut.algogen.Coord coord62 = instance61.getStartingP();
        int int63 = instance61.getNbC();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        java.lang.String str69 = instance61.toString(solution68);
        java.lang.String str70 = instance44.toString(solution68);
        java.lang.String str71 = instance29.toString(solution68);
        java.lang.String str72 = instance9.toString(solution68);
        int int73 = instance9.getK();
        int int74 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 1);
        java.lang.Class<?> wildcardClass19 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) -1);
        int int28 = instance27.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = coord13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 100);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.String str21 = instance18.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord23 = instance18.getStartingP();
        int int24 = instance18.getK();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 100);
        int int38 = instance37.getNbC();
        boolean[][] booleanArray39 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, 52);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution46 = null;
        java.lang.String str47 = instance45.toString(solution46);
        int int48 = instance45.getK();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance45.estValide(solution68);
        boolean boolean71 = instance37.estValide(solution68);
        java.lang.String str72 = instance18.toString(solution68);
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = instance18.piecePresente(coord73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.lang.String str14 = instance9.toString();
        java.lang.Class<?> wildcardClass15 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList23 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbL();
        int int21 = instance9.getNbC();
        java.lang.Class<?> wildcardClass22 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        java.util.ArrayList<java.lang.Integer> intList24 = instance20.greedyPermut();
        java.util.ArrayList<java.lang.Integer> intList25 = instance20.greedyPermut();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        int int36 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance35.getStartingP();
        int int38 = instance35.getNbC();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord52, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord55, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord58, (int) ' ');
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord74, 52);
        fr.umontpellier.iut.algogen.Coord coord77 = instance76.getStartingP();
        int int78 = instance76.getNbC();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        java.lang.String str84 = instance76.toString(solution83);
        java.lang.String str85 = instance60.toString(solution83);
        boolean boolean86 = instance35.estValide(solution83);
        java.lang.String str87 = instance20.toString(solution83);
        boolean boolean88 = instance9.estValide(solution83);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution89 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(intList25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNull(coord77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNull(coord18);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        int int19 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getNbL();
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance18.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.lang.Class<?> wildcardClass28 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        boolean[] booleanArray9 = new boolean[] { false, true };
        boolean[] booleanArray12 = new boolean[] { false, true };
        boolean[][] booleanArray13 = new boolean[][] { booleanArray9, booleanArray12 };
        fr.umontpellier.iut.algogen.Coord coord14 = null;
        fr.umontpellier.iut.algogen.Instance instance16 = new fr.umontpellier.iut.algogen.Instance(booleanArray13, coord14, (int) '4');
        int int17 = instance16.getNbL();
        int int18 = instance16.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        java.lang.String str29 = instance28.toString();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord43, 52);
        fr.umontpellier.iut.algogen.Coord coord46 = instance45.getStartingP();
        int int47 = instance45.getNbC();
        boolean[][] booleanArray48 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, 52);
        fr.umontpellier.iut.algogen.Solution solution52 = instance51.greedySolver();
        java.lang.String str53 = instance45.toString(solution52);
        java.lang.String str54 = instance28.toString(solution52);
        boolean boolean55 = instance16.estValide(solution52);
        boolean boolean56 = instance6.estValide(solution52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance6.greedySolver();
        java.lang.Class<?> wildcardClass58 = solution57.getClass();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(booleanArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(solution52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ".x\n.x\n" + "'", str53, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 97);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution37 = instance36.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = instance27.piecePresente(coord31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = coord19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 52);
        fr.umontpellier.iut.algogen.Coord coord33 = instance32.getStartingP();
        int int34 = instance32.getNbC();
        java.lang.String str35 = instance32.toString();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord52, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord55 = instance54.getStartingP();
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[][] booleanArray62 = new boolean[][] { booleanArray58, booleanArray61 };
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, (int) '4');
        java.lang.String str66 = instance65.toString();
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[][] booleanArray73 = new boolean[][] { booleanArray69, booleanArray72 };
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord77, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord80, 52);
        fr.umontpellier.iut.algogen.Coord coord83 = instance82.getStartingP();
        int int84 = instance82.getNbC();
        boolean[][] booleanArray85 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        fr.umontpellier.iut.algogen.Instance instance88 = new fr.umontpellier.iut.algogen.Instance(booleanArray85, coord86, 52);
        fr.umontpellier.iut.algogen.Solution solution89 = instance88.greedySolver();
        java.lang.String str90 = instance82.toString(solution89);
        java.lang.String str91 = instance65.toString(solution89);
        boolean boolean92 = instance54.estValide(solution89);
        java.lang.String str93 = instance32.toString(solution89);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = instance9.evaluerSolution(solution89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str66, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNull(coord83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(solution89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        java.lang.String str29 = instance26.toString();
        java.lang.String str30 = instance26.toString();
        int int31 = instance26.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        java.lang.String str33 = instance26.toString();
        int int34 = instance26.getNbL();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        int int45 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance44.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance44.getListeCoordPieces();
        int int48 = instance44.getNbC();
        java.lang.String str49 = instance44.toString();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord63, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord66, (int) 'a');
        int int69 = instance68.getNbC();
        int int70 = instance68.getK();
        fr.umontpellier.iut.algogen.Coord coord71 = instance68.getStartingP();
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[][] booleanArray78 = new boolean[][] { booleanArray74, booleanArray77 };
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord82, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord85, 52);
        fr.umontpellier.iut.algogen.Coord coord88 = instance87.getStartingP();
        int int89 = instance87.getNbC();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        java.lang.String str95 = instance87.toString(solution94);
        java.lang.String str96 = instance68.toString(solution94);
        boolean boolean97 = instance44.estValide(solution94);
        boolean boolean98 = instance26.estValide(solution94);
        boolean boolean99 = instance9.estValide(solution94);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNull(coord88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        int int21 = instance18.getNbC();
        int int22 = instance18.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        int int28 = instance25.getK();
        int int29 = instance25.getNbC();
        int int30 = instance25.getNbC();
        java.lang.String str31 = instance25.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance25.getListeCoordPieces();
        int int33 = instance25.getNbC();
        int int34 = instance25.getK();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        int int46 = instance44.getK();
        java.lang.String str47 = instance44.toString();
        java.lang.String str48 = instance44.toString();
        int int49 = instance44.getK();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord74, 52);
        fr.umontpellier.iut.algogen.Coord coord77 = instance76.getStartingP();
        int int78 = instance76.getNbC();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        java.lang.String str84 = instance76.toString(solution83);
        java.lang.String str85 = instance59.toString(solution83);
        java.lang.String str86 = instance44.toString(solution83);
        java.lang.String str87 = instance25.toString(solution83);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = instance9.evaluerSolution(solution83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNull(coord77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass17 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance21.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList27 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(coordList25);
        org.junit.Assert.assertNull(coord26);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        java.lang.String str55 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList56 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str55, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList56);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        boolean[][] booleanArray15 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray15, coord16, 52);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray15, coord19, (int) (short) 1);
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        int int32 = instance31.getNbL();
        int int33 = instance31.getNbC();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord55, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord58, 52);
        fr.umontpellier.iut.algogen.Coord coord61 = instance60.getStartingP();
        int int62 = instance60.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        java.lang.String str68 = instance60.toString(solution67);
        java.lang.String str69 = instance43.toString(solution67);
        boolean boolean70 = instance31.estValide(solution67);
        boolean boolean71 = instance21.estValide(solution67);
        fr.umontpellier.iut.algogen.Solution solution72 = instance21.greedySolver();
        // The following exception was thrown during execution in test generation
        try {
            int int73 = instance9.evaluerSolution(solution72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ".x\n.x\n" + "'", str68, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(solution72);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getK();
        boolean[][] booleanArray30 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, 52);
        fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
        boolean boolean35 = instance27.estValide(solution34);
        boolean boolean36 = instance9.estValide(solution34);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass38 = coordList37.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(solution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(coordList37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        java.lang.String str55 = instance9.toString();
        int int56 = instance9.getK();
        java.lang.String str57 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str55, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Coord coord38 = instance12.getStartingP();
        int int39 = instance12.getNbL();
        int int40 = instance12.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance12.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(coordList41);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        java.lang.Class<?> wildcardClass22 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        java.lang.String str25 = instance24.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList26 = instance24.getListeCoordPieces();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord37, (int) (short) 1);
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 100);
        int int53 = instance52.getNbC();
        int int54 = instance52.getK();
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance52.estValide(solution59);
        java.lang.String str61 = instance39.toString(solution59);
        // The following exception was thrown during execution in test generation
        try {
            int int62 = instance24.evaluerSolution(solution59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 35\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 35\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList26);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ".x\n.x\n" + "'", str61, ".x\n.x\n");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 10);
        java.lang.String str31 = instance30.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance38.getStartingP();
        int int42 = instance38.getNbC();
        java.lang.String str43 = instance38.toString();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        java.lang.String str82 = instance38.toString(solution79);
        java.lang.String str83 = instance28.toString(solution79);
        boolean boolean84 = instance15.estValide(solution79);
        int int85 = instance15.getNbL();
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = instance15.piecePresente(coord86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getK();
        int int33 = instance30.getNbL();
        int int34 = instance30.getNbC();
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = instance30.piecePresente(coord35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getNbL();
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = instance27.piecePresente(coord30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        int int38 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution39 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getNbL();
        boolean[][] booleanArray27 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution34 = null;
        java.lang.String str35 = instance33.toString(solution34);
        java.util.ArrayList<java.lang.Integer> intList36 = instance33.greedyPermut();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        int int48 = instance46.getK();
        int int49 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance46.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance46.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord52 = instance46.getStartingP();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 100);
        int int66 = instance65.getNbC();
        int int67 = instance65.getK();
        boolean[][] booleanArray68 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, 52);
        fr.umontpellier.iut.algogen.Solution solution72 = instance71.greedySolver();
        boolean boolean73 = instance65.estValide(solution72);
        boolean boolean74 = instance46.estValide(solution72);
        java.lang.String str75 = instance33.toString(solution72);
        java.lang.String str76 = instance25.toString(solution72);
        java.lang.String str77 = instance9.toString(solution72);
        int int78 = instance9.getNbL();
        java.lang.String str79 = instance9.toString();
        fr.umontpellier.iut.algogen.Solution solution80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = instance9.toString(solution80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(intList36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(solution72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str79, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        int int19 = instance18.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList7 = instance6.getListeCoordPieces();
        boolean[] booleanArray10 = new boolean[] { false, true };
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[][] booleanArray14 = new boolean[][] { booleanArray10, booleanArray13 };
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord21, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord24, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord27, (int) (short) 10);
        int int30 = instance29.getNbC();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        int int41 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance40.getStartingP();
        java.lang.String str43 = instance40.toString();
        java.lang.String str44 = instance40.toString();
        int int45 = instance40.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance40.getListeCoordPieces();
        java.lang.String str47 = instance40.toString();
        fr.umontpellier.iut.algogen.Coord coord48 = instance40.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance40.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 1);
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[][] booleanArray69 = new boolean[][] { booleanArray65, booleanArray68 };
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord73, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord76, 52);
        fr.umontpellier.iut.algogen.Coord coord79 = instance78.getStartingP();
        int int80 = instance78.getNbC();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        java.lang.String str86 = instance78.toString(solution85);
        java.lang.String str87 = instance62.toString(solution85);
        boolean boolean88 = instance40.estValide(solution85);
        java.lang.String str89 = instance29.toString(solution85);
        java.lang.String str90 = instance6.toString(solution85);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = instance6.getNbC();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(coordList7);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNull(coord79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance18.getStartingP();
        java.lang.String str21 = instance18.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        java.lang.String str23 = instance18.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str23, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution33 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance25.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        int int30 = instance25.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance25.getListeCoordPieces();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        int int45 = instance41.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance41.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance41.getListeCoordPieces();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        boolean boolean86 = instance41.estValide(solution83);
        boolean boolean87 = instance25.estValide(solution83);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = instance9.evaluerSolution(solution83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 100);
        int int46 = instance45.getNbC();
        int int47 = instance45.getK();
        boolean[][] booleanArray48 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, 52);
        fr.umontpellier.iut.algogen.Solution solution52 = instance51.greedySolver();
        boolean boolean53 = instance45.estValide(solution52);
        java.lang.String str54 = instance26.toString(solution52);
        java.lang.String str55 = instance9.toString(solution52);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution56 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(solution52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        int int16 = instance9.getK();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        java.lang.String str29 = instance26.toString();
        java.lang.String str30 = instance26.toString();
        int int31 = instance26.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        java.lang.String str33 = instance26.toString();
        int int34 = instance26.getNbL();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        int int45 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance44.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance44.getListeCoordPieces();
        int int48 = instance44.getNbC();
        java.lang.String str49 = instance44.toString();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord63, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord66, (int) 'a');
        int int69 = instance68.getNbC();
        int int70 = instance68.getK();
        fr.umontpellier.iut.algogen.Coord coord71 = instance68.getStartingP();
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[][] booleanArray78 = new boolean[][] { booleanArray74, booleanArray77 };
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord82, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord85, 52);
        fr.umontpellier.iut.algogen.Coord coord88 = instance87.getStartingP();
        int int89 = instance87.getNbC();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        java.lang.String str95 = instance87.toString(solution94);
        java.lang.String str96 = instance68.toString(solution94);
        boolean boolean97 = instance44.estValide(solution94);
        boolean boolean98 = instance26.estValide(solution94);
        boolean boolean99 = instance9.estValide(solution94);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNull(coord88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getK();
        int int18 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbC();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (short) 100);
        fr.umontpellier.iut.algogen.Solution solution37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = instance36.estValide(solution37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass18 = coordList17.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        int int20 = instance18.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList34 = instance33.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        int int29 = instance26.getK();
        int int30 = instance26.getNbC();
        java.lang.String str31 = instance26.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord48, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord51, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord54, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord57, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord60, (int) (short) 10);
        int int63 = instance62.getK();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord77, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord80, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord83, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList86 = instance85.getListeCoordPieces();
        int int87 = instance85.getK();
        boolean[][] booleanArray88 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        fr.umontpellier.iut.algogen.Instance instance91 = new fr.umontpellier.iut.algogen.Instance(booleanArray88, coord89, 52);
        fr.umontpellier.iut.algogen.Solution solution92 = instance91.greedySolver();
        boolean boolean93 = instance85.estValide(solution92);
        java.lang.String str94 = instance62.toString(solution92);
        java.lang.String str95 = instance26.toString(solution92);
        java.lang.String str96 = instance9.toString(solution92);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(coordList86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 97 + "'", int87 == 97);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(solution92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList21 = instance18.getListeCoordPieces();
        java.lang.String str22 = instance18.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList23 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNotNull(coordList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '4');
        java.lang.Class<?> wildcardClass16 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 1);
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = instance41.getStartingP();
        int int43 = instance41.getNbC();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Solution solution48 = instance47.greedySolver();
        java.lang.String str49 = instance41.toString(solution48);
        java.lang.String str50 = instance25.toString(solution48);
        java.lang.String str51 = instance9.toString(solution48);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution52 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(solution48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ".x\n.x\n" + "'", str49, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ".x\n.x\n" + "'", str50, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        java.lang.Class<?> wildcardClass16 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance15.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        java.lang.Class<?> wildcardClass25 = instance24.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        int int31 = instance27.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.Class<?> wildcardClass24 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getNbC();
        int int26 = instance24.getNbL();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getK();
        int int29 = instance24.getK();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        int int43 = instance42.getNbC();
        int int44 = instance42.getK();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Solution solution49 = instance48.greedySolver();
        boolean boolean50 = instance42.estValide(solution49);
        java.lang.String str51 = instance24.toString(solution49);
        java.lang.String str52 = instance9.toString(solution49);
        fr.umontpellier.iut.algogen.Coord coord53 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = instance9.piecePresente(coord54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(solution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertNull(coord53);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getNbL();
        java.lang.String str21 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance9.getListeCoordPieces();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        java.lang.String str33 = instance32.toString();
        int int34 = instance32.getK();
        java.lang.String str35 = instance32.toString();
        java.lang.String str36 = instance32.toString();
        int int37 = instance32.getK();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        java.lang.String str48 = instance47.toString();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord62, 52);
        fr.umontpellier.iut.algogen.Coord coord65 = instance64.getStartingP();
        int int66 = instance64.getNbC();
        boolean[][] booleanArray67 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, 52);
        fr.umontpellier.iut.algogen.Solution solution71 = instance70.greedySolver();
        java.lang.String str72 = instance64.toString(solution71);
        java.lang.String str73 = instance47.toString(solution71);
        java.lang.String str74 = instance32.toString(solution71);
        boolean boolean75 = instance9.estValide(solution71);
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = instance9.piecePresente(coord76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(solution71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ".x\n.x\n" + "'", str74, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getK();
        int int12 = instance9.getNbL();
        int int13 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance24.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution26 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList25);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution30 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = instance9.toString(solution18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getK();
        int int19 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        int int16 = instance15.getK();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        int int29 = instance26.getK();
        int int30 = instance26.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance26.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance26.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        java.lang.String str43 = instance42.toString();
        int int44 = instance42.getK();
        int int45 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance42.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord48 = instance42.getStartingP();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 100);
        int int62 = instance61.getNbC();
        int int63 = instance61.getK();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        boolean boolean69 = instance61.estValide(solution68);
        boolean boolean70 = instance42.estValide(solution68);
        boolean boolean71 = instance26.estValide(solution68);
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        boolean boolean77 = instance26.estValide(solution76);
        java.lang.String str78 = instance15.toString(solution76);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList79 = instance15.getListeCoordPieces();
        java.lang.Class<?> wildcardClass80 = coordList79.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertNotNull(coordList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = instance9.piecePresente(coord11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        int int20 = instance18.getNbC();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord34, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord37, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord40, (int) ' ');
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord56, 52);
        fr.umontpellier.iut.algogen.Coord coord59 = instance58.getStartingP();
        int int60 = instance58.getNbC();
        boolean[][] booleanArray61 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, 52);
        fr.umontpellier.iut.algogen.Solution solution65 = instance64.greedySolver();
        java.lang.String str66 = instance58.toString(solution65);
        java.lang.String str67 = instance42.toString(solution65);
        boolean boolean68 = instance18.estValide(solution65);
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = instance18.piecePresente(coord69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(solution65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ".x\n.x\n" + "'", str67, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution13 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        int int14 = instance12.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        int int18 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNull(coord19);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        java.lang.Class<?> wildcardClass16 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 100);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        java.lang.String str27 = instance26.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance26.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        boolean[][] booleanArray54 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, 52);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution61 = null;
        java.lang.String str62 = instance60.toString(solution61);
        int int63 = instance60.getK();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance60.estValide(solution83);
        java.lang.String str86 = instance9.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord87 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord88 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass89 = coord88.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertNull(coord87);
        org.junit.Assert.assertNull(coord88);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        int int24 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord25 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance21.getStartingP();
        java.lang.String str28 = instance21.toString();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getNbL();
        int int40 = instance38.getNbC();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        java.lang.String str51 = instance50.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance50.toString(solution74);
        boolean boolean77 = instance38.estValide(solution74);
        java.lang.String str78 = instance21.toString(solution74);
        boolean boolean79 = instance9.estValide(solution74);
        int int80 = instance9.getNbC();
        int int81 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList82 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        java.lang.Class<?> wildcardClass17 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = instance12.getStartingP();
        int int14 = instance12.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution15 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord13, 1);
        org.junit.Assert.assertNotNull(booleanArray0);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        int int16 = instance15.getK();
        int int17 = instance15.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance15.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList28 = instance27.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        int int16 = instance15.getNbC();
        java.lang.String str17 = instance15.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance15.getStartingP();
        int int19 = instance15.getNbC();
        int int20 = instance15.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getK();
        java.lang.Class<?> wildcardClass21 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        int int12 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution13 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        int int23 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution24 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList13 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        java.lang.Class<?> wildcardClass14 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbC();
        int int21 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList22 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        int int15 = instance9.getK();
        fr.umontpellier.iut.algogen.Solution solution16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.estValide(solution16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 1);
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance27.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        int int54 = instance9.getNbC();
        java.lang.Class<?> wildcardClass55 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        java.lang.Class<?> wildcardClass34 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNull(coord32);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = instance12.getStartingP();
        int int14 = instance12.getK();
        java.lang.String str15 = instance12.toString();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        java.lang.String str28 = instance25.toString();
        java.lang.String str29 = instance25.toString();
        int int30 = instance25.getK();
        int int31 = instance25.getNbC();
        int int32 = instance25.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        java.lang.String str45 = instance42.toString();
        java.lang.String str46 = instance42.toString();
        int int47 = instance42.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance42.getListeCoordPieces();
        java.lang.String str49 = instance42.toString();
        fr.umontpellier.iut.algogen.Coord coord50 = instance42.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord51 = instance42.getStartingP();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        int int62 = instance61.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance61.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord64 = instance61.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList65 = instance61.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList66 = instance61.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList67 = instance61.getListeCoordPieces();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        java.lang.String str89 = instance61.toString(solution87);
        java.lang.String str90 = instance42.toString(solution87);
        boolean boolean91 = instance25.estValide(solution87);
        java.lang.String str92 = instance12.toString(solution87);
        fr.umontpellier.iut.algogen.Coord coord93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = instance12.piecePresente(coord93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(coordList65);
        org.junit.Assert.assertNotNull(coordList66);
        org.junit.Assert.assertNotNull(coordList67);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList24 = instance21.getListeCoordPieces();
        int int25 = instance21.getNbC();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance21.getStartingP();
        int int28 = instance21.getK();
        java.lang.String str29 = instance21.toString();
        int int30 = instance21.getNbC();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        int int41 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance40.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord43 = instance40.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance40.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList45 = instance40.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance40.getListeCoordPieces();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 100);
        int int60 = instance59.getNbC();
        int int61 = instance59.getK();
        boolean[][] booleanArray62 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, 52);
        fr.umontpellier.iut.algogen.Solution solution66 = instance65.greedySolver();
        boolean boolean67 = instance59.estValide(solution66);
        java.lang.String str68 = instance40.toString(solution66);
        java.lang.String str69 = instance21.toString(solution66);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = instance9.evaluerSolution(solution66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNotNull(coordList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertNotNull(coordList45);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(solution66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ".x\n.x\n" + "'", str68, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbC();
        int int21 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord25 = instance24.getStartingP();
        boolean[][] booleanArray26 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, 52);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord33, (int) ' ');
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        int int46 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance45.getStartingP();
        int int48 = instance45.getK();
        int int49 = instance45.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList50 = instance45.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance45.getListeCoordPieces();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        java.lang.String str62 = instance61.toString();
        int int63 = instance61.getK();
        int int64 = instance61.getK();
        fr.umontpellier.iut.algogen.Coord coord65 = instance61.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList66 = instance61.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord67 = instance61.getStartingP();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        boolean boolean89 = instance61.estValide(solution87);
        boolean boolean90 = instance45.estValide(solution87);
        boolean[][] booleanArray91 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord92 = null;
        fr.umontpellier.iut.algogen.Instance instance94 = new fr.umontpellier.iut.algogen.Instance(booleanArray91, coord92, 52);
        fr.umontpellier.iut.algogen.Solution solution95 = instance94.greedySolver();
        boolean boolean96 = instance45.estValide(solution95);
        java.lang.String str97 = instance35.toString(solution95);
        java.lang.String str98 = instance24.toString(solution95);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution99 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(coordList50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str62, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(coordList66);
        org.junit.Assert.assertNull(coord67);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertNotNull(solution95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        fr.umontpellier.iut.algogen.Coord coord25 = instance23.getStartingP();
        int int26 = instance23.getK();
        int int27 = instance23.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance23.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance23.getListeCoordPieces();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        java.lang.String str40 = instance39.toString();
        int int41 = instance39.getK();
        int int42 = instance39.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance39.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance39.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord45 = instance39.getStartingP();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 100);
        int int59 = instance58.getNbC();
        int int60 = instance58.getK();
        boolean[][] booleanArray61 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, 52);
        fr.umontpellier.iut.algogen.Solution solution65 = instance64.greedySolver();
        boolean boolean66 = instance58.estValide(solution65);
        boolean boolean67 = instance39.estValide(solution65);
        boolean boolean68 = instance23.estValide(solution65);
        boolean boolean69 = instance9.estValide(solution65);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution70 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str40, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(solution65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getNbL();
        boolean[][] booleanArray27 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution34 = null;
        java.lang.String str35 = instance33.toString(solution34);
        java.util.ArrayList<java.lang.Integer> intList36 = instance33.greedyPermut();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        int int48 = instance46.getK();
        int int49 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance46.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance46.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord52 = instance46.getStartingP();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 100);
        int int66 = instance65.getNbC();
        int int67 = instance65.getK();
        boolean[][] booleanArray68 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, 52);
        fr.umontpellier.iut.algogen.Solution solution72 = instance71.greedySolver();
        boolean boolean73 = instance65.estValide(solution72);
        boolean boolean74 = instance46.estValide(solution72);
        java.lang.String str75 = instance33.toString(solution72);
        java.lang.String str76 = instance25.toString(solution72);
        java.lang.String str77 = instance9.toString(solution72);
        int int78 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = instance9.piecePresente(coord79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(intList36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(solution72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = coord12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = instance48.getStartingP();
        int int50 = instance48.getNbC();
        boolean[][] booleanArray51 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, 52);
        fr.umontpellier.iut.algogen.Solution solution55 = instance54.greedySolver();
        java.lang.String str56 = instance48.toString(solution55);
        java.lang.String str57 = instance32.toString(solution55);
        boolean boolean58 = instance9.estValide(solution55);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = instance9.piecePresente(coord59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(solution55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass20 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getNbL();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        int int32 = instance30.getNbC();
        java.lang.Class<?> wildcardClass33 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbC();
        java.lang.String str18 = instance15.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        int int14 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance18.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList21 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = instance9.toString(solution19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance18.getListeCoordPieces();
        int int58 = instance18.getK();
        int int59 = instance18.getNbL();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        int int70 = instance69.getK();
        fr.umontpellier.iut.algogen.Coord coord71 = instance69.getStartingP();
        int int72 = instance69.getK();
        int int73 = instance69.getNbC();
        java.lang.String str74 = instance69.toString();
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[] booleanArray80 = new boolean[] { false, true };
        boolean[][] booleanArray81 = new boolean[][] { booleanArray77, booleanArray80 };
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord85, (int) (short) 100);
        int int88 = instance87.getNbC();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance87.estValide(solution93);
        java.lang.String str95 = instance69.toString(solution93);
        java.lang.String str96 = instance18.toString(solution93);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str74, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray80), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (-1));
        int int22 = instance21.getNbL();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        int int33 = instance32.getNbC();
        int int34 = instance32.getNbL();
        fr.umontpellier.iut.algogen.Coord coord35 = instance32.getStartingP();
        java.lang.String str36 = instance32.toString();
        java.lang.String str37 = instance32.toString();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 1);
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord61, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord64, 52);
        fr.umontpellier.iut.algogen.Coord coord67 = instance66.getStartingP();
        int int68 = instance66.getNbC();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        java.lang.String str74 = instance66.toString(solution73);
        java.lang.String str75 = instance50.toString(solution73);
        boolean boolean76 = instance32.estValide(solution73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = instance21.evaluerSolution(solution73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNull(coord67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ".x\n.x\n" + "'", str74, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        int int31 = instance30.getNbC();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNull(coord32);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = instance21.getStartingP();
        java.lang.Class<?> wildcardClass23 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        int int19 = instance9.getK();
        java.lang.Class<?> wildcardClass20 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) (byte) 10);
        int int32 = instance31.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        int int45 = instance42.getK();
        int int46 = instance42.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance42.getListeCoordPieces();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        java.lang.String str59 = instance58.toString();
        int int60 = instance58.getK();
        int int61 = instance58.getK();
        fr.umontpellier.iut.algogen.Coord coord62 = instance58.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance58.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord64 = instance58.getStartingP();
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 100);
        int int78 = instance77.getNbC();
        int int79 = instance77.getK();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        boolean boolean85 = instance77.estValide(solution84);
        boolean boolean86 = instance58.estValide(solution84);
        boolean boolean87 = instance42.estValide(solution84);
        java.lang.String str88 = instance31.toString(solution84);
        boolean boolean89 = instance12.estValide(solution84);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution90 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str59, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        int int20 = instance18.getNbC();
        int int21 = instance18.getNbL();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        int int32 = instance30.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 97 + "'", int32 == 97);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 10);
        java.lang.Class<?> wildcardClass16 = instance15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getK();
        java.lang.Class<?> wildcardClass19 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 2);
        fr.umontpellier.iut.algogen.Coord coord22 = instance21.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance35.getListeCoordPieces();
        int int37 = instance35.getNbC();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord51, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord54, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord57, (int) ' ');
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord73, 52);
        fr.umontpellier.iut.algogen.Coord coord76 = instance75.getStartingP();
        int int77 = instance75.getNbC();
        boolean[][] booleanArray78 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, 52);
        fr.umontpellier.iut.algogen.Solution solution82 = instance81.greedySolver();
        java.lang.String str83 = instance75.toString(solution82);
        java.lang.String str84 = instance59.toString(solution82);
        boolean boolean85 = instance35.estValide(solution82);
        boolean boolean86 = instance9.estValide(solution82);
        java.lang.String str87 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord88 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNull(coord76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(solution82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str87, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord88);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        int int12 = instance9.getNbC();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 100);
        int int26 = instance25.getNbC();
        boolean[][] booleanArray27 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, 52);
        fr.umontpellier.iut.algogen.Solution solution31 = instance30.greedySolver();
        boolean boolean32 = instance25.estValide(solution31);
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = instance48.getStartingP();
        int int50 = instance48.getNbC();
        java.lang.String str51 = instance48.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 1);
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord78, 52);
        fr.umontpellier.iut.algogen.Coord coord81 = instance80.getStartingP();
        int int82 = instance80.getNbC();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        java.lang.String str88 = instance80.toString(solution87);
        java.lang.String str89 = instance64.toString(solution87);
        java.lang.String str90 = instance48.toString(solution87);
        boolean boolean91 = instance25.estValide(solution87);
        java.lang.String str92 = instance9.toString(solution87);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(solution31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNull(coord81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance9.piecePresente(coord13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = instance21.piecePresente(coord22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        int int14 = instance9.getK();
        int int15 = instance9.getK();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        java.lang.String str28 = instance25.toString();
        java.lang.String str29 = instance25.toString();
        int int30 = instance25.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance25.getListeCoordPieces();
        java.lang.String str32 = instance25.toString();
        fr.umontpellier.iut.algogen.Coord coord33 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance25.getListeCoordPieces();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 1);
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord61, 52);
        fr.umontpellier.iut.algogen.Coord coord64 = instance63.getStartingP();
        int int65 = instance63.getNbC();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        java.lang.String str71 = instance63.toString(solution70);
        java.lang.String str72 = instance47.toString(solution70);
        boolean boolean73 = instance25.estValide(solution70);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = instance9.evaluerSolution(solution70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 100);
        int int26 = instance25.getNbC();
        int int27 = instance25.getK();
        boolean[][] booleanArray28 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, 52);
        fr.umontpellier.iut.algogen.Solution solution32 = instance31.greedySolver();
        boolean boolean33 = instance25.estValide(solution32);
        java.lang.String str34 = instance12.toString(solution32);
        java.lang.Class<?> wildcardClass35 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(solution32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".x\n.x\n" + "'", str34, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 0);
        int int33 = instance32.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance43.estValide(solution93);
        java.lang.String str95 = instance32.toString(solution93);
        boolean boolean96 = instance9.estValide(solution93);
        int int97 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution98 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        int int31 = instance30.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = instance48.getStartingP();
        int int50 = instance48.getNbL();
        int int51 = instance48.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList52 = instance48.getListeCoordPieces();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 1);
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord79, 52);
        fr.umontpellier.iut.algogen.Coord coord82 = instance81.getStartingP();
        int int83 = instance81.getNbC();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        java.lang.String str89 = instance81.toString(solution88);
        java.lang.String str90 = instance65.toString(solution88);
        boolean boolean91 = instance48.estValide(solution88);
        boolean boolean92 = instance30.estValide(solution88);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution93 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(coordList52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNull(coord82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution28 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance9.getListeCoordPieces();
        int int20 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList21 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance18.getListeCoordPieces();
        int int58 = instance18.getK();
        int int59 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList60 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getNbL();
        int int32 = instance30.getK();
        int int33 = instance30.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList34 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList15 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord21 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance9.getStartingP();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord36, 52);
        fr.umontpellier.iut.algogen.Coord coord39 = instance38.getStartingP();
        int int40 = instance38.getNbC();
        java.lang.String str41 = instance38.toString();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 1);
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance54.toString(solution77);
        java.lang.String str80 = instance38.toString(solution77);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = instance9.evaluerSolution(solution77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        int int16 = instance15.getNbC();
        java.lang.String str17 = instance15.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance15.getStartingP();
        java.lang.String str19 = instance15.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbC();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getNbC();
        int int21 = instance18.getNbC();
        int int22 = instance18.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList23 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (-1));
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = instance12.piecePresente(coord13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance28.getListeCoordPieces();
        java.lang.String str35 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord36 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord37 = instance28.getStartingP();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        int int48 = instance47.getK();
        fr.umontpellier.iut.algogen.Coord coord49 = instance47.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord50 = instance47.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance47.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList52 = instance47.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList53 = instance47.getListeCoordPieces();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 100);
        int int67 = instance66.getNbC();
        int int68 = instance66.getK();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        boolean boolean74 = instance66.estValide(solution73);
        java.lang.String str75 = instance47.toString(solution73);
        java.lang.String str76 = instance28.toString(solution73);
        java.lang.String str77 = instance9.toString(solution73);
        java.lang.Class<?> wildcardClass78 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNotNull(coordList52);
        org.junit.Assert.assertNotNull(coordList53);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 100);
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getNbL();
        int int35 = instance33.getNbC();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance45.toString(solution69);
        boolean boolean72 = instance33.estValide(solution69);
        java.lang.String str73 = instance23.toString(solution69);
        boolean boolean74 = instance9.estValide(solution69);
        int int75 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        java.lang.String str15 = instance12.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        java.lang.String str17 = instance12.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        int int18 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance9.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        int int19 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        int int31 = instance30.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        java.lang.Class<?> wildcardClass33 = coordList32.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getK();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getNbC();
        int int30 = instance28.getNbL();
        fr.umontpellier.iut.algogen.Coord coord31 = instance28.getStartingP();
        int int32 = instance28.getK();
        int int33 = instance28.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord44, (int) (short) 100);
        int int47 = instance46.getNbC();
        int int48 = instance46.getK();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        boolean boolean54 = instance46.estValide(solution53);
        java.lang.String str55 = instance28.toString(solution53);
        java.lang.String str56 = instance9.toString(solution53);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution57 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution20 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 32);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 35);
        int int37 = instance36.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList25 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = instance9.piecePresente(coord14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord24, 52);
        fr.umontpellier.iut.algogen.Coord coord27 = instance26.getStartingP();
        int int28 = instance26.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        java.lang.String str34 = instance26.toString(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        java.lang.String str36 = instance9.toString();
        int int37 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord38 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".x\n.x\n" + "'", str34, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNull(coord38);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbC();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 1);
        int int16 = instance15.getNbC();
        int int17 = instance15.getK();
        java.lang.String str18 = instance15.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = instance9.piecePresente(coord15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord30, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord33, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance35.getListeCoordPieces();
        boolean[][] booleanArray37 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, 52);
        fr.umontpellier.iut.algogen.Solution solution41 = instance40.greedySolver();
        boolean boolean42 = instance35.estValide(solution41);
        boolean boolean43 = instance9.estValide(solution41);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution44 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(solution41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        int int26 = instance24.getK();
        java.lang.String str27 = instance24.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        int int38 = instance37.getK();
        fr.umontpellier.iut.algogen.Coord coord39 = instance37.getStartingP();
        int int40 = instance37.getK();
        int int41 = instance37.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance37.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList43 = instance37.getListeCoordPieces();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        boolean boolean82 = instance37.estValide(solution79);
        java.lang.String str83 = instance24.toString(solution79);
        java.lang.String str84 = instance9.toString(solution79);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution85 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNotNull(coordList43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass16 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        int int34 = instance33.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        int int19 = instance18.getNbC();
        java.lang.String str20 = instance18.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str20, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        int int7 = instance6.getNbL();
        boolean[] booleanArray10 = new boolean[] { false, true };
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[][] booleanArray14 = new boolean[][] { booleanArray10, booleanArray13 };
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord21, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord24, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord27, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord30, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord33, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord36, (int) 'a');
        int int39 = instance38.getK();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord53, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord56, (int) 'a');
        int int59 = instance58.getNbC();
        int int60 = instance58.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance58.getStartingP();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord75, 52);
        fr.umontpellier.iut.algogen.Coord coord78 = instance77.getStartingP();
        int int79 = instance77.getNbC();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        java.lang.String str85 = instance77.toString(solution84);
        java.lang.String str86 = instance58.toString(solution84);
        boolean boolean87 = instance38.estValide(solution84);
        java.lang.String str88 = instance6.toString(solution84);
        java.util.ArrayList<java.lang.Integer> intList89 = instance6.greedyPermut();
        // The following exception was thrown during execution in test generation
        try {
            int int90 = instance6.getNbC();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 97 + "'", int39 == 97);
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 97 + "'", int60 == 97);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNull(coord78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(intList89);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance9.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNull(coord20);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        boolean[][] booleanArray11 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        fr.umontpellier.iut.algogen.Instance instance14 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord12, 52);
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord15, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        java.lang.String str19 = instance17.toString(solution18);
        java.util.ArrayList<java.lang.Integer> intList20 = instance17.greedyPermut();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        java.lang.String str31 = instance30.toString();
        int int32 = instance30.getK();
        int int33 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord36 = instance30.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 100);
        int int50 = instance49.getNbC();
        int int51 = instance49.getK();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        boolean boolean57 = instance49.estValide(solution56);
        boolean boolean58 = instance30.estValide(solution56);
        java.lang.String str59 = instance17.toString(solution56);
        java.lang.String str60 = instance9.toString(solution56);
        int int61 = instance9.getK();
        int int62 = instance9.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        int int67 = instance66.getK();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        boolean boolean89 = instance66.estValide(solution87);
        java.lang.String str90 = instance9.toString(solution87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList91 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 100);
        int int29 = instance28.getNbC();
        int int30 = instance28.getK();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        boolean boolean36 = instance28.estValide(solution35);
        boolean boolean37 = instance9.estValide(solution35);
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution45 = null;
        java.lang.String str46 = instance44.toString(solution45);
        int int47 = instance44.getK();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 100);
        int int61 = instance60.getNbC();
        int int62 = instance60.getK();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        boolean boolean68 = instance60.estValide(solution67);
        boolean boolean69 = instance44.estValide(solution67);
        boolean boolean70 = instance9.estValide(solution67);
        int int71 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList72 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass73 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(coordList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getK();
        fr.umontpellier.iut.algogen.Coord coord28 = instance26.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance26.getListeCoordPieces();
        int int30 = instance26.getNbC();
        java.lang.String str31 = instance26.toString();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord48, (int) 'a');
        int int51 = instance50.getNbC();
        int int52 = instance50.getK();
        fr.umontpellier.iut.algogen.Coord coord53 = instance50.getStartingP();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord67, 52);
        fr.umontpellier.iut.algogen.Coord coord70 = instance69.getStartingP();
        int int71 = instance69.getNbC();
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        java.lang.String str77 = instance69.toString(solution76);
        java.lang.String str78 = instance50.toString(solution76);
        boolean boolean79 = instance26.estValide(solution76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = instance9.evaluerSolution(solution76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNull(coord28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 97 + "'", int52 == 97);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        int int19 = instance9.getK();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        int int30 = instance29.getK();
        fr.umontpellier.iut.algogen.Coord coord31 = instance29.getStartingP();
        java.lang.String str32 = instance29.toString();
        java.lang.String str33 = instance29.toString();
        int int34 = instance29.getNbL();
        fr.umontpellier.iut.algogen.Coord coord35 = instance29.getStartingP();
        int int36 = instance29.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance29.getListeCoordPieces();
        int int38 = instance29.getK();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        int int49 = instance48.getNbC();
        int int50 = instance48.getNbL();
        fr.umontpellier.iut.algogen.Coord coord51 = instance48.getStartingP();
        int int52 = instance48.getK();
        int int53 = instance48.getK();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord64, (int) (short) 100);
        int int67 = instance66.getNbC();
        int int68 = instance66.getK();
        boolean[][] booleanArray69 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, 52);
        fr.umontpellier.iut.algogen.Solution solution73 = instance72.greedySolver();
        boolean boolean74 = instance66.estValide(solution73);
        java.lang.String str75 = instance48.toString(solution73);
        java.lang.String str76 = instance29.toString(solution73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = instance9.evaluerSolution(solution73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(coordList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNotNull(solution73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        java.lang.Class<?> wildcardClass17 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        int int24 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord25 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord26 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord27 = instance21.getStartingP();
        java.lang.String str28 = instance21.toString();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getNbL();
        int int40 = instance38.getNbC();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        java.lang.String str51 = instance50.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord65, 52);
        fr.umontpellier.iut.algogen.Coord coord68 = instance67.getStartingP();
        int int69 = instance67.getNbC();
        boolean[][] booleanArray70 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, 52);
        fr.umontpellier.iut.algogen.Solution solution74 = instance73.greedySolver();
        java.lang.String str75 = instance67.toString(solution74);
        java.lang.String str76 = instance50.toString(solution74);
        boolean boolean77 = instance38.estValide(solution74);
        java.lang.String str78 = instance21.toString(solution74);
        boolean boolean79 = instance9.estValide(solution74);
        int int80 = instance9.getNbC();
        int int81 = instance9.getK();
        java.lang.Class<?> wildcardClass82 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNotNull(solution74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + ".x\n.x\n" + "'", str75, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 52 + "'", int81 == 52);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = coord16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.String str24 = instance21.toString();
        java.lang.String str25 = instance21.toString();
        java.lang.Class<?> wildcardClass26 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.lang.String str11 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        int int19 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        int int41 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance40.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord43 = instance40.getStartingP();
        int int44 = instance40.getNbC();
        java.lang.String str45 = instance40.toString();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        java.lang.String str56 = instance55.toString();
        int int57 = instance55.getK();
        int int58 = instance55.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance55.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList60 = instance55.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord61 = instance55.getStartingP();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 100);
        int int75 = instance74.getNbC();
        int int76 = instance74.getK();
        boolean[][] booleanArray77 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, 52);
        fr.umontpellier.iut.algogen.Solution solution81 = instance80.greedySolver();
        boolean boolean82 = instance74.estValide(solution81);
        boolean boolean83 = instance55.estValide(solution81);
        java.lang.String str84 = instance40.toString(solution81);
        java.lang.String str85 = instance30.toString(solution81);
        boolean boolean86 = instance9.estValide(solution81);
        int int87 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution88 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(coordList60);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(solution81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 100);
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getNbL();
        int int35 = instance33.getNbC();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        java.lang.String str46 = instance45.toString();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        java.lang.String str71 = instance45.toString(solution69);
        boolean boolean72 = instance33.estValide(solution69);
        java.lang.String str73 = instance23.toString(solution69);
        boolean boolean74 = instance9.estValide(solution69);
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = instance9.piecePresente(coord75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord36 = instance35.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord58, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord61, 52);
        fr.umontpellier.iut.algogen.Coord coord64 = instance63.getStartingP();
        int int65 = instance63.getNbC();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        java.lang.String str71 = instance63.toString(solution70);
        java.lang.String str72 = instance46.toString(solution70);
        boolean boolean73 = instance35.estValide(solution70);
        boolean boolean74 = instance9.estValide(solution70);
        java.lang.String str75 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList76 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str75, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = instance12.piecePresente(coord14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord20 = instance18.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNull(coord20);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        java.lang.String str55 = instance9.toString();
        int int56 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList57 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str55, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        int int35 = instance34.getK();
        fr.umontpellier.iut.algogen.Coord coord36 = instance34.getStartingP();
        java.lang.String str37 = instance34.toString();
        fr.umontpellier.iut.algogen.Coord coord38 = instance34.getStartingP();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        int int49 = instance48.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance48.getStartingP();
        int int51 = instance48.getK();
        int int52 = instance48.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList53 = instance48.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList54 = instance48.getListeCoordPieces();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        int int66 = instance64.getK();
        int int67 = instance64.getK();
        fr.umontpellier.iut.algogen.Coord coord68 = instance64.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance64.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord70 = instance64.getStartingP();
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 100);
        int int84 = instance83.getNbC();
        int int85 = instance83.getK();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        boolean boolean91 = instance83.estValide(solution90);
        boolean boolean92 = instance64.estValide(solution90);
        boolean boolean93 = instance48.estValide(solution90);
        boolean boolean94 = instance34.estValide(solution90);
        boolean boolean95 = instance21.estValide(solution90);
        fr.umontpellier.iut.algogen.Coord coord96 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution97 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int98 = instance21.evaluerSolution(solution97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(coordList53);
        org.junit.Assert.assertNotNull(coordList54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(coord96);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord25 = instance24.getStartingP();
        boolean[][] booleanArray26 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, 52);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord33, (int) ' ');
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        int int46 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance45.getStartingP();
        int int48 = instance45.getK();
        int int49 = instance45.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList50 = instance45.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance45.getListeCoordPieces();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        java.lang.String str62 = instance61.toString();
        int int63 = instance61.getK();
        int int64 = instance61.getK();
        fr.umontpellier.iut.algogen.Coord coord65 = instance61.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList66 = instance61.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord67 = instance61.getStartingP();
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        boolean boolean89 = instance61.estValide(solution87);
        boolean boolean90 = instance45.estValide(solution87);
        boolean[][] booleanArray91 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord92 = null;
        fr.umontpellier.iut.algogen.Instance instance94 = new fr.umontpellier.iut.algogen.Instance(booleanArray91, coord92, 52);
        fr.umontpellier.iut.algogen.Solution solution95 = instance94.greedySolver();
        boolean boolean96 = instance45.estValide(solution95);
        java.lang.String str97 = instance35.toString(solution95);
        java.lang.String str98 = instance24.toString(solution95);
        int int99 = instance24.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(coordList50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str62, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(coordList66);
        org.junit.Assert.assertNull(coord67);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(booleanArray91);
        org.junit.Assert.assertNotNull(solution95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 2 + "'", int99 == 2);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(coordList17);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        boolean[][] booleanArray0 = null;
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 32);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 32);
        fr.umontpellier.iut.algogen.Solution solution37 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int38 = instance36.evaluerSolution(solution37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbL();
        int int17 = instance9.getNbL();
        java.lang.Class<?> wildcardClass18 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        java.lang.String str14 = instance12.toString();
        int int15 = instance12.getK();
        int int16 = instance12.getNbC();
        java.lang.Class<?> wildcardClass17 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getK();
        int int23 = instance21.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList24 = instance21.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(coordList24);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getK();
        int int32 = instance30.getNbL();
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = instance30.piecePresente(coord33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        java.lang.String str22 = instance21.toString();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList24 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord23);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        int int19 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance9.estValide(solution59);
        java.lang.String str61 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = instance9.piecePresente(coord62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str61, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance27.getListeCoordPieces();
        int int32 = instance27.getK();
        int int33 = instance27.getNbL();
        java.lang.String str34 = instance27.toString();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        int int46 = instance44.getK();
        int int47 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance44.getStartingP();
        int int49 = instance44.getNbC();
        int int50 = instance44.getK();
        int int51 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord52 = instance44.getStartingP();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        int int57 = instance56.getK();
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[][] booleanArray64 = new boolean[][] { booleanArray60, booleanArray63 };
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord68, (int) (short) 100);
        int int71 = instance70.getNbC();
        int int72 = instance70.getK();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        boolean boolean78 = instance70.estValide(solution77);
        boolean boolean79 = instance56.estValide(solution77);
        java.lang.String str80 = instance44.toString(solution77);
        java.lang.String str81 = instance27.toString(solution77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = instance9.evaluerSolution(solution77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        int int13 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getK();
        int int30 = instance27.getK();
        int int31 = instance27.getNbC();
        int int32 = instance27.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getNbL();
        boolean[][] booleanArray44 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution51 = null;
        java.lang.String str52 = instance50.toString(solution51);
        java.util.ArrayList<java.lang.Integer> intList53 = instance50.greedyPermut();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        java.lang.String str64 = instance63.toString();
        int int65 = instance63.getK();
        int int66 = instance63.getK();
        fr.umontpellier.iut.algogen.Coord coord67 = instance63.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList68 = instance63.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord69 = instance63.getStartingP();
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[] booleanArray75 = new boolean[] { false, true };
        boolean[][] booleanArray76 = new boolean[][] { booleanArray72, booleanArray75 };
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord80, (int) (short) 100);
        int int83 = instance82.getNbC();
        int int84 = instance82.getK();
        boolean[][] booleanArray85 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        fr.umontpellier.iut.algogen.Instance instance88 = new fr.umontpellier.iut.algogen.Instance(booleanArray85, coord86, 52);
        fr.umontpellier.iut.algogen.Solution solution89 = instance88.greedySolver();
        boolean boolean90 = instance82.estValide(solution89);
        boolean boolean91 = instance63.estValide(solution89);
        java.lang.String str92 = instance50.toString(solution89);
        java.lang.String str93 = instance42.toString(solution89);
        java.lang.String str94 = instance27.toString(solution89);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = instance9.evaluerSolution(solution89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(intList53);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str64, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertNull(coord67);
        org.junit.Assert.assertNotNull(coordList68);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(solution89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord32 = instance30.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = instance30.piecePresente(coord33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNull(coord32);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getNbC();
        int int22 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = instance18.piecePresente(coord23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.lang.String str18 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (-1));
        java.lang.String str22 = instance21.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = -1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = -1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass17 = coordList16.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 0);
        int int33 = instance32.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        int int44 = instance43.getK();
        fr.umontpellier.iut.algogen.Coord coord45 = instance43.getStartingP();
        int int46 = instance43.getK();
        int int47 = instance43.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance43.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance43.getListeCoordPieces();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        java.lang.String str60 = instance59.toString();
        int int61 = instance59.getK();
        int int62 = instance59.getK();
        fr.umontpellier.iut.algogen.Coord coord63 = instance59.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList64 = instance59.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord65 = instance59.getStartingP();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance59.estValide(solution85);
        boolean boolean88 = instance43.estValide(solution85);
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance43.estValide(solution93);
        java.lang.String str95 = instance32.toString(solution93);
        boolean boolean96 = instance9.estValide(solution93);
        int int97 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Solution solution98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = instance9.toString(solution98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str60, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(coordList64);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 2 + "'", int97 == 2);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Solution solution4 = instance3.greedySolver();
        java.lang.String str5 = instance3.toString();
        fr.umontpellier.iut.algogen.Solution solution6 = instance3.greedySolver();
        java.lang.Class<?> wildcardClass7 = solution6.getClass();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(solution4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "k = 52\nnb pieces = 0\nstarting point = null\n" + "'", str5, "k = 52\nnb pieces = 0\nstarting point = null\n");
        org.junit.Assert.assertNotNull(solution6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        int int22 = instance21.getNbC();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        int int33 = instance32.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance32.getStartingP();
        java.lang.String str35 = instance32.toString();
        java.lang.String str36 = instance32.toString();
        int int37 = instance32.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList38 = instance32.getListeCoordPieces();
        java.lang.String str39 = instance32.toString();
        fr.umontpellier.iut.algogen.Coord coord40 = instance32.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance32.getListeCoordPieces();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 1);
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance54.toString(solution77);
        boolean boolean80 = instance32.estValide(solution77);
        java.lang.String str81 = instance21.toString(solution77);
        java.lang.Class<?> wildcardClass82 = instance21.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(coordList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        int int15 = instance12.getNbC();
        java.lang.Class<?> wildcardClass16 = instance12.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution31 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 100);
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getNbL();
        int int41 = instance39.getNbC();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        java.lang.String str52 = instance51.toString();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord66, 52);
        fr.umontpellier.iut.algogen.Coord coord69 = instance68.getStartingP();
        int int70 = instance68.getNbC();
        boolean[][] booleanArray71 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, 52);
        fr.umontpellier.iut.algogen.Solution solution75 = instance74.greedySolver();
        java.lang.String str76 = instance68.toString(solution75);
        java.lang.String str77 = instance51.toString(solution75);
        boolean boolean78 = instance39.estValide(solution75);
        java.lang.String str79 = instance29.toString(solution75);
        java.lang.String str80 = instance9.toString(solution75);
        fr.umontpellier.iut.algogen.Coord coord81 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str52, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(solution75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
        org.junit.Assert.assertNull(coord81);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        java.lang.String str12 = instance9.toString();
        int int13 = instance9.getK();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = coord24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNull(coord24);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance34.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance34.getListeCoordPieces();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        int int47 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance46.getStartingP();
        java.lang.String str49 = instance46.toString();
        java.lang.String str50 = instance46.toString();
        int int51 = instance46.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList52 = instance46.getListeCoordPieces();
        java.lang.String str53 = instance46.toString();
        fr.umontpellier.iut.algogen.Coord coord54 = instance46.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList55 = instance46.getListeCoordPieces();
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[][] booleanArray62 = new boolean[][] { booleanArray58, booleanArray61 };
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord66, (int) (short) 1);
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[][] booleanArray75 = new boolean[][] { booleanArray71, booleanArray74 };
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord79, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord82, 52);
        fr.umontpellier.iut.algogen.Coord coord85 = instance84.getStartingP();
        int int86 = instance84.getNbC();
        boolean[][] booleanArray87 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        fr.umontpellier.iut.algogen.Instance instance90 = new fr.umontpellier.iut.algogen.Instance(booleanArray87, coord88, 52);
        fr.umontpellier.iut.algogen.Solution solution91 = instance90.greedySolver();
        java.lang.String str92 = instance84.toString(solution91);
        java.lang.String str93 = instance68.toString(solution91);
        boolean boolean94 = instance46.estValide(solution91);
        boolean boolean95 = instance34.estValide(solution91);
        boolean boolean96 = instance15.estValide(solution91);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str50, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(coordList52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str53, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertNotNull(coordList55);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNull(coord85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(solution91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        java.lang.String str30 = instance29.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = instance46.getStartingP();
        int int48 = instance46.getNbC();
        boolean[][] booleanArray49 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, 52);
        fr.umontpellier.iut.algogen.Solution solution53 = instance52.greedySolver();
        java.lang.String str54 = instance46.toString(solution53);
        java.lang.String str55 = instance29.toString(solution53);
        boolean boolean56 = instance18.estValide(solution53);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList57 = instance18.getListeCoordPieces();
        int int58 = instance18.getK();
        int int59 = instance18.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution60 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(solution53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ".x\n.x\n" + "'", str54, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(coordList57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        java.lang.String str41 = instance38.toString();
        java.lang.String str42 = instance38.toString();
        int int43 = instance38.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance38.getListeCoordPieces();
        java.lang.String str45 = instance38.toString();
        fr.umontpellier.iut.algogen.Coord coord46 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord47 = instance38.getStartingP();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        int int58 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance57.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord60 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList61 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance57.getListeCoordPieces();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        java.lang.String str85 = instance57.toString(solution83);
        java.lang.String str86 = instance38.toString(solution83);
        java.lang.String str87 = instance27.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord88 = instance27.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution89 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(coordList61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertNull(coord88);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        int int17 = instance9.getK();
        int int18 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (-1));
        int int22 = instance21.getNbL();
        int int23 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList24 = instance21.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[][] booleanArray24 = new boolean[][] { booleanArray20, booleanArray23 };
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray24, coord25, (int) '4');
        int int28 = instance27.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord30 = instance27.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance27.getListeCoordPieces();
        int int32 = instance27.getNbL();
        java.lang.String str33 = instance27.toString();
        java.lang.String str34 = instance27.toString();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        java.lang.String str45 = instance44.toString();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord59, 52);
        fr.umontpellier.iut.algogen.Coord coord62 = instance61.getStartingP();
        int int63 = instance61.getNbC();
        boolean[][] booleanArray64 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, 52);
        fr.umontpellier.iut.algogen.Solution solution68 = instance67.greedySolver();
        java.lang.String str69 = instance61.toString(solution68);
        java.lang.String str70 = instance44.toString(solution68);
        boolean boolean71 = instance27.estValide(solution68);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = instance9.evaluerSolution(solution68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNotNull(solution68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        int int25 = instance24.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList26 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 10);
        java.lang.Class<?> wildcardClass25 = instance24.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        int int31 = instance28.getK();
        int int32 = instance28.getNbC();
        int int33 = instance28.getNbC();
        java.lang.String str34 = instance28.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance28.getListeCoordPieces();
        int int36 = instance28.getNbC();
        int int37 = instance28.getK();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        java.lang.String str48 = instance47.toString();
        int int49 = instance47.getK();
        java.lang.String str50 = instance47.toString();
        java.lang.String str51 = instance47.toString();
        int int52 = instance47.getK();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        java.lang.String str63 = instance62.toString();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord77, 52);
        fr.umontpellier.iut.algogen.Coord coord80 = instance79.getStartingP();
        int int81 = instance79.getNbC();
        boolean[][] booleanArray82 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray82, coord83, 52);
        fr.umontpellier.iut.algogen.Solution solution86 = instance85.greedySolver();
        java.lang.String str87 = instance79.toString(solution86);
        java.lang.String str88 = instance62.toString(solution86);
        java.lang.String str89 = instance47.toString(solution86);
        java.lang.String str90 = instance28.toString(solution86);
        boolean boolean91 = instance9.estValide(solution86);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str34, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str50, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str63, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertNull(coord80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(solution86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        java.lang.Class<?> wildcardClass22 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 0);
        int int31 = instance30.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getK();
        int int32 = instance30.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList33 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord34 = instance30.getStartingP();
        java.lang.String str35 = instance30.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(coordList33);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = -1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = -1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        int int18 = instance15.getNbC();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance38.getStartingP();
        int int42 = instance38.getNbC();
        java.lang.String str43 = instance38.toString();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        java.lang.String str82 = instance38.toString(solution79);
        java.lang.String str83 = instance28.toString(solution79);
        boolean boolean84 = instance15.estValide(solution79);
        int int85 = instance15.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList86 = instance15.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution87 = instance15.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(coordList86);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.Class<?> wildcardClass15 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        int int22 = instance21.getNbC();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        int int33 = instance32.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance32.getStartingP();
        java.lang.String str35 = instance32.toString();
        java.lang.String str36 = instance32.toString();
        int int37 = instance32.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList38 = instance32.getListeCoordPieces();
        java.lang.String str39 = instance32.toString();
        fr.umontpellier.iut.algogen.Coord coord40 = instance32.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance32.getListeCoordPieces();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 1);
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance54.toString(solution77);
        boolean boolean80 = instance32.estValide(solution77);
        java.lang.String str81 = instance21.toString(solution77);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution82 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(coordList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        int int15 = instance9.getK();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        int int30 = instance25.getK();
        int int31 = instance25.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance25.getListeCoordPieces();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 1);
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 100);
        int int59 = instance58.getNbC();
        int int60 = instance58.getK();
        boolean[][] booleanArray61 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, 52);
        fr.umontpellier.iut.algogen.Solution solution65 = instance64.greedySolver();
        boolean boolean66 = instance58.estValide(solution65);
        java.lang.String str67 = instance45.toString(solution65);
        boolean boolean68 = instance25.estValide(solution65);
        java.lang.String str69 = instance9.toString(solution65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList70 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(solution65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ".x\n.x\n" + "'", str67, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, 10);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = instance12.getNbC();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        int int18 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbL();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        java.lang.String str13 = instance12.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getK();
        java.lang.String str25 = instance23.toString();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        int int36 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance35.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord38 = instance35.getStartingP();
        int int39 = instance35.getNbC();
        java.lang.String str40 = instance35.toString();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        java.lang.String str51 = instance50.toString();
        int int52 = instance50.getK();
        int int53 = instance50.getK();
        fr.umontpellier.iut.algogen.Coord coord54 = instance50.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList55 = instance50.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord56 = instance50.getStartingP();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 100);
        int int70 = instance69.getNbC();
        int int71 = instance69.getK();
        boolean[][] booleanArray72 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, 52);
        fr.umontpellier.iut.algogen.Solution solution76 = instance75.greedySolver();
        boolean boolean77 = instance69.estValide(solution76);
        boolean boolean78 = instance50.estValide(solution76);
        java.lang.String str79 = instance35.toString(solution76);
        java.lang.String str80 = instance23.toString(solution76);
        java.lang.String str81 = instance12.toString(solution76);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str25, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str40, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 52 + "'", int53 == 52);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertNotNull(coordList55);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNotNull(solution76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ".x\n.x\n" + "'", str80, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        int int13 = instance12.getNbL();
        java.lang.String str14 = instance12.toString();
        int int15 = instance12.getK();
        int int16 = instance12.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.lang.String str13 = instance9.toString();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass18 = coordList17.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord13, (int) (short) 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance15.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution19 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        int int4 = instance3.getK();
        boolean[] booleanArray7 = new boolean[] { false, true };
        boolean[] booleanArray10 = new boolean[] { false, true };
        boolean[][] booleanArray11 = new boolean[][] { booleanArray7, booleanArray10 };
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        fr.umontpellier.iut.algogen.Instance instance14 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord12, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord15, (int) (short) 100);
        int int18 = instance17.getNbC();
        int int19 = instance17.getK();
        boolean[][] booleanArray20 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, 52);
        fr.umontpellier.iut.algogen.Solution solution24 = instance23.greedySolver();
        boolean boolean25 = instance17.estValide(solution24);
        boolean boolean26 = instance3.estValide(solution24);
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        int int37 = instance36.getNbL();
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution45 = null;
        java.lang.String str46 = instance44.toString(solution45);
        java.util.ArrayList<java.lang.Integer> intList47 = instance44.greedyPermut();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        java.lang.String str86 = instance44.toString(solution83);
        java.lang.String str87 = instance36.toString(solution83);
        boolean boolean88 = instance3.estValide(solution83);
        java.util.ArrayList<java.lang.Integer> intList89 = instance3.greedyPermut();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList90 = instance3.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertNotNull(booleanArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(solution24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(intList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(intList89);
        org.junit.Assert.assertNotNull(coordList90);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        java.lang.String str29 = instance28.toString();
        int int30 = instance28.getK();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        int int33 = instance28.getK();
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[][] booleanArray40 = new boolean[][] { booleanArray36, booleanArray39 };
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, (int) '4');
        java.lang.String str44 = instance43.toString();
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord55, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord58, 52);
        fr.umontpellier.iut.algogen.Coord coord61 = instance60.getStartingP();
        int int62 = instance60.getNbC();
        boolean[][] booleanArray63 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, 52);
        fr.umontpellier.iut.algogen.Solution solution67 = instance66.greedySolver();
        java.lang.String str68 = instance60.toString(solution67);
        java.lang.String str69 = instance43.toString(solution67);
        java.lang.String str70 = instance28.toString(solution67);
        java.lang.String str71 = instance9.toString(solution67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList72 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(solution67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ".x\n.x\n" + "'", str68, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + ".x\n.x\n" + "'", str71, ".x\n.x\n");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getNbL();
        int int15 = instance12.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        java.lang.String str27 = instance26.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance26.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord29 = instance26.getStartingP();
        java.lang.String str30 = instance26.toString();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord41, (int) (short) 100);
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        int int54 = instance53.getNbL();
        int int55 = instance53.getNbC();
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[][] booleanArray62 = new boolean[][] { booleanArray58, booleanArray61 };
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, (int) '4');
        java.lang.String str66 = instance65.toString();
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[][] booleanArray73 = new boolean[][] { booleanArray69, booleanArray72 };
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord77, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord80, 52);
        fr.umontpellier.iut.algogen.Coord coord83 = instance82.getStartingP();
        int int84 = instance82.getNbC();
        boolean[][] booleanArray85 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        fr.umontpellier.iut.algogen.Instance instance88 = new fr.umontpellier.iut.algogen.Instance(booleanArray85, coord86, 52);
        fr.umontpellier.iut.algogen.Solution solution89 = instance88.greedySolver();
        java.lang.String str90 = instance82.toString(solution89);
        java.lang.String str91 = instance65.toString(solution89);
        boolean boolean92 = instance53.estValide(solution89);
        java.lang.String str93 = instance43.toString(solution89);
        java.lang.String str94 = instance26.toString(solution89);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = instance12.evaluerSolution(solution89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str66, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNull(coord83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(solution89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord32, (int) ' ');
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord48, 52);
        fr.umontpellier.iut.algogen.Coord coord51 = instance50.getStartingP();
        int int52 = instance50.getNbC();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance56.greedySolver();
        java.lang.String str58 = instance50.toString(solution57);
        java.lang.String str59 = instance34.toString(solution57);
        boolean boolean60 = instance9.estValide(solution57);
        fr.umontpellier.iut.algogen.Coord coord61 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Solution solution62 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int63 = instance9.evaluerSolution(solution62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNull(coord51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ".x\n.x\n" + "'", str58, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(coord61);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getK();
        int int22 = instance18.getK();
        java.lang.String str23 = instance18.toString();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        int int34 = instance33.getK();
        fr.umontpellier.iut.algogen.Coord coord35 = instance33.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord36 = instance33.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance33.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList38 = instance33.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance33.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord40 = instance33.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance33.getStartingP();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 1);
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance54.toString(solution77);
        boolean boolean80 = instance33.estValide(solution77);
        boolean boolean81 = instance18.estValide(solution77);
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = instance18.piecePresente(coord82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str23, "k = 32\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertNull(coord35);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(coordList37);
        org.junit.Assert.assertNotNull(coordList38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        int int16 = instance9.getNbC();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 0);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) 1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance33.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord13, (int) (short) 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance18.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 32);
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord38, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord41, (int) 'a');
        int int44 = instance43.getNbC();
        int int45 = instance43.getNbC();
        fr.umontpellier.iut.algogen.Coord coord46 = instance43.getStartingP();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, 52);
        fr.umontpellier.iut.algogen.Coord coord63 = instance62.getStartingP();
        int int64 = instance62.getNbC();
        boolean[][] booleanArray65 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, 52);
        fr.umontpellier.iut.algogen.Solution solution69 = instance68.greedySolver();
        java.lang.String str70 = instance62.toString(solution69);
        boolean boolean71 = instance43.estValide(solution69);
        java.lang.String str72 = instance24.toString(solution69);
        java.lang.Class<?> wildcardClass73 = solution69.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertNotNull(solution69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ".x\n.x\n" + "'", str70, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 0);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = instance24.piecePresente(coord25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance9.estValide(solution59);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution61 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[][] booleanArray23 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, 52);
        fr.umontpellier.iut.algogen.Solution solution27 = instance26.greedySolver();
        boolean boolean28 = instance21.estValide(solution27);
        java.lang.String str29 = instance21.toString();
        int int30 = instance21.getNbC();
        int int31 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution32 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(solution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        boolean boolean34 = instance27.estValide(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        int int46 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance45.getStartingP();
        int int48 = instance45.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance45.getListeCoordPieces();
        int int50 = instance45.getNbC();
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        int int61 = instance60.getNbC();
        int int62 = instance60.getNbL();
        fr.umontpellier.iut.algogen.Coord coord63 = instance60.getStartingP();
        int int64 = instance60.getK();
        int int65 = instance60.getK();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        java.lang.String str87 = instance60.toString(solution85);
        java.lang.String str88 = instance45.toString(solution85);
        boolean boolean89 = instance9.estValide(solution85);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList90 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass91 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(coordList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord32, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord35, 52);
        fr.umontpellier.iut.algogen.Coord coord38 = instance37.getStartingP();
        int int39 = instance37.getNbC();
        java.lang.String str40 = instance37.toString();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord54, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord57, (int) ' ');
        fr.umontpellier.iut.algogen.Coord coord60 = instance59.getStartingP();
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        java.lang.String str71 = instance70.toString();
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[] booleanArray77 = new boolean[] { false, true };
        boolean[][] booleanArray78 = new boolean[][] { booleanArray74, booleanArray77 };
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord82, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord85, 52);
        fr.umontpellier.iut.algogen.Coord coord88 = instance87.getStartingP();
        int int89 = instance87.getNbC();
        boolean[][] booleanArray90 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord91 = null;
        fr.umontpellier.iut.algogen.Instance instance93 = new fr.umontpellier.iut.algogen.Instance(booleanArray90, coord91, 52);
        fr.umontpellier.iut.algogen.Solution solution94 = instance93.greedySolver();
        java.lang.String str95 = instance87.toString(solution94);
        java.lang.String str96 = instance70.toString(solution94);
        boolean boolean97 = instance59.estValide(solution94);
        java.lang.String str98 = instance37.toString(solution94);
        boolean boolean99 = instance21.estValide(solution94);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str40, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str71, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNull(coord88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertNotNull(booleanArray90);
        org.junit.Assert.assertNotNull(solution94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        int int12 = instance9.getNbC();
        int int13 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList14 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 100);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getNbL();
        int int43 = instance41.getNbC();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord68, 52);
        fr.umontpellier.iut.algogen.Coord coord71 = instance70.getStartingP();
        int int72 = instance70.getNbC();
        boolean[][] booleanArray73 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, 52);
        fr.umontpellier.iut.algogen.Solution solution77 = instance76.greedySolver();
        java.lang.String str78 = instance70.toString(solution77);
        java.lang.String str79 = instance53.toString(solution77);
        boolean boolean80 = instance41.estValide(solution77);
        java.lang.String str81 = instance31.toString(solution77);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = instance9.evaluerSolution(solution77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNull(coord71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertNotNull(solution77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + ".x\n.x\n" + "'", str79, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (-1));
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        int int19 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        int int41 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord42 = instance40.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord43 = instance40.getStartingP();
        int int44 = instance40.getNbC();
        java.lang.String str45 = instance40.toString();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        java.lang.String str56 = instance55.toString();
        int int57 = instance55.getK();
        int int58 = instance55.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance55.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList60 = instance55.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord61 = instance55.getStartingP();
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[][] booleanArray68 = new boolean[][] { booleanArray64, booleanArray67 };
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord72, (int) (short) 100);
        int int75 = instance74.getNbC();
        int int76 = instance74.getK();
        boolean[][] booleanArray77 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, 52);
        fr.umontpellier.iut.algogen.Solution solution81 = instance80.greedySolver();
        boolean boolean82 = instance74.estValide(solution81);
        boolean boolean83 = instance55.estValide(solution81);
        java.lang.String str84 = instance40.toString(solution81);
        java.lang.String str85 = instance30.toString(solution81);
        boolean boolean86 = instance9.estValide(solution81);
        int int87 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Solution solution88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = instance9.toString(solution88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(coordList60);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNotNull(solution81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = instance9.piecePresente(coord19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        java.lang.String str19 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) -1);
        java.lang.Class<?> wildcardClass25 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        int int16 = instance15.getNbC();
        java.lang.String str17 = instance15.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance33.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.String str29 = instance27.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution30 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList10 = instance9.getListeCoordPieces();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        int int21 = instance20.getK();
        fr.umontpellier.iut.algogen.Coord coord22 = instance20.getStartingP();
        java.lang.String str23 = instance20.toString();
        java.lang.String str24 = instance20.toString();
        int int25 = instance20.getNbL();
        fr.umontpellier.iut.algogen.Coord coord26 = instance20.getStartingP();
        int int27 = instance20.getK();
        int int28 = instance20.getNbC();
        int int29 = instance20.getNbL();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance39.getStartingP();
        java.lang.String str42 = instance39.toString();
        java.lang.String str43 = instance39.toString();
        int int44 = instance39.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList45 = instance39.getListeCoordPieces();
        java.lang.String str46 = instance39.toString();
        fr.umontpellier.iut.algogen.Coord coord47 = instance39.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord48 = instance39.getStartingP();
        java.lang.String str49 = instance39.toString();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 1);
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[][] booleanArray69 = new boolean[][] { booleanArray65, booleanArray68 };
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord70, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord73, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray69, coord76, 52);
        fr.umontpellier.iut.algogen.Coord coord79 = instance78.getStartingP();
        int int80 = instance78.getNbC();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        java.lang.String str86 = instance78.toString(solution85);
        java.lang.String str87 = instance62.toString(solution85);
        boolean boolean88 = instance39.estValide(solution85);
        boolean boolean89 = instance20.estValide(solution85);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = instance9.estValide(solution85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(coordList10);
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str23, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str43, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(coordList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str46, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertNull(coord79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList16 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance9.piecePresente(coord16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        java.lang.String str16 = instance12.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance35.getListeCoordPieces();
        int int37 = instance35.getNbC();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord51, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord54, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord57, (int) ' ');
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord73, 52);
        fr.umontpellier.iut.algogen.Coord coord76 = instance75.getStartingP();
        int int77 = instance75.getNbC();
        boolean[][] booleanArray78 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray78, coord79, 52);
        fr.umontpellier.iut.algogen.Solution solution82 = instance81.greedySolver();
        java.lang.String str83 = instance75.toString(solution82);
        java.lang.String str84 = instance59.toString(solution82);
        boolean boolean85 = instance35.estValide(solution82);
        java.lang.String str86 = instance12.toString(solution82);
        int int87 = instance12.getK();
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = instance12.piecePresente(coord88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNull(coord76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(booleanArray78);
        org.junit.Assert.assertNotNull(solution82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance21.getListeCoordPieces();
        java.lang.Class<?> wildcardClass26 = coordList25.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(coordList25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        java.lang.String str17 = instance9.toString();
        java.lang.String str18 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getK();
        boolean[][] booleanArray21 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, 52);
        int int25 = instance24.getK();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 100);
        int int39 = instance38.getNbC();
        int int40 = instance38.getK();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        boolean boolean46 = instance38.estValide(solution45);
        boolean boolean47 = instance24.estValide(solution45);
        java.lang.String str48 = instance9.toString(solution45);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ".x\n.x\n" + "'", str48, ".x\n.x\n");
        org.junit.Assert.assertNotNull(coordList49);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass19 = coordList18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        boolean[][] booleanArray11 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord12 = null;
        fr.umontpellier.iut.algogen.Instance instance14 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord12, 52);
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray11, coord15, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution18 = null;
        java.lang.String str19 = instance17.toString(solution18);
        java.util.ArrayList<java.lang.Integer> intList20 = instance17.greedyPermut();
        boolean[] booleanArray23 = new boolean[] { false, true };
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[][] booleanArray27 = new boolean[][] { booleanArray23, booleanArray26 };
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, (int) '4');
        java.lang.String str31 = instance30.toString();
        int int32 = instance30.getK();
        int int33 = instance30.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance30.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord36 = instance30.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 100);
        int int50 = instance49.getNbC();
        int int51 = instance49.getK();
        boolean[][] booleanArray52 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, 52);
        fr.umontpellier.iut.algogen.Solution solution56 = instance55.greedySolver();
        boolean boolean57 = instance49.estValide(solution56);
        boolean boolean58 = instance30.estValide(solution56);
        java.lang.String str59 = instance17.toString(solution56);
        java.lang.String str60 = instance9.toString(solution56);
        int int61 = instance9.getK();
        java.lang.String str62 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList63 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(booleanArray11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(solution56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ".x\n.x\n" + "'", str60, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str62, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.lang.String str28 = instance27.toString();
        int int29 = instance27.getNbC();
        java.lang.String str30 = instance27.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str28, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str30, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        int int32 = instance30.getNbC();
        int int33 = instance30.getNbC();
        int int34 = instance30.getNbC();
        java.lang.Class<?> wildcardClass35 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = instance24.getStartingP();
        int int26 = instance24.getNbC();
        int int27 = instance24.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList28 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList7 = instance6.getListeCoordPieces();
        int int8 = instance6.getNbL();
        int int9 = instance6.getNbL();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertNotNull(coordList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        int int13 = instance9.getK();
        int int14 = instance9.getK();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord31, (int) (byte) 10);
        int int34 = instance33.getNbC();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        int int45 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance44.getStartingP();
        int int47 = instance44.getK();
        int int48 = instance44.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList49 = instance44.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList50 = instance44.getListeCoordPieces();
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[][] booleanArray57 = new boolean[][] { booleanArray53, booleanArray56 };
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, (int) '4');
        java.lang.String str61 = instance60.toString();
        int int62 = instance60.getK();
        int int63 = instance60.getK();
        fr.umontpellier.iut.algogen.Coord coord64 = instance60.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList65 = instance60.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord66 = instance60.getStartingP();
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[][] booleanArray73 = new boolean[][] { booleanArray69, booleanArray72 };
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord74, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray73, coord77, (int) (short) 100);
        int int80 = instance79.getNbC();
        int int81 = instance79.getK();
        boolean[][] booleanArray82 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray82, coord83, 52);
        fr.umontpellier.iut.algogen.Solution solution86 = instance85.greedySolver();
        boolean boolean87 = instance79.estValide(solution86);
        boolean boolean88 = instance60.estValide(solution86);
        boolean boolean89 = instance44.estValide(solution86);
        java.lang.String str90 = instance33.toString(solution86);
        boolean boolean91 = instance9.estValide(solution86);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertNotNull(coordList49);
        org.junit.Assert.assertNotNull(coordList50);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str61, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 52 + "'", int63 == 52);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(coordList65);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertNotNull(booleanArray82);
        org.junit.Assert.assertNotNull(solution86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        int int22 = instance21.getK();
        int int23 = instance21.getK();
        int int24 = instance21.getNbC();
        fr.umontpellier.iut.algogen.Coord coord25 = instance21.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList26 = instance21.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = instance21.piecePresente(coord27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNull(coord25);
        org.junit.Assert.assertNotNull(coordList26);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord28 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = instance27.piecePresente(coord29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord28);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord27, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord30, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord33, 0);
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord46, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord49, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord52, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord55, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord58, (int) 'a');
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 100);
        int int74 = instance73.getNbC();
        int int75 = instance73.getK();
        boolean[][] booleanArray76 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, 52);
        fr.umontpellier.iut.algogen.Solution solution80 = instance79.greedySolver();
        boolean boolean81 = instance73.estValide(solution80);
        java.lang.String str82 = instance60.toString(solution80);
        java.lang.String str83 = instance35.toString(solution80);
        java.lang.String str84 = instance9.toString(solution80);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution85 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 100 + "'", int75 == 100);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(solution80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (short) 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, (int) (short) 0);
        java.lang.Class<?> wildcardClass40 = instance39.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        int int18 = instance9.getNbL();
        java.lang.String str19 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        java.lang.String str21 = instance9.toString();
        java.lang.String str22 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[][] booleanArray16 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        fr.umontpellier.iut.algogen.Instance instance19 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord17, 52);
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray16, coord20, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution23 = null;
        java.lang.String str24 = instance22.toString(solution23);
        java.util.ArrayList<java.lang.Integer> intList25 = instance22.greedyPermut();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        java.lang.String str36 = instance35.toString();
        int int37 = instance35.getK();
        int int38 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord39 = instance35.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList40 = instance35.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord41 = instance35.getStartingP();
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[][] booleanArray48 = new boolean[][] { booleanArray44, booleanArray47 };
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord49, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray48, coord52, (int) (short) 100);
        int int55 = instance54.getNbC();
        int int56 = instance54.getK();
        boolean[][] booleanArray57 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray57, coord58, 52);
        fr.umontpellier.iut.algogen.Solution solution61 = instance60.greedySolver();
        boolean boolean62 = instance54.estValide(solution61);
        boolean boolean63 = instance35.estValide(solution61);
        java.lang.String str64 = instance22.toString(solution61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = instance9.evaluerSolution(solution61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(intList25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertNotNull(coordList40);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertNotNull(solution61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getK();
        int int32 = instance30.getNbL();
        fr.umontpellier.iut.algogen.Coord coord33 = instance30.getStartingP();
        int int34 = instance30.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList35 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        boolean[][] booleanArray55 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, 52);
        fr.umontpellier.iut.algogen.Solution solution59 = instance58.greedySolver();
        boolean boolean60 = instance9.estValide(solution59);
        java.lang.String str61 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertNotNull(solution59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str61, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList62);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution17 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.String str24 = instance21.toString();
        int int25 = instance21.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList26 = instance21.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution27 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(coordList26);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        java.lang.String str15 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        int int19 = instance9.getK();
        int int20 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, 0);
        boolean[][] booleanArray40 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, 52);
        fr.umontpellier.iut.algogen.Solution solution44 = instance43.greedySolver();
        java.lang.String str45 = instance43.toString();
        fr.umontpellier.iut.algogen.Solution solution46 = instance43.greedySolver();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = instance39.estValide(solution46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(solution44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 0\nstarting point = null\n" + "'", str45, "k = 52\nnb pieces = 0\nstarting point = null\n");
        org.junit.Assert.assertNotNull(solution46);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) (byte) 10);
        int int32 = instance31.getNbC();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        int int45 = instance42.getK();
        int int46 = instance42.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance42.getListeCoordPieces();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        java.lang.String str59 = instance58.toString();
        int int60 = instance58.getK();
        int int61 = instance58.getK();
        fr.umontpellier.iut.algogen.Coord coord62 = instance58.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance58.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord64 = instance58.getStartingP();
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 100);
        int int78 = instance77.getNbC();
        int int79 = instance77.getK();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        boolean boolean85 = instance77.estValide(solution84);
        boolean boolean86 = instance58.estValide(solution84);
        boolean boolean87 = instance42.estValide(solution84);
        java.lang.String str88 = instance31.toString(solution84);
        boolean boolean89 = instance12.estValide(solution84);
        int int90 = instance12.getNbC();
        int int91 = instance12.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str59, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getK();
        boolean[][] booleanArray21 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, 52);
        int int25 = instance24.getK();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord36, (int) (short) 100);
        int int39 = instance38.getNbC();
        int int40 = instance38.getK();
        boolean[][] booleanArray41 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, 52);
        fr.umontpellier.iut.algogen.Solution solution45 = instance44.greedySolver();
        boolean boolean46 = instance38.estValide(solution45);
        boolean boolean47 = instance24.estValide(solution45);
        java.lang.String str48 = instance9.toString(solution45);
        java.lang.String str49 = instance9.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertNotNull(solution45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ".x\n.x\n" + "'", str48, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = instance12.getStartingP();
        int int14 = instance12.getK();
        java.lang.String str15 = instance12.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution16 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord33, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance35.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList37 = instance35.getListeCoordPieces();
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        int int48 = instance47.getK();
        fr.umontpellier.iut.algogen.Coord coord49 = instance47.getStartingP();
        java.lang.String str50 = instance47.toString();
        java.lang.String str51 = instance47.toString();
        int int52 = instance47.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList53 = instance47.getListeCoordPieces();
        java.lang.String str54 = instance47.toString();
        fr.umontpellier.iut.algogen.Coord coord55 = instance47.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList56 = instance47.getListeCoordPieces();
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[][] booleanArray63 = new boolean[][] { booleanArray59, booleanArray62 };
        fr.umontpellier.iut.algogen.Coord coord64 = null;
        fr.umontpellier.iut.algogen.Instance instance66 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord64, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray63, coord67, (int) (short) 1);
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[] booleanArray75 = new boolean[] { false, true };
        boolean[][] booleanArray76 = new boolean[][] { booleanArray72, booleanArray75 };
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord80, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord83 = null;
        fr.umontpellier.iut.algogen.Instance instance85 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord83, 52);
        fr.umontpellier.iut.algogen.Coord coord86 = instance85.getStartingP();
        int int87 = instance85.getNbC();
        boolean[][] booleanArray88 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        fr.umontpellier.iut.algogen.Instance instance91 = new fr.umontpellier.iut.algogen.Instance(booleanArray88, coord89, 52);
        fr.umontpellier.iut.algogen.Solution solution92 = instance91.greedySolver();
        java.lang.String str93 = instance85.toString(solution92);
        java.lang.String str94 = instance69.toString(solution92);
        boolean boolean95 = instance47.estValide(solution92);
        boolean boolean96 = instance35.estValide(solution92);
        java.lang.String str97 = instance9.toString(solution92);
        java.lang.Class<?> wildcardClass98 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertNotNull(coordList37);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str50, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNotNull(coordList53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord55);
        org.junit.Assert.assertNotNull(coordList56);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNull(coord86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(solution92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".x\n.x\n" + "'", str97, ".x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.lang.String str15 = instance9.toString();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 0);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.Class<?> wildcardClass21 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        int int28 = instance27.getK();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        java.lang.String str39 = instance38.toString();
        int int40 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance38.getStartingP();
        int int42 = instance38.getK();
        int int43 = instance38.getNbC();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord54, (int) (short) 100);
        int int57 = instance56.getNbC();
        int int58 = instance56.getK();
        boolean[][] booleanArray59 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, 52);
        fr.umontpellier.iut.algogen.Solution solution63 = instance62.greedySolver();
        boolean boolean64 = instance56.estValide(solution63);
        boolean boolean65 = instance38.estValide(solution63);
        java.lang.String str66 = instance27.toString(solution63);
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = instance27.piecePresente(coord67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertNotNull(solution63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        int int7 = instance6.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList8 = instance6.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(coordList8);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord34, (int) (short) 100);
        int int37 = instance36.getNbC();
        int int38 = instance36.getK();
        boolean[][] booleanArray39 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, 52);
        fr.umontpellier.iut.algogen.Solution solution43 = instance42.greedySolver();
        boolean boolean44 = instance36.estValide(solution43);
        boolean boolean45 = instance20.estValide(solution43);
        boolean boolean46 = instance12.estValide(solution43);
        int int47 = instance12.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution48 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(solution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        int int34 = instance33.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList35 = instance33.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution38 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass16 = coordList15.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, 0);
        int int31 = instance30.getK();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        int int42 = instance41.getK();
        fr.umontpellier.iut.algogen.Coord coord43 = instance41.getStartingP();
        int int44 = instance41.getK();
        int int45 = instance41.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList46 = instance41.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance41.getListeCoordPieces();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        java.lang.String str58 = instance57.toString();
        int int59 = instance57.getK();
        int int60 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord61 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord63 = instance57.getStartingP();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        boolean boolean85 = instance57.estValide(solution83);
        boolean boolean86 = instance41.estValide(solution83);
        boolean[][] booleanArray87 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord88 = null;
        fr.umontpellier.iut.algogen.Instance instance90 = new fr.umontpellier.iut.algogen.Instance(booleanArray87, coord88, 52);
        fr.umontpellier.iut.algogen.Solution solution91 = instance90.greedySolver();
        boolean boolean92 = instance41.estValide(solution91);
        java.lang.String str93 = instance30.toString(solution91);
        boolean boolean94 = instance9.estValide(solution91);
        java.lang.Class<?> wildcardClass95 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertNull(coord43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(coordList46);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNull(coord61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNull(coord63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(booleanArray87);
        org.junit.Assert.assertNotNull(solution91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord27 = instance25.getStartingP();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        int int30 = instance25.getK();
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[] booleanArray36 = new boolean[] { false, true };
        boolean[][] booleanArray37 = new boolean[][] { booleanArray33, booleanArray36 };
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray37, coord38, (int) '4');
        java.lang.String str41 = instance40.toString();
        int int42 = instance40.getK();
        int int43 = instance40.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance40.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList45 = instance40.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord46 = instance40.getStartingP();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 100);
        int int60 = instance59.getNbC();
        int int61 = instance59.getK();
        boolean[][] booleanArray62 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray62, coord63, 52);
        fr.umontpellier.iut.algogen.Solution solution66 = instance65.greedySolver();
        boolean boolean67 = instance59.estValide(solution66);
        boolean boolean68 = instance40.estValide(solution66);
        java.lang.String str69 = instance25.toString(solution66);
        boolean boolean70 = instance9.estValide(solution66);
        int int71 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertNotNull(coordList45);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertNotNull(solution66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ".x\n.x\n" + "'", str69, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[][] booleanArray23 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, 52);
        fr.umontpellier.iut.algogen.Solution solution27 = instance26.greedySolver();
        boolean boolean28 = instance21.estValide(solution27);
        int int29 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance21.getStartingP();
        int int31 = instance21.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNotNull(solution27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        int int15 = instance12.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance12.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution18 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        int int20 = instance18.getNbL();
        int int21 = instance18.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance18.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNotNull(coordList22);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        boolean[][] booleanArray15 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray15, coord16, 52);
        fr.umontpellier.iut.algogen.Solution solution19 = instance18.greedySolver();
        boolean boolean20 = instance12.estValide(solution19);
        int int21 = instance12.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertNotNull(solution19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 97);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance15.getListeCoordPieces();
        java.lang.String str17 = instance15.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        int int19 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord20 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance9.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertNull(coord20);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        int int14 = instance12.getK();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        fr.umontpellier.iut.algogen.Coord coord26 = instance24.getStartingP();
        int int27 = instance24.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance24.getListeCoordPieces();
        int int29 = instance24.getNbC();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getNbC();
        int int41 = instance39.getNbL();
        fr.umontpellier.iut.algogen.Coord coord42 = instance39.getStartingP();
        int int43 = instance39.getK();
        int int44 = instance39.getK();
        boolean[] booleanArray47 = new boolean[] { false, true };
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[][] booleanArray51 = new boolean[][] { booleanArray47, booleanArray50 };
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord55, (int) (short) 100);
        int int58 = instance57.getNbC();
        int int59 = instance57.getK();
        boolean[][] booleanArray60 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, 52);
        fr.umontpellier.iut.algogen.Solution solution64 = instance63.greedySolver();
        boolean boolean65 = instance57.estValide(solution64);
        java.lang.String str66 = instance39.toString(solution64);
        java.lang.String str67 = instance24.toString(solution64);
        boolean boolean68 = instance12.estValide(solution64);
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean70 = instance12.piecePresente(coord69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertNotNull(solution64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ".x\n.x\n" + "'", str67, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (short) 0);
        int int25 = instance24.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.String str29 = instance27.toString();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        int int40 = instance39.getK();
        fr.umontpellier.iut.algogen.Coord coord41 = instance39.getStartingP();
        int int42 = instance39.getNbC();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord56, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord59, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord62, (int) ' ');
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord78, 52);
        fr.umontpellier.iut.algogen.Coord coord81 = instance80.getStartingP();
        int int82 = instance80.getNbC();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        java.lang.String str88 = instance80.toString(solution87);
        java.lang.String str89 = instance64.toString(solution87);
        boolean boolean90 = instance39.estValide(solution87);
        java.lang.String str91 = instance27.toString(solution87);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution92 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNull(coord41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNull(coord81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (short) 1);
        int int31 = instance30.getK();
        java.lang.String str32 = instance30.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList33 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord31, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord34, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord37, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord40, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord43, (int) (short) 10);
        int int46 = instance45.getK();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord57, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord60, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord63, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord66, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance68.getListeCoordPieces();
        int int70 = instance68.getK();
        boolean[][] booleanArray71 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, 52);
        fr.umontpellier.iut.algogen.Solution solution75 = instance74.greedySolver();
        boolean boolean76 = instance68.estValide(solution75);
        java.lang.String str77 = instance45.toString(solution75);
        java.lang.String str78 = instance9.toString(solution75);
        fr.umontpellier.iut.algogen.Coord coord79 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord80 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertNotNull(solution75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ".x\n.x\n" + "'", str78, ".x\n.x\n");
        org.junit.Assert.assertNull(coord79);
        org.junit.Assert.assertNull(coord80);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass21 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        int int13 = instance12.getNbC();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        boolean[] booleanArray26 = new boolean[] { false, true };
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[][] booleanArray30 = new boolean[][] { booleanArray26, booleanArray29 };
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord34, (int) (short) 100);
        int int37 = instance36.getNbC();
        int int38 = instance36.getK();
        boolean[][] booleanArray39 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, 52);
        fr.umontpellier.iut.algogen.Solution solution43 = instance42.greedySolver();
        boolean boolean44 = instance36.estValide(solution43);
        boolean boolean45 = instance20.estValide(solution43);
        boolean boolean46 = instance12.estValide(solution43);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution47 = instance12.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNotNull(solution43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution7 = null;
        java.lang.String str8 = instance6.toString(solution7);
        int int9 = instance6.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList10 = instance6.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord11 = instance6.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(coordList10);
        org.junit.Assert.assertNull(coord11);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        java.lang.String str13 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbC();
        java.lang.String str17 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        int int29 = instance28.getK();
        fr.umontpellier.iut.algogen.Coord coord30 = instance28.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance28.getListeCoordPieces();
        int int32 = instance28.getNbC();
        fr.umontpellier.iut.algogen.Coord coord33 = instance28.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord34 = instance28.getStartingP();
        java.lang.String str35 = instance28.toString();
        fr.umontpellier.iut.algogen.Coord coord36 = instance28.getStartingP();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        int int47 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance46.getStartingP();
        int int49 = instance46.getNbL();
        fr.umontpellier.iut.algogen.Coord coord50 = instance46.getStartingP();
        int int51 = instance46.getK();
        int int52 = instance46.getK();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        java.lang.String str63 = instance62.toString();
        int int64 = instance62.getK();
        int int65 = instance62.getK();
        fr.umontpellier.iut.algogen.Coord coord66 = instance62.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList67 = instance62.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord68 = instance62.getStartingP();
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[][] booleanArray75 = new boolean[][] { booleanArray71, booleanArray74 };
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord79, (int) (short) 100);
        int int82 = instance81.getNbC();
        int int83 = instance81.getK();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        boolean boolean89 = instance81.estValide(solution88);
        boolean boolean90 = instance62.estValide(solution88);
        java.lang.String str91 = instance46.toString(solution88);
        java.lang.String str92 = instance28.toString(solution88);
        boolean boolean93 = instance9.estValide(solution88);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNull(coord30);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str63, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(coordList67);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution37 = instance36.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 100);
        int int30 = instance29.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution38 = null;
        java.lang.String str39 = instance37.toString(solution38);
        int int40 = instance37.getK();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 100);
        int int54 = instance53.getNbC();
        int int55 = instance53.getK();
        boolean[][] booleanArray56 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, 52);
        fr.umontpellier.iut.algogen.Solution solution60 = instance59.greedySolver();
        boolean boolean61 = instance53.estValide(solution60);
        boolean boolean62 = instance37.estValide(solution60);
        boolean boolean63 = instance29.estValide(solution60);
        boolean boolean64 = instance9.estValide(solution60);
        java.lang.Class<?> wildcardClass65 = solution60.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNotNull(solution60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        int int20 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance33.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        int int27 = instance26.getNbL();
        int int28 = instance26.getNbC();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        java.lang.String str39 = instance38.toString();
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[][] booleanArray46 = new boolean[][] { booleanArray42, booleanArray45 };
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord50, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord53, 52);
        fr.umontpellier.iut.algogen.Coord coord56 = instance55.getStartingP();
        int int57 = instance55.getNbC();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        java.lang.String str63 = instance55.toString(solution62);
        java.lang.String str64 = instance38.toString(solution62);
        boolean boolean65 = instance26.estValide(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        int int67 = instance9.getNbL();
        int int68 = instance9.getNbC();
        int int69 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ".x\n.x\n" + "'", str63, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ".x\n.x\n" + "'", str64, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, 0);
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord40, 1);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList31 = instance30.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList32 = instance30.getListeCoordPieces();
        int int33 = instance30.getNbL();
        int int34 = instance30.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList31);
        org.junit.Assert.assertNotNull(coordList32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 10);
        int int34 = instance33.getNbC();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        int int45 = instance44.getK();
        fr.umontpellier.iut.algogen.Coord coord46 = instance44.getStartingP();
        java.lang.String str47 = instance44.toString();
        java.lang.String str48 = instance44.toString();
        int int49 = instance44.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList50 = instance44.getListeCoordPieces();
        java.lang.String str51 = instance44.toString();
        fr.umontpellier.iut.algogen.Coord coord52 = instance44.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord53 = instance44.getStartingP();
        boolean[] booleanArray56 = new boolean[] { false, true };
        boolean[] booleanArray59 = new boolean[] { false, true };
        boolean[][] booleanArray60 = new boolean[][] { booleanArray56, booleanArray59 };
        fr.umontpellier.iut.algogen.Coord coord61 = null;
        fr.umontpellier.iut.algogen.Instance instance63 = new fr.umontpellier.iut.algogen.Instance(booleanArray60, coord61, (int) '4');
        int int64 = instance63.getK();
        fr.umontpellier.iut.algogen.Coord coord65 = instance63.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord66 = instance63.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList67 = instance63.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList68 = instance63.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList69 = instance63.getListeCoordPieces();
        boolean[] booleanArray72 = new boolean[] { false, true };
        boolean[] booleanArray75 = new boolean[] { false, true };
        boolean[][] booleanArray76 = new boolean[][] { booleanArray72, booleanArray75 };
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord80, (int) (short) 100);
        int int83 = instance82.getNbC();
        int int84 = instance82.getK();
        boolean[][] booleanArray85 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord86 = null;
        fr.umontpellier.iut.algogen.Instance instance88 = new fr.umontpellier.iut.algogen.Instance(booleanArray85, coord86, 52);
        fr.umontpellier.iut.algogen.Solution solution89 = instance88.greedySolver();
        boolean boolean90 = instance82.estValide(solution89);
        java.lang.String str91 = instance63.toString(solution89);
        java.lang.String str92 = instance44.toString(solution89);
        boolean boolean93 = instance33.estValide(solution89);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(coordList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNull(coord65);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(coordList67);
        org.junit.Assert.assertNotNull(coordList68);
        org.junit.Assert.assertNotNull(coordList69);
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertNotNull(booleanArray85);
        org.junit.Assert.assertNotNull(solution89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        int int13 = instance9.getK();
        int int14 = instance9.getNbL();
        java.lang.Class<?> wildcardClass15 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        int int17 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass21 = coordList20.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        int int11 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        boolean[][] booleanArray14 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord15 = null;
        fr.umontpellier.iut.algogen.Instance instance17 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord15, 52);
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray14, coord18, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution21 = null;
        java.lang.String str22 = instance20.toString(solution21);
        int int23 = instance20.getK();
        java.util.ArrayList<java.lang.Integer> intList24 = instance20.greedyPermut();
        java.util.ArrayList<java.lang.Integer> intList25 = instance20.greedyPermut();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        int int36 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance35.getStartingP();
        int int38 = instance35.getNbC();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord49, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord52, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord55, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord58 = null;
        fr.umontpellier.iut.algogen.Instance instance60 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord58, (int) ' ');
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[][] booleanArray67 = new boolean[][] { booleanArray63, booleanArray66 };
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord71, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord74, 52);
        fr.umontpellier.iut.algogen.Coord coord77 = instance76.getStartingP();
        int int78 = instance76.getNbC();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        java.lang.String str84 = instance76.toString(solution83);
        java.lang.String str85 = instance60.toString(solution83);
        boolean boolean86 = instance35.estValide(solution83);
        java.lang.String str87 = instance20.toString(solution83);
        boolean boolean88 = instance9.estValide(solution83);
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = instance9.piecePresente(coord89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(intList25);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNull(coord77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[][] booleanArray18 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, 52);
        int int22 = instance21.getK();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 100);
        int int36 = instance35.getNbC();
        int int37 = instance35.getK();
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Solution solution42 = instance41.greedySolver();
        boolean boolean43 = instance35.estValide(solution42);
        boolean boolean44 = instance21.estValide(solution42);
        java.lang.String str45 = instance9.toString(solution42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList46 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(solution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ".x\n.x\n" + "'", str45, ".x\n.x\n");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 52);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) -1);
        int int31 = instance30.getK();
        int int32 = instance30.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList33 = instance30.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = instance30.piecePresente(coord34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(coordList33);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        int int28 = instance27.getNbC();
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[][] booleanArray35 = new boolean[][] { booleanArray31, booleanArray34 };
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray35, coord36, (int) '4');
        int int39 = instance38.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance38.getStartingP();
        java.lang.String str41 = instance38.toString();
        java.lang.String str42 = instance38.toString();
        int int43 = instance38.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList44 = instance38.getListeCoordPieces();
        java.lang.String str45 = instance38.toString();
        fr.umontpellier.iut.algogen.Coord coord46 = instance38.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord47 = instance38.getStartingP();
        boolean[] booleanArray50 = new boolean[] { false, true };
        boolean[] booleanArray53 = new boolean[] { false, true };
        boolean[][] booleanArray54 = new boolean[][] { booleanArray50, booleanArray53 };
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        fr.umontpellier.iut.algogen.Instance instance57 = new fr.umontpellier.iut.algogen.Instance(booleanArray54, coord55, (int) '4');
        int int58 = instance57.getK();
        fr.umontpellier.iut.algogen.Coord coord59 = instance57.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord60 = instance57.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList61 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList62 = instance57.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance57.getListeCoordPieces();
        boolean[] booleanArray66 = new boolean[] { false, true };
        boolean[] booleanArray69 = new boolean[] { false, true };
        boolean[][] booleanArray70 = new boolean[][] { booleanArray66, booleanArray69 };
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord71, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord74 = null;
        fr.umontpellier.iut.algogen.Instance instance76 = new fr.umontpellier.iut.algogen.Instance(booleanArray70, coord74, (int) (short) 100);
        int int77 = instance76.getNbC();
        int int78 = instance76.getK();
        boolean[][] booleanArray79 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord80 = null;
        fr.umontpellier.iut.algogen.Instance instance82 = new fr.umontpellier.iut.algogen.Instance(booleanArray79, coord80, 52);
        fr.umontpellier.iut.algogen.Solution solution83 = instance82.greedySolver();
        boolean boolean84 = instance76.estValide(solution83);
        java.lang.String str85 = instance57.toString(solution83);
        java.lang.String str86 = instance38.toString(solution83);
        java.lang.String str87 = instance27.toString(solution83);
        fr.umontpellier.iut.algogen.Coord coord88 = instance27.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord89 = instance27.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str41, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(coordList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord46);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(coordList61);
        org.junit.Assert.assertNotNull(coordList62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray66), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertNotNull(solution83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + ".x\n.x\n" + "'", str85, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ".x\n.x\n" + "'", str86, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertNull(coord88);
        org.junit.Assert.assertNull(coord89);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        boolean[] booleanArray13 = new boolean[] { false, true };
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[][] booleanArray17 = new boolean[][] { booleanArray13, booleanArray16 };
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        fr.umontpellier.iut.algogen.Instance instance20 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord18, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord21, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray17, coord24, 52);
        fr.umontpellier.iut.algogen.Coord coord27 = instance26.getStartingP();
        int int28 = instance26.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        java.lang.String str34 = instance26.toString(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        java.lang.String str36 = instance9.toString();
        int int37 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord38 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ".x\n.x\n" + "'", str34, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNull(coord38);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList29 = instance27.getListeCoordPieces();
        int int30 = instance27.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution31 = instance27.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(coordList29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList23 = instance21.getListeCoordPieces();
        java.lang.String str24 = instance21.toString();
        int int25 = instance21.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList26 = instance21.getListeCoordPieces();
        java.lang.String str27 = instance21.toString();
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = instance21.piecePresente(coord28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(coordList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str24, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(coordList26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 97\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        java.lang.String str19 = instance18.toString();
        fr.umontpellier.iut.algogen.Coord coord20 = instance18.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = coord20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord20);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        int int29 = instance27.getK();
        boolean[][] booleanArray30 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray30, coord31, 52);
        fr.umontpellier.iut.algogen.Solution solution34 = instance33.greedySolver();
        boolean boolean35 = instance27.estValide(solution34);
        boolean boolean36 = instance9.estValide(solution34);
        java.lang.Class<?> wildcardClass37 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertNotNull(solution34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        int int15 = instance9.getK();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList17 = instance9.getListeCoordPieces();
        java.lang.String str18 = instance9.toString();
        int int19 = instance9.getNbC();
        int int20 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance9.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNotNull(coordList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution31 = instance30.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord21 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getK();
        int int15 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = instance9.piecePresente(coord17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getNbC();
        int int26 = instance24.getNbL();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getK();
        int int29 = instance24.getK();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        int int43 = instance42.getNbC();
        int int44 = instance42.getK();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Solution solution49 = instance48.greedySolver();
        boolean boolean50 = instance42.estValide(solution49);
        java.lang.String str51 = instance24.toString(solution49);
        java.lang.String str52 = instance9.toString(solution49);
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = instance9.piecePresente(coord53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(solution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        int int19 = instance9.getNbC();
        int int20 = instance9.getNbC();
        java.lang.Class<?> wildcardClass21 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, (int) ' ');
        int int10 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = instance9.piecePresente(coord11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        int int22 = instance21.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = instance9.piecePresente(coord18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbL();
        java.lang.String str15 = instance9.toString();
        java.lang.String str16 = instance9.toString();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        java.lang.String str27 = instance26.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord38, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord41, 52);
        fr.umontpellier.iut.algogen.Coord coord44 = instance43.getStartingP();
        int int45 = instance43.getNbC();
        boolean[][] booleanArray46 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray46, coord47, 52);
        fr.umontpellier.iut.algogen.Solution solution50 = instance49.greedySolver();
        java.lang.String str51 = instance43.toString(solution50);
        java.lang.String str52 = instance26.toString(solution50);
        boolean boolean53 = instance9.estValide(solution50);
        int int54 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = instance9.piecePresente(coord55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertNotNull(solution50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        boolean[][] booleanArray0 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord1 = null;
        fr.umontpellier.iut.algogen.Instance instance3 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord1, 52);
        fr.umontpellier.iut.algogen.Coord coord4 = null;
        fr.umontpellier.iut.algogen.Instance instance6 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord4, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord7, 0);
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord10, 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord13, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray0, coord16, 52);
        org.junit.Assert.assertNotNull(booleanArray0);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        java.lang.String str26 = instance25.toString();
        int int27 = instance25.getK();
        int int28 = instance25.getK();
        fr.umontpellier.iut.algogen.Coord coord29 = instance25.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList30 = instance25.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord31 = instance25.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 100);
        int int45 = instance44.getNbC();
        int int46 = instance44.getK();
        boolean[][] booleanArray47 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, 52);
        fr.umontpellier.iut.algogen.Solution solution51 = instance50.greedySolver();
        boolean boolean52 = instance44.estValide(solution51);
        boolean boolean53 = instance25.estValide(solution51);
        boolean boolean54 = instance9.estValide(solution51);
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 1);
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 100);
        int int81 = instance80.getNbC();
        int int82 = instance80.getK();
        boolean[][] booleanArray83 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray83, coord84, 52);
        fr.umontpellier.iut.algogen.Solution solution87 = instance86.greedySolver();
        boolean boolean88 = instance80.estValide(solution87);
        java.lang.String str89 = instance67.toString(solution87);
        boolean boolean90 = instance9.estValide(solution87);
        int int91 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord92 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass93 = coord92.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertNotNull(coordList30);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(solution51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 100 + "'", int82 == 100);
        org.junit.Assert.assertNotNull(booleanArray83);
        org.junit.Assert.assertNotNull(solution87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertNull(coord92);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList10 = instance9.getListeCoordPieces();
        java.lang.Class<?> wildcardClass11 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        int int22 = instance21.getNbC();
        int int23 = instance21.getNbC();
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = instance21.piecePresente(coord24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        int int23 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList24 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        java.lang.String str17 = instance9.toString();
        int int18 = instance9.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, 10);
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        int int47 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord48 = instance46.getStartingP();
        int int49 = instance46.getK();
        int int50 = instance46.getNbC();
        java.lang.String str51 = instance46.toString();
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 100);
        int int65 = instance64.getNbC();
        boolean[][] booleanArray66 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, 52);
        fr.umontpellier.iut.algogen.Solution solution70 = instance69.greedySolver();
        boolean boolean71 = instance64.estValide(solution70);
        java.lang.String str72 = instance46.toString(solution70);
        java.lang.String str73 = instance36.toString(solution70);
        int int74 = instance36.getK();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str51, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertNotNull(solution70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ".x\n.x\n" + "'", str72, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 32);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 10);
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        int int38 = instance37.getNbL();
        int int39 = instance37.getNbC();
        fr.umontpellier.iut.algogen.Coord coord40 = instance37.getStartingP();
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[][] booleanArray47 = new boolean[][] { booleanArray43, booleanArray46 };
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord48, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord51, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord54, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord57, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord60, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray47, coord63, (int) 'a');
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        java.lang.String str87 = instance65.toString(solution85);
        boolean boolean88 = instance37.estValide(solution85);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = instance27.evaluerSolution(solution85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray47);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + ".x\n.x\n" + "'", str87, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList34 = instance33.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        int int24 = instance23.getNbL();
        int int25 = instance23.getNbC();
        fr.umontpellier.iut.algogen.Coord coord26 = instance23.getStartingP();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord37, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord40, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord43, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord46, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord49 = null;
        fr.umontpellier.iut.algogen.Instance instance51 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord49, (int) 'a');
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[][] booleanArray58 = new boolean[][] { booleanArray54, booleanArray57 };
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord62, (int) (short) 100);
        int int65 = instance64.getNbC();
        int int66 = instance64.getK();
        boolean[][] booleanArray67 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray67, coord68, 52);
        fr.umontpellier.iut.algogen.Solution solution71 = instance70.greedySolver();
        boolean boolean72 = instance64.estValide(solution71);
        java.lang.String str73 = instance51.toString(solution71);
        boolean boolean74 = instance23.estValide(solution71);
        boolean boolean75 = instance9.estValide(solution71);
        int int76 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNull(coord26);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertNotNull(solution71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList31 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        int int22 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = instance21.piecePresente(coord23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.lang.String str13 = instance9.toString();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution14 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord31, (int) ' ');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance33.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList35 = instance33.getListeCoordPieces();
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[][] booleanArray42 = new boolean[][] { booleanArray38, booleanArray41 };
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray42, coord43, (int) '4');
        int int46 = instance45.getK();
        fr.umontpellier.iut.algogen.Coord coord47 = instance45.getStartingP();
        java.lang.String str48 = instance45.toString();
        java.lang.String str49 = instance45.toString();
        int int50 = instance45.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance45.getListeCoordPieces();
        java.lang.String str52 = instance45.toString();
        fr.umontpellier.iut.algogen.Coord coord53 = instance45.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList54 = instance45.getListeCoordPieces();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord65, (int) (short) 1);
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[][] booleanArray74 = new boolean[][] { booleanArray70, booleanArray73 };
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord75, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord78, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray74, coord81, 52);
        fr.umontpellier.iut.algogen.Coord coord84 = instance83.getStartingP();
        int int85 = instance83.getNbC();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        java.lang.String str91 = instance83.toString(solution90);
        java.lang.String str92 = instance67.toString(solution90);
        boolean boolean93 = instance45.estValide(solution90);
        boolean boolean94 = instance33.estValide(solution90);
        boolean boolean95 = instance9.estValide(solution90);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(coordList35);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(coord47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str52, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(coordList54);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertNull(coord84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + ".x\n.x\n" + "'", str91, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Coord coord38 = instance12.getStartingP();
        java.lang.String str39 = instance12.toString();
        java.lang.String str40 = instance12.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str39, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str40, "k = 1\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) -1);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) '#');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance24.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList26 = instance24.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList25);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = instance9.piecePresente(coord20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        int int31 = instance30.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList32 = instance30.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        int int20 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = instance9.piecePresente(coord21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 100);
        java.lang.String str13 = instance12.toString();
        int int14 = instance12.getK();
        int int15 = instance12.getK();
        fr.umontpellier.iut.algogen.Solution solution16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = instance12.estValide(solution16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 2);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord32, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord35, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord38 = null;
        fr.umontpellier.iut.algogen.Instance instance40 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord38, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord41, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord44, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord47, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord50, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord53, (int) (byte) -1);
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord56, 10);
        boolean[] booleanArray61 = new boolean[] { false, true };
        boolean[] booleanArray64 = new boolean[] { false, true };
        boolean[][] booleanArray65 = new boolean[][] { booleanArray61, booleanArray64 };
        fr.umontpellier.iut.algogen.Coord coord66 = null;
        fr.umontpellier.iut.algogen.Instance instance68 = new fr.umontpellier.iut.algogen.Instance(booleanArray65, coord66, (int) '4');
        int int69 = instance68.getK();
        fr.umontpellier.iut.algogen.Coord coord70 = instance68.getStartingP();
        int int71 = instance68.getK();
        int int72 = instance68.getNbC();
        java.lang.String str73 = instance68.toString();
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[] booleanArray79 = new boolean[] { false, true };
        boolean[][] booleanArray80 = new boolean[][] { booleanArray76, booleanArray79 };
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord84, (int) (short) 100);
        int int87 = instance86.getNbC();
        boolean[][] booleanArray88 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord89 = null;
        fr.umontpellier.iut.algogen.Instance instance91 = new fr.umontpellier.iut.algogen.Instance(booleanArray88, coord89, 52);
        fr.umontpellier.iut.algogen.Solution solution92 = instance91.greedySolver();
        boolean boolean93 = instance86.estValide(solution92);
        java.lang.String str94 = instance68.toString(solution92);
        java.lang.String str95 = instance58.toString(solution92);
        // The following exception was thrown during execution in test generation
        try {
            int int96 = instance21.evaluerSolution(solution92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 52 + "'", int71 == 52);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str73, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertNotNull(booleanArray88);
        org.junit.Assert.assertNotNull(solution92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[][] booleanArray31 = new boolean[][] { booleanArray27, booleanArray30 };
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord35, (int) (short) 100);
        int int38 = instance37.getNbC();
        int int39 = instance37.getK();
        boolean[][] booleanArray40 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord41 = null;
        fr.umontpellier.iut.algogen.Instance instance43 = new fr.umontpellier.iut.algogen.Instance(booleanArray40, coord41, 52);
        fr.umontpellier.iut.algogen.Solution solution44 = instance43.greedySolver();
        boolean boolean45 = instance37.estValide(solution44);
        java.lang.String str46 = instance24.toString(solution44);
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = instance24.piecePresente(coord47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertNotNull(solution44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ".x\n.x\n" + "'", str46, ".x\n.x\n");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        int int23 = instance21.getK();
        int int24 = instance21.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList25 = instance21.getListeCoordPieces();
        int int26 = instance21.getNbL();
        fr.umontpellier.iut.algogen.Solution solution27 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int28 = instance21.evaluerSolution(solution27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(coordList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        java.lang.String str11 = instance9.toString();
        boolean[] booleanArray14 = new boolean[] { false, true };
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[][] booleanArray18 = new boolean[][] { booleanArray14, booleanArray17 };
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, (int) '4');
        int int22 = instance21.getK();
        fr.umontpellier.iut.algogen.Coord coord23 = instance21.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord24 = instance21.getStartingP();
        int int25 = instance21.getNbC();
        java.lang.String str26 = instance21.toString();
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        java.lang.String str37 = instance36.toString();
        int int38 = instance36.getK();
        int int39 = instance36.getK();
        fr.umontpellier.iut.algogen.Coord coord40 = instance36.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList41 = instance36.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord42 = instance36.getStartingP();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord53, (int) (short) 100);
        int int56 = instance55.getNbC();
        int int57 = instance55.getK();
        boolean[][] booleanArray58 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray58, coord59, 52);
        fr.umontpellier.iut.algogen.Solution solution62 = instance61.greedySolver();
        boolean boolean63 = instance55.estValide(solution62);
        boolean boolean64 = instance36.estValide(solution62);
        java.lang.String str65 = instance21.toString(solution62);
        java.lang.String str66 = instance9.toString(solution62);
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = instance9.piecePresente(coord67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str11, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertNull(coord24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str26, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str37, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNotNull(coordList41);
        org.junit.Assert.assertNull(coord42);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertNotNull(solution62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ".x\n.x\n" + "'", str65, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ".x\n.x\n" + "'", str66, ".x\n.x\n");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance21.getListeCoordPieces();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord36 = null;
        fr.umontpellier.iut.algogen.Instance instance38 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord36, 52);
        fr.umontpellier.iut.algogen.Coord coord39 = instance38.getStartingP();
        int int40 = instance38.getNbL();
        int int41 = instance38.getNbC();
        int int42 = instance38.getNbC();
        boolean[][] booleanArray43 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, 52);
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution50 = null;
        java.lang.String str51 = instance49.toString(solution50);
        java.util.ArrayList<java.lang.Integer> intList52 = instance49.greedyPermut();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        java.lang.String str63 = instance62.toString();
        int int64 = instance62.getK();
        int int65 = instance62.getK();
        fr.umontpellier.iut.algogen.Coord coord66 = instance62.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList67 = instance62.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord68 = instance62.getStartingP();
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[] booleanArray74 = new boolean[] { false, true };
        boolean[][] booleanArray75 = new boolean[][] { booleanArray71, booleanArray74 };
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord79, (int) (short) 100);
        int int82 = instance81.getNbC();
        int int83 = instance81.getK();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        boolean boolean89 = instance81.estValide(solution88);
        boolean boolean90 = instance62.estValide(solution88);
        java.lang.String str91 = instance49.toString(solution88);
        java.lang.String str92 = instance38.toString(solution88);
        boolean boolean93 = instance21.estValide(solution88);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution94 = instance21.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(intList52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str63, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertNotNull(coordList67);
        org.junit.Assert.assertNull(coord68);
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 2 + "'", int82 == 2);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbL();
        fr.umontpellier.iut.algogen.Coord coord18 = instance15.getStartingP();
        int int19 = instance15.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList20 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (-1));
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, 97);
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord34, (int) (short) 0);
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord37, (int) (short) 0);
        fr.umontpellier.iut.algogen.Coord coord40 = instance39.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord41 = instance39.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord40);
        org.junit.Assert.assertNull(coord41);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        int int16 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        int int12 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        int int14 = instance9.getNbC();
        int int15 = instance9.getK();
        int int16 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        boolean[][] booleanArray18 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray18, coord19, 52);
        int int22 = instance21.getK();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord33, (int) (short) 100);
        int int36 = instance35.getNbC();
        int int37 = instance35.getK();
        boolean[][] booleanArray38 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, 52);
        fr.umontpellier.iut.algogen.Solution solution42 = instance41.greedySolver();
        boolean boolean43 = instance35.estValide(solution42);
        boolean boolean44 = instance21.estValide(solution42);
        java.lang.String str45 = instance9.toString(solution42);
        int int46 = instance9.getNbC();
        int int47 = instance9.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution48 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNotNull(solution42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ".x\n.x\n" + "'", str45, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.lang.String str13 = instance9.toString();
        boolean[] booleanArray16 = new boolean[] { false, true };
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[][] booleanArray20 = new boolean[][] { booleanArray16, booleanArray19 };
        fr.umontpellier.iut.algogen.Coord coord21 = null;
        fr.umontpellier.iut.algogen.Instance instance23 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord21, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray20, coord24, (int) (short) 100);
        boolean[] booleanArray29 = new boolean[] { false, true };
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[][] booleanArray33 = new boolean[][] { booleanArray29, booleanArray32 };
        fr.umontpellier.iut.algogen.Coord coord34 = null;
        fr.umontpellier.iut.algogen.Instance instance36 = new fr.umontpellier.iut.algogen.Instance(booleanArray33, coord34, (int) '4');
        int int37 = instance36.getNbL();
        int int38 = instance36.getNbC();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        java.lang.String str49 = instance48.toString();
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord63, 52);
        fr.umontpellier.iut.algogen.Coord coord66 = instance65.getStartingP();
        int int67 = instance65.getNbC();
        boolean[][] booleanArray68 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, 52);
        fr.umontpellier.iut.algogen.Solution solution72 = instance71.greedySolver();
        java.lang.String str73 = instance65.toString(solution72);
        java.lang.String str74 = instance48.toString(solution72);
        boolean boolean75 = instance36.estValide(solution72);
        java.lang.String str76 = instance26.toString(solution72);
        java.lang.String str77 = instance9.toString(solution72);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList78 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str49, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(solution72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ".x\n.x\n" + "'", str74, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 1);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 52);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord31 = instance30.getStartingP();
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        java.lang.String str42 = instance41.toString();
        int int43 = instance41.getK();
        java.lang.String str44 = instance41.toString();
        java.lang.String str45 = instance41.toString();
        int int46 = instance41.getK();
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[][] booleanArray53 = new boolean[][] { booleanArray49, booleanArray52 };
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, (int) '4');
        java.lang.String str57 = instance56.toString();
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[][] booleanArray64 = new boolean[][] { booleanArray60, booleanArray63 };
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord68, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord71 = null;
        fr.umontpellier.iut.algogen.Instance instance73 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord71, 52);
        fr.umontpellier.iut.algogen.Coord coord74 = instance73.getStartingP();
        int int75 = instance73.getNbC();
        boolean[][] booleanArray76 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord77 = null;
        fr.umontpellier.iut.algogen.Instance instance79 = new fr.umontpellier.iut.algogen.Instance(booleanArray76, coord77, 52);
        fr.umontpellier.iut.algogen.Solution solution80 = instance79.greedySolver();
        java.lang.String str81 = instance73.toString(solution80);
        java.lang.String str82 = instance56.toString(solution80);
        java.lang.String str83 = instance41.toString(solution80);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = instance30.estValide(solution80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord31);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str44, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str45, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str57, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertNull(coord74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertNotNull(solution80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ".x\n.x\n" + "'", str81, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + ".x\n.x\n" + "'", str82, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        int int16 = instance9.getK();
        int int17 = instance9.getNbC();
        int int18 = instance9.getK();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        java.lang.String str29 = instance28.toString();
        int int30 = instance28.getK();
        java.lang.String str31 = instance28.toString();
        java.lang.String str32 = instance28.toString();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getNbL();
        int int44 = instance42.getNbC();
        fr.umontpellier.iut.algogen.Coord coord45 = instance42.getStartingP();
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[][] booleanArray52 = new boolean[][] { booleanArray48, booleanArray51 };
        fr.umontpellier.iut.algogen.Coord coord53 = null;
        fr.umontpellier.iut.algogen.Instance instance55 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord53, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord56, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord59, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord62, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord65, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord68 = null;
        fr.umontpellier.iut.algogen.Instance instance70 = new fr.umontpellier.iut.algogen.Instance(booleanArray52, coord68, (int) 'a');
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 100);
        int int84 = instance83.getNbC();
        int int85 = instance83.getK();
        boolean[][] booleanArray86 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord87 = null;
        fr.umontpellier.iut.algogen.Instance instance89 = new fr.umontpellier.iut.algogen.Instance(booleanArray86, coord87, 52);
        fr.umontpellier.iut.algogen.Solution solution90 = instance89.greedySolver();
        boolean boolean91 = instance83.estValide(solution90);
        java.lang.String str92 = instance70.toString(solution90);
        boolean boolean93 = instance42.estValide(solution90);
        boolean boolean94 = instance28.estValide(solution90);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = instance9.evaluerSolution(solution90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str31, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNull(coord45);
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 100 + "'", int85 == 100);
        org.junit.Assert.assertNotNull(booleanArray86);
        org.junit.Assert.assertNotNull(solution90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        int int21 = instance18.getK();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList22 = instance18.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, 10);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = instance27.piecePresente(coord28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, 0);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 32);
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution25 = instance24.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        boolean[] booleanArray19 = new boolean[] { false, true };
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[][] booleanArray23 = new boolean[][] { booleanArray19, booleanArray22 };
        fr.umontpellier.iut.algogen.Coord coord24 = null;
        fr.umontpellier.iut.algogen.Instance instance26 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord24, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord27, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray23, coord30, 52);
        fr.umontpellier.iut.algogen.Coord coord33 = instance32.getStartingP();
        int int34 = instance32.getNbL();
        int int35 = instance32.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance32.getListeCoordPieces();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord47 = null;
        fr.umontpellier.iut.algogen.Instance instance49 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord47, (int) (short) 1);
        boolean[] booleanArray52 = new boolean[] { false, true };
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[][] booleanArray56 = new boolean[][] { booleanArray52, booleanArray55 };
        fr.umontpellier.iut.algogen.Coord coord57 = null;
        fr.umontpellier.iut.algogen.Instance instance59 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord57, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord60, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray56, coord63, 52);
        fr.umontpellier.iut.algogen.Coord coord66 = instance65.getStartingP();
        int int67 = instance65.getNbC();
        boolean[][] booleanArray68 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, 52);
        fr.umontpellier.iut.algogen.Solution solution72 = instance71.greedySolver();
        java.lang.String str73 = instance65.toString(solution72);
        java.lang.String str74 = instance49.toString(solution72);
        boolean boolean75 = instance32.estValide(solution72);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = instance9.evaluerSolution(solution72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray23);
        org.junit.Assert.assertNull(coord33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(coordList36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertNotNull(booleanArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray56);
        org.junit.Assert.assertNull(coord66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(solution72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ".x\n.x\n" + "'", str73, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ".x\n.x\n" + "'", str74, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.Class<?> wildcardClass14 = instance9.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        java.lang.String str19 = instance9.toString();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord30, (int) (short) 1);
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord43 = null;
        fr.umontpellier.iut.algogen.Instance instance45 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord43, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord46, 52);
        fr.umontpellier.iut.algogen.Coord coord49 = instance48.getStartingP();
        int int50 = instance48.getNbC();
        boolean[][] booleanArray51 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord52 = null;
        fr.umontpellier.iut.algogen.Instance instance54 = new fr.umontpellier.iut.algogen.Instance(booleanArray51, coord52, 52);
        fr.umontpellier.iut.algogen.Solution solution55 = instance54.greedySolver();
        java.lang.String str56 = instance48.toString(solution55);
        java.lang.String str57 = instance32.toString(solution55);
        boolean boolean58 = instance9.estValide(solution55);
        java.lang.String str59 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList60 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList61 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str19, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertNull(coord49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertNotNull(solution55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ".x\n.x\n" + "'", str57, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str59, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList60);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        int int21 = instance18.getK();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution22 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        int int11 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        int int14 = instance9.getK();
        int int15 = instance9.getNbC();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbC();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        int int14 = instance9.getNbC();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        int int17 = instance9.getNbC();
        java.lang.String str18 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str18, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord19);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList12 = instance9.getListeCoordPieces();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbC();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNotNull(coordList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (short) 100);
        java.lang.Class<?> wildcardClass34 = instance33.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord13 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord15 = instance9.getStartingP();
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        int int26 = instance25.getNbL();
        boolean[][] booleanArray27 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord28, 52);
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray27, coord31, (int) (short) 1);
        fr.umontpellier.iut.algogen.Solution solution34 = null;
        java.lang.String str35 = instance33.toString(solution34);
        java.util.ArrayList<java.lang.Integer> intList36 = instance33.greedyPermut();
        boolean[] booleanArray39 = new boolean[] { false, true };
        boolean[] booleanArray42 = new boolean[] { false, true };
        boolean[][] booleanArray43 = new boolean[][] { booleanArray39, booleanArray42 };
        fr.umontpellier.iut.algogen.Coord coord44 = null;
        fr.umontpellier.iut.algogen.Instance instance46 = new fr.umontpellier.iut.algogen.Instance(booleanArray43, coord44, (int) '4');
        java.lang.String str47 = instance46.toString();
        int int48 = instance46.getK();
        int int49 = instance46.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance46.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance46.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord52 = instance46.getStartingP();
        boolean[] booleanArray55 = new boolean[] { false, true };
        boolean[] booleanArray58 = new boolean[] { false, true };
        boolean[][] booleanArray59 = new boolean[][] { booleanArray55, booleanArray58 };
        fr.umontpellier.iut.algogen.Coord coord60 = null;
        fr.umontpellier.iut.algogen.Instance instance62 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord60, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord63 = null;
        fr.umontpellier.iut.algogen.Instance instance65 = new fr.umontpellier.iut.algogen.Instance(booleanArray59, coord63, (int) (short) 100);
        int int66 = instance65.getNbC();
        int int67 = instance65.getK();
        boolean[][] booleanArray68 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord69 = null;
        fr.umontpellier.iut.algogen.Instance instance71 = new fr.umontpellier.iut.algogen.Instance(booleanArray68, coord69, 52);
        fr.umontpellier.iut.algogen.Solution solution72 = instance71.greedySolver();
        boolean boolean73 = instance65.estValide(solution72);
        boolean boolean74 = instance46.estValide(solution72);
        java.lang.String str75 = instance33.toString(solution72);
        java.lang.String str76 = instance25.toString(solution72);
        java.lang.String str77 = instance9.toString(solution72);
        java.lang.String str78 = instance9.toString();
        int int79 = instance9.getNbL();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution80 = instance9.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(intList36);
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str47, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertNull(coord52);
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2 + "'", int66 == 2);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertNotNull(solution72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + ".x\n.x\n" + "'", str76, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ".x\n.x\n" + "'", str77, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str78, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getNbC();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getNbC();
        int int26 = instance24.getNbL();
        fr.umontpellier.iut.algogen.Coord coord27 = instance24.getStartingP();
        int int28 = instance24.getK();
        int int29 = instance24.getK();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        int int43 = instance42.getNbC();
        int int44 = instance42.getK();
        boolean[][] booleanArray45 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, 52);
        fr.umontpellier.iut.algogen.Solution solution49 = instance48.greedySolver();
        boolean boolean50 = instance42.estValide(solution49);
        java.lang.String str51 = instance24.toString(solution49);
        java.lang.String str52 = instance9.toString(solution49);
        fr.umontpellier.iut.algogen.Coord coord53 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList54 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNull(coord27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertNotNull(solution49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ".x\n.x\n" + "'", str51, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ".x\n.x\n" + "'", str52, ".x\n.x\n");
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNotNull(coordList54);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.String str21 = instance18.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList22 = instance18.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord23 = instance18.getStartingP();
        int int24 = instance18.getK();
        int int25 = instance18.getK();
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[] booleanArray31 = new boolean[] { false, true };
        boolean[][] booleanArray32 = new boolean[][] { booleanArray28, booleanArray31 };
        fr.umontpellier.iut.algogen.Coord coord33 = null;
        fr.umontpellier.iut.algogen.Instance instance35 = new fr.umontpellier.iut.algogen.Instance(booleanArray32, coord33, (int) '4');
        int int36 = instance35.getK();
        fr.umontpellier.iut.algogen.Coord coord37 = instance35.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord38 = instance35.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList39 = instance35.getListeCoordPieces();
        int int40 = instance35.getK();
        int int41 = instance35.getNbL();
        java.lang.String str42 = instance35.toString();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        java.lang.String str53 = instance52.toString();
        int int54 = instance52.getK();
        int int55 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord56 = instance52.getStartingP();
        int int57 = instance52.getNbC();
        int int58 = instance52.getK();
        int int59 = instance52.getK();
        fr.umontpellier.iut.algogen.Coord coord60 = instance52.getStartingP();
        boolean[][] booleanArray61 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, 52);
        int int65 = instance64.getK();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 100);
        int int79 = instance78.getNbC();
        int int80 = instance78.getK();
        boolean[][] booleanArray81 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord82 = null;
        fr.umontpellier.iut.algogen.Instance instance84 = new fr.umontpellier.iut.algogen.Instance(booleanArray81, coord82, 52);
        fr.umontpellier.iut.algogen.Solution solution85 = instance84.greedySolver();
        boolean boolean86 = instance78.estValide(solution85);
        boolean boolean87 = instance64.estValide(solution85);
        java.lang.String str88 = instance52.toString(solution85);
        java.lang.String str89 = instance35.toString(solution85);
        // The following exception was thrown during execution in test generation
        try {
            int int90 = instance18.evaluerSolution(solution85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList22);
        org.junit.Assert.assertNull(coord23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNull(coord37);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(coordList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str42, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str53, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertNull(coord56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNull(coord60);
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 100 + "'", int80 == 100);
        org.junit.Assert.assertNotNull(booleanArray81);
        org.junit.Assert.assertNotNull(solution85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (-1));
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[][] booleanArray22 = new boolean[][] { booleanArray18, booleanArray21 };
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord23, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord26, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord32, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray22, coord35, 0);
        fr.umontpellier.iut.algogen.Coord coord38 = instance37.getStartingP();
        boolean[] booleanArray41 = new boolean[] { false, true };
        boolean[] booleanArray44 = new boolean[] { false, true };
        boolean[][] booleanArray45 = new boolean[][] { booleanArray41, booleanArray44 };
        fr.umontpellier.iut.algogen.Coord coord46 = null;
        fr.umontpellier.iut.algogen.Instance instance48 = new fr.umontpellier.iut.algogen.Instance(booleanArray45, coord46, (int) '4');
        int int49 = instance48.getK();
        fr.umontpellier.iut.algogen.Coord coord50 = instance48.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList51 = instance48.getListeCoordPieces();
        int int52 = instance48.getNbC();
        fr.umontpellier.iut.algogen.Coord coord53 = instance48.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord54 = instance48.getStartingP();
        int int55 = instance48.getK();
        java.lang.String str56 = instance48.toString();
        int int57 = instance48.getNbC();
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[] booleanArray63 = new boolean[] { false, true };
        boolean[][] booleanArray64 = new boolean[][] { booleanArray60, booleanArray63 };
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray64, coord65, (int) '4');
        int int68 = instance67.getK();
        fr.umontpellier.iut.algogen.Coord coord69 = instance67.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord70 = instance67.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList71 = instance67.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList72 = instance67.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList73 = instance67.getListeCoordPieces();
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[] booleanArray79 = new boolean[] { false, true };
        boolean[][] booleanArray80 = new boolean[][] { booleanArray76, booleanArray79 };
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord84, (int) (short) 100);
        int int87 = instance86.getNbC();
        int int88 = instance86.getK();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        boolean boolean94 = instance86.estValide(solution93);
        java.lang.String str95 = instance67.toString(solution93);
        java.lang.String str96 = instance48.toString(solution93);
        java.lang.String str97 = instance37.toString(solution93);
        // The following exception was thrown during execution in test generation
        try {
            int int98 = instance15.evaluerSolution(solution93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNull(coord50);
        org.junit.Assert.assertNotNull(coordList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertNull(coord53);
        org.junit.Assert.assertNull(coord54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str56, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNull(coord69);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(coordList71);
        org.junit.Assert.assertNotNull(coordList72);
        org.junit.Assert.assertNotNull(coordList73);
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ".x\n.x\n" + "'", str96, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".x\n.x\n" + "'", str97, ".x\n.x\n");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        int int15 = instance9.getNbL();
        int int16 = instance9.getK();
        java.lang.String str17 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList19 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str17, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord18);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, 52);
        int int31 = instance30.getNbL();
        java.lang.Class<?> wildcardClass32 = instance30.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        int int14 = instance9.getK();
        java.lang.String str15 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord18 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        boolean[] booleanArray22 = new boolean[] { false, true };
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[][] booleanArray26 = new boolean[][] { booleanArray22, booleanArray25 };
        fr.umontpellier.iut.algogen.Coord coord27 = null;
        fr.umontpellier.iut.algogen.Instance instance29 = new fr.umontpellier.iut.algogen.Instance(booleanArray26, coord27, (int) '4');
        int int30 = instance29.getK();
        int int31 = instance29.getK();
        java.lang.String str32 = instance29.toString();
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[] booleanArray38 = new boolean[] { false, true };
        boolean[][] booleanArray39 = new boolean[][] { booleanArray35, booleanArray38 };
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray39, coord40, (int) '4');
        int int43 = instance42.getK();
        fr.umontpellier.iut.algogen.Coord coord44 = instance42.getStartingP();
        int int45 = instance42.getK();
        int int46 = instance42.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList47 = instance42.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList48 = instance42.getListeCoordPieces();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        java.lang.String str59 = instance58.toString();
        int int60 = instance58.getK();
        int int61 = instance58.getK();
        fr.umontpellier.iut.algogen.Coord coord62 = instance58.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList63 = instance58.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord64 = instance58.getStartingP();
        boolean[] booleanArray67 = new boolean[] { false, true };
        boolean[] booleanArray70 = new boolean[] { false, true };
        boolean[][] booleanArray71 = new boolean[][] { booleanArray67, booleanArray70 };
        fr.umontpellier.iut.algogen.Coord coord72 = null;
        fr.umontpellier.iut.algogen.Instance instance74 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord72, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord75 = null;
        fr.umontpellier.iut.algogen.Instance instance77 = new fr.umontpellier.iut.algogen.Instance(booleanArray71, coord75, (int) (short) 100);
        int int78 = instance77.getNbC();
        int int79 = instance77.getK();
        boolean[][] booleanArray80 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray80, coord81, 52);
        fr.umontpellier.iut.algogen.Solution solution84 = instance83.greedySolver();
        boolean boolean85 = instance77.estValide(solution84);
        boolean boolean86 = instance58.estValide(solution84);
        boolean boolean87 = instance42.estValide(solution84);
        java.lang.String str88 = instance29.toString(solution84);
        java.lang.String str89 = instance9.toString(solution84);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str15, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList16);
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNull(coord18);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertNotNull(booleanArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str32, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(coord44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(coordList47);
        org.junit.Assert.assertNotNull(coordList48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str59, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNull(coord62);
        org.junit.Assert.assertNotNull(coordList63);
        org.junit.Assert.assertNull(coord64);
        org.junit.Assert.assertNotNull(booleanArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 100 + "'", int79 == 100);
        org.junit.Assert.assertNotNull(booleanArray80);
        org.junit.Assert.assertNotNull(solution84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + ".x\n.x\n" + "'", str88, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 0);
        fr.umontpellier.iut.algogen.Coord coord28 = null;
        fr.umontpellier.iut.algogen.Instance instance30 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord28, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord31 = null;
        fr.umontpellier.iut.algogen.Instance instance33 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord31, (int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = booleanArray6.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (short) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.Class<?> wildcardClass29 = coordList28.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) (byte) 100);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList28 = instance27.getListeCoordPieces();
        java.lang.String str29 = instance27.toString();
        boolean[] booleanArray32 = new boolean[] { false, true };
        boolean[] booleanArray35 = new boolean[] { false, true };
        boolean[][] booleanArray36 = new boolean[][] { booleanArray32, booleanArray35 };
        fr.umontpellier.iut.algogen.Coord coord37 = null;
        fr.umontpellier.iut.algogen.Instance instance39 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord37, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord40 = null;
        fr.umontpellier.iut.algogen.Instance instance42 = new fr.umontpellier.iut.algogen.Instance(booleanArray36, coord40, (int) (short) 100);
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        int int53 = instance52.getNbL();
        int int54 = instance52.getNbC();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord79, 52);
        fr.umontpellier.iut.algogen.Coord coord82 = instance81.getStartingP();
        int int83 = instance81.getNbC();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        java.lang.String str89 = instance81.toString(solution88);
        java.lang.String str90 = instance64.toString(solution88);
        boolean boolean91 = instance52.estValide(solution88);
        java.lang.String str92 = instance42.toString(solution88);
        java.lang.String str93 = instance27.toString(solution88);
        fr.umontpellier.iut.algogen.Coord coord94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = instance27.piecePresente(coord94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str29, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray36);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNull(coord82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, 52);
        fr.umontpellier.iut.algogen.Coord coord29 = instance28.getStartingP();
        int int30 = instance28.getNbC();
        boolean[][] booleanArray31 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray31, coord32, 52);
        fr.umontpellier.iut.algogen.Solution solution35 = instance34.greedySolver();
        java.lang.String str36 = instance28.toString(solution35);
        java.lang.String str37 = instance12.toString(solution35);
        fr.umontpellier.iut.algogen.Coord coord38 = instance12.getStartingP();
        int int39 = instance12.getNbL();
        fr.umontpellier.iut.algogen.Coord coord40 = instance12.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList41 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNull(coord29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertNotNull(solution35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ".x\n.x\n" + "'", str36, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ".x\n.x\n" + "'", str37, ".x\n.x\n");
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNull(coord40);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord22, 52);
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord25, (int) '4');
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList11 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        int int15 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        int int17 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(coordList11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList19 = instance18.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList20 = instance18.getListeCoordPieces();
        java.lang.String str21 = instance18.toString();
        java.lang.Class<?> wildcardClass22 = instance18.getClass();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNotNull(coordList19);
        org.junit.Assert.assertNotNull(coordList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str21, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 1);
        fr.umontpellier.iut.algogen.Coord coord13 = instance12.getStartingP();
        int int14 = instance12.getNbC();
        fr.umontpellier.iut.algogen.Coord coord15 = instance12.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList16 = instance12.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList17 = instance12.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNull(coord15);
        org.junit.Assert.assertNotNull(coordList16);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, 10);
        fr.umontpellier.iut.algogen.Coord coord19 = null;
        fr.umontpellier.iut.algogen.Instance instance21 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord19, (int) (byte) 10);
        java.lang.String str22 = instance21.toString();
        boolean[] booleanArray25 = new boolean[] { false, true };
        boolean[] booleanArray28 = new boolean[] { false, true };
        boolean[][] booleanArray29 = new boolean[][] { booleanArray25, booleanArray28 };
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, (int) '4');
        int int33 = instance32.getK();
        fr.umontpellier.iut.algogen.Coord coord34 = instance32.getStartingP();
        java.lang.String str35 = instance32.toString();
        java.lang.String str36 = instance32.toString();
        int int37 = instance32.getNbL();
        fr.umontpellier.iut.algogen.Coord coord38 = instance32.getStartingP();
        int int39 = instance32.getK();
        int int40 = instance32.getNbC();
        int int41 = instance32.getNbL();
        int int42 = instance32.getNbL();
        boolean[] booleanArray45 = new boolean[] { false, true };
        boolean[] booleanArray48 = new boolean[] { false, true };
        boolean[][] booleanArray49 = new boolean[][] { booleanArray45, booleanArray48 };
        fr.umontpellier.iut.algogen.Coord coord50 = null;
        fr.umontpellier.iut.algogen.Instance instance52 = new fr.umontpellier.iut.algogen.Instance(booleanArray49, coord50, (int) '4');
        int int53 = instance52.getNbL();
        int int54 = instance52.getNbC();
        boolean[] booleanArray57 = new boolean[] { false, true };
        boolean[] booleanArray60 = new boolean[] { false, true };
        boolean[][] booleanArray61 = new boolean[][] { booleanArray57, booleanArray60 };
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray61, coord62, (int) '4');
        java.lang.String str65 = instance64.toString();
        boolean[] booleanArray68 = new boolean[] { false, true };
        boolean[] booleanArray71 = new boolean[] { false, true };
        boolean[][] booleanArray72 = new boolean[][] { booleanArray68, booleanArray71 };
        fr.umontpellier.iut.algogen.Coord coord73 = null;
        fr.umontpellier.iut.algogen.Instance instance75 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord73, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord76, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord79 = null;
        fr.umontpellier.iut.algogen.Instance instance81 = new fr.umontpellier.iut.algogen.Instance(booleanArray72, coord79, 52);
        fr.umontpellier.iut.algogen.Coord coord82 = instance81.getStartingP();
        int int83 = instance81.getNbC();
        boolean[][] booleanArray84 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord85 = null;
        fr.umontpellier.iut.algogen.Instance instance87 = new fr.umontpellier.iut.algogen.Instance(booleanArray84, coord85, 52);
        fr.umontpellier.iut.algogen.Solution solution88 = instance87.greedySolver();
        java.lang.String str89 = instance81.toString(solution88);
        java.lang.String str90 = instance64.toString(solution88);
        boolean boolean91 = instance52.estValide(solution88);
        java.lang.String str92 = instance32.toString(solution88);
        java.lang.String str93 = instance21.toString(solution88);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str22, "k = 10\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNull(coord34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str35, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str36, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNull(coord38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 52 + "'", int39 == 52);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(booleanArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertNotNull(booleanArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str65, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray68), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray72);
        org.junit.Assert.assertNull(coord82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(booleanArray84);
        org.junit.Assert.assertNotNull(solution88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ".x\n.x\n" + "'", str89, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ".x\n.x\n" + "'", str90, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + ".x\n.x\n" + "'", str92, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ".x\n.x\n" + "'", str93, ".x\n.x\n");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        int int17 = instance9.getNbL();
        int int18 = instance9.getNbL();
        fr.umontpellier.iut.algogen.Coord coord19 = instance9.getStartingP();
        int int20 = instance9.getNbL();
        int int21 = instance9.getK();
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[] booleanArray27 = new boolean[] { false, true };
        boolean[][] booleanArray28 = new boolean[][] { booleanArray24, booleanArray27 };
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray28, coord29, (int) '4');
        int int32 = instance31.getNbC();
        java.lang.String str33 = instance31.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList34 = instance31.getListeCoordPieces();
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[][] booleanArray41 = new boolean[][] { booleanArray37, booleanArray40 };
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord42, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray41, coord45, (int) (short) 100);
        java.lang.String str48 = instance47.toString();
        boolean[] booleanArray51 = new boolean[] { false, true };
        boolean[] booleanArray54 = new boolean[] { false, true };
        boolean[][] booleanArray55 = new boolean[][] { booleanArray51, booleanArray54 };
        fr.umontpellier.iut.algogen.Coord coord56 = null;
        fr.umontpellier.iut.algogen.Instance instance58 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord56, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord59 = null;
        fr.umontpellier.iut.algogen.Instance instance61 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord59, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord62 = null;
        fr.umontpellier.iut.algogen.Instance instance64 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord62, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord65 = null;
        fr.umontpellier.iut.algogen.Instance instance67 = new fr.umontpellier.iut.algogen.Instance(booleanArray55, coord65, (int) 'a');
        int int68 = instance67.getNbC();
        int int69 = instance67.getK();
        fr.umontpellier.iut.algogen.Coord coord70 = instance67.getStartingP();
        boolean[] booleanArray73 = new boolean[] { false, true };
        boolean[] booleanArray76 = new boolean[] { false, true };
        boolean[][] booleanArray77 = new boolean[][] { booleanArray73, booleanArray76 };
        fr.umontpellier.iut.algogen.Coord coord78 = null;
        fr.umontpellier.iut.algogen.Instance instance80 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord78, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord81 = null;
        fr.umontpellier.iut.algogen.Instance instance83 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord81, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord84 = null;
        fr.umontpellier.iut.algogen.Instance instance86 = new fr.umontpellier.iut.algogen.Instance(booleanArray77, coord84, 52);
        fr.umontpellier.iut.algogen.Coord coord87 = instance86.getStartingP();
        int int88 = instance86.getNbC();
        boolean[][] booleanArray89 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord90 = null;
        fr.umontpellier.iut.algogen.Instance instance92 = new fr.umontpellier.iut.algogen.Instance(booleanArray89, coord90, 52);
        fr.umontpellier.iut.algogen.Solution solution93 = instance92.greedySolver();
        java.lang.String str94 = instance86.toString(solution93);
        java.lang.String str95 = instance67.toString(solution93);
        boolean boolean96 = instance47.estValide(solution93);
        java.lang.String str97 = instance31.toString(solution93);
        java.lang.String str98 = instance9.toString(solution93);
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str33, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList34);
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str48, "k = 100\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray55);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 97 + "'", int69 == 97);
        org.junit.Assert.assertNull(coord70);
        org.junit.Assert.assertNotNull(booleanArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray77);
        org.junit.Assert.assertNull(coord87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2 + "'", int88 == 2);
        org.junit.Assert.assertNotNull(booleanArray89);
        org.junit.Assert.assertNotNull(solution93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + ".x\n.x\n" + "'", str94, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ".x\n.x\n" + "'", str95, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ".x\n.x\n" + "'", str97, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + ".x\n.x\n" + "'", str98, ".x\n.x\n");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getNbL();
        int int11 = instance9.getNbC();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        boolean[] booleanArray15 = new boolean[] { false, true };
        boolean[] booleanArray18 = new boolean[] { false, true };
        boolean[][] booleanArray19 = new boolean[][] { booleanArray15, booleanArray18 };
        fr.umontpellier.iut.algogen.Coord coord20 = null;
        fr.umontpellier.iut.algogen.Instance instance22 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord20, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord23 = null;
        fr.umontpellier.iut.algogen.Instance instance25 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord23, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord26, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord29, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord32 = null;
        fr.umontpellier.iut.algogen.Instance instance34 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord32, (int) 'a');
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray19, coord35, (int) 'a');
        boolean[] booleanArray40 = new boolean[] { false, true };
        boolean[] booleanArray43 = new boolean[] { false, true };
        boolean[][] booleanArray44 = new boolean[][] { booleanArray40, booleanArray43 };
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord45, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord48 = null;
        fr.umontpellier.iut.algogen.Instance instance50 = new fr.umontpellier.iut.algogen.Instance(booleanArray44, coord48, (int) (short) 100);
        int int51 = instance50.getNbC();
        int int52 = instance50.getK();
        boolean[][] booleanArray53 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord54 = null;
        fr.umontpellier.iut.algogen.Instance instance56 = new fr.umontpellier.iut.algogen.Instance(booleanArray53, coord54, 52);
        fr.umontpellier.iut.algogen.Solution solution57 = instance56.greedySolver();
        boolean boolean58 = instance50.estValide(solution57);
        java.lang.String str59 = instance37.toString(solution57);
        boolean boolean60 = instance9.estValide(solution57);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList61 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList62 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(booleanArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertNotNull(booleanArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray44);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertNotNull(booleanArray53);
        org.junit.Assert.assertNotNull(solution57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + ".x\n.x\n" + "'", str59, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(coordList61);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, 52);
        fr.umontpellier.iut.algogen.Coord coord16 = instance15.getStartingP();
        int int17 = instance15.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList18 = instance15.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        java.lang.String str10 = instance9.toString();
        int int11 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        int int13 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord14 = instance9.getStartingP();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        int int25 = instance24.getK();
        int int26 = instance24.getK();
        java.lang.String str27 = instance24.toString();
        boolean[] booleanArray30 = new boolean[] { false, true };
        boolean[] booleanArray33 = new boolean[] { false, true };
        boolean[][] booleanArray34 = new boolean[][] { booleanArray30, booleanArray33 };
        fr.umontpellier.iut.algogen.Coord coord35 = null;
        fr.umontpellier.iut.algogen.Instance instance37 = new fr.umontpellier.iut.algogen.Instance(booleanArray34, coord35, (int) '4');
        int int38 = instance37.getK();
        fr.umontpellier.iut.algogen.Coord coord39 = instance37.getStartingP();
        int int40 = instance37.getK();
        int int41 = instance37.getNbC();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList42 = instance37.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList43 = instance37.getListeCoordPieces();
        boolean[] booleanArray46 = new boolean[] { false, true };
        boolean[] booleanArray49 = new boolean[] { false, true };
        boolean[][] booleanArray50 = new boolean[][] { booleanArray46, booleanArray49 };
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, (int) '4');
        java.lang.String str54 = instance53.toString();
        int int55 = instance53.getK();
        int int56 = instance53.getK();
        fr.umontpellier.iut.algogen.Coord coord57 = instance53.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList58 = instance53.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord59 = instance53.getStartingP();
        boolean[] booleanArray62 = new boolean[] { false, true };
        boolean[] booleanArray65 = new boolean[] { false, true };
        boolean[][] booleanArray66 = new boolean[][] { booleanArray62, booleanArray65 };
        fr.umontpellier.iut.algogen.Coord coord67 = null;
        fr.umontpellier.iut.algogen.Instance instance69 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord67, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord70 = null;
        fr.umontpellier.iut.algogen.Instance instance72 = new fr.umontpellier.iut.algogen.Instance(booleanArray66, coord70, (int) (short) 100);
        int int73 = instance72.getNbC();
        int int74 = instance72.getK();
        boolean[][] booleanArray75 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord76 = null;
        fr.umontpellier.iut.algogen.Instance instance78 = new fr.umontpellier.iut.algogen.Instance(booleanArray75, coord76, 52);
        fr.umontpellier.iut.algogen.Solution solution79 = instance78.greedySolver();
        boolean boolean80 = instance72.estValide(solution79);
        boolean boolean81 = instance53.estValide(solution79);
        boolean boolean82 = instance37.estValide(solution79);
        java.lang.String str83 = instance24.toString(solution79);
        java.lang.String str84 = instance9.toString(solution79);
        int int85 = instance9.getNbL();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str10, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertNull(coord14);
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str27, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNull(coord39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(coordList42);
        org.junit.Assert.assertNotNull(coordList43);
        org.junit.Assert.assertNotNull(booleanArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str54, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNull(coord57);
        org.junit.Assert.assertNotNull(coordList58);
        org.junit.Assert.assertNull(coord59);
        org.junit.Assert.assertNotNull(booleanArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(booleanArray75);
        org.junit.Assert.assertNotNull(solution79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + ".x\n.x\n" + "'", str83, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ".x\n.x\n" + "'", str84, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        java.lang.String str12 = instance9.toString();
        java.lang.String str13 = instance9.toString();
        int int14 = instance9.getNbL();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        java.lang.String str16 = instance9.toString();
        fr.umontpellier.iut.algogen.Coord coord17 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList18 = instance9.getListeCoordPieces();
        boolean[] booleanArray21 = new boolean[] { false, true };
        boolean[] booleanArray24 = new boolean[] { false, true };
        boolean[][] booleanArray25 = new boolean[][] { booleanArray21, booleanArray24 };
        fr.umontpellier.iut.algogen.Coord coord26 = null;
        fr.umontpellier.iut.algogen.Instance instance28 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord26, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord29 = null;
        fr.umontpellier.iut.algogen.Instance instance31 = new fr.umontpellier.iut.algogen.Instance(booleanArray25, coord29, (int) (short) 1);
        boolean[] booleanArray34 = new boolean[] { false, true };
        boolean[] booleanArray37 = new boolean[] { false, true };
        boolean[][] booleanArray38 = new boolean[][] { booleanArray34, booleanArray37 };
        fr.umontpellier.iut.algogen.Coord coord39 = null;
        fr.umontpellier.iut.algogen.Instance instance41 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord39, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord42 = null;
        fr.umontpellier.iut.algogen.Instance instance44 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord42, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord45 = null;
        fr.umontpellier.iut.algogen.Instance instance47 = new fr.umontpellier.iut.algogen.Instance(booleanArray38, coord45, 52);
        fr.umontpellier.iut.algogen.Coord coord48 = instance47.getStartingP();
        int int49 = instance47.getNbC();
        boolean[][] booleanArray50 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord51 = null;
        fr.umontpellier.iut.algogen.Instance instance53 = new fr.umontpellier.iut.algogen.Instance(booleanArray50, coord51, 52);
        fr.umontpellier.iut.algogen.Solution solution54 = instance53.greedySolver();
        java.lang.String str55 = instance47.toString(solution54);
        java.lang.String str56 = instance31.toString(solution54);
        boolean boolean57 = instance9.estValide(solution54);
        java.lang.String str58 = instance9.toString();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList59 = instance9.getListeCoordPieces();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str12, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str13, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str16, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNull(coord17);
        org.junit.Assert.assertNotNull(coordList18);
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray25);
        org.junit.Assert.assertNotNull(booleanArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray38);
        org.junit.Assert.assertNull(coord48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(booleanArray50);
        org.junit.Assert.assertNotNull(solution54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ".x\n.x\n" + "'", str55, ".x\n.x\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ".x\n.x\n" + "'", str56, ".x\n.x\n");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str58, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(coordList59);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) '#');
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) 'a');
        int int19 = instance18.getNbC();
        int int20 = instance18.getK();
        fr.umontpellier.iut.algogen.Coord coord21 = instance18.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord22 = instance18.getStartingP();
        int int23 = instance18.getNbL();
        fr.umontpellier.iut.algogen.Coord coord24 = instance18.getStartingP();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(coord21);
        org.junit.Assert.assertNull(coord22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNull(coord24);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        fr.umontpellier.iut.algogen.Coord coord12 = instance9.getStartingP();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList13 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList14 = instance9.getListeCoordPieces();
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList15 = instance9.getListeCoordPieces();
        fr.umontpellier.iut.algogen.Coord coord16 = instance9.getStartingP();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = coord16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertNull(coord12);
        org.junit.Assert.assertNotNull(coordList13);
        org.junit.Assert.assertNotNull(coordList14);
        org.junit.Assert.assertNotNull(coordList15);
        org.junit.Assert.assertNull(coord16);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord10 = null;
        fr.umontpellier.iut.algogen.Instance instance12 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord10, (int) (short) 10);
        fr.umontpellier.iut.algogen.Coord coord13 = null;
        fr.umontpellier.iut.algogen.Instance instance15 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord13, (int) (byte) 100);
        fr.umontpellier.iut.algogen.Coord coord16 = null;
        fr.umontpellier.iut.algogen.Instance instance18 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord16, (int) (byte) 10);
        fr.umontpellier.iut.algogen.Coord coord19 = instance18.getStartingP();
        int int20 = instance18.getNbL();
        int int21 = instance18.getNbL();
        int int22 = instance18.getNbC();
        // The following exception was thrown during execution in test generation
        try {
            fr.umontpellier.iut.algogen.Solution solution23 = instance18.greedySolver();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertNull(coord19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        boolean[] booleanArray2 = new boolean[] { false, true };
        boolean[] booleanArray5 = new boolean[] { false, true };
        boolean[][] booleanArray6 = new boolean[][] { booleanArray2, booleanArray5 };
        fr.umontpellier.iut.algogen.Coord coord7 = null;
        fr.umontpellier.iut.algogen.Instance instance9 = new fr.umontpellier.iut.algogen.Instance(booleanArray6, coord7, (int) '4');
        int int10 = instance9.getK();
        fr.umontpellier.iut.algogen.Coord coord11 = instance9.getStartingP();
        int int12 = instance9.getK();
        int int13 = instance9.getNbC();
        java.lang.String str14 = instance9.toString();
        boolean[] booleanArray17 = new boolean[] { false, true };
        boolean[] booleanArray20 = new boolean[] { false, true };
        boolean[][] booleanArray21 = new boolean[][] { booleanArray17, booleanArray20 };
        fr.umontpellier.iut.algogen.Coord coord22 = null;
        fr.umontpellier.iut.algogen.Instance instance24 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord22, (int) '4');
        fr.umontpellier.iut.algogen.Coord coord25 = null;
        fr.umontpellier.iut.algogen.Instance instance27 = new fr.umontpellier.iut.algogen.Instance(booleanArray21, coord25, (int) (short) 100);
        int int28 = instance27.getNbC();
        boolean[][] booleanArray29 = new boolean[][] {};
        fr.umontpellier.iut.algogen.Coord coord30 = null;
        fr.umontpellier.iut.algogen.Instance instance32 = new fr.umontpellier.iut.algogen.Instance(booleanArray29, coord30, 52);
        fr.umontpellier.iut.algogen.Solution solution33 = instance32.greedySolver();
        boolean boolean34 = instance27.estValide(solution33);
        java.lang.String str35 = instance9.toString(solution33);
        java.util.ArrayList<fr.umontpellier.iut.algogen.Coord> coordList36 = instance9.getListeCoordPieces();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Integer> intList37 = instance9.greedyPermut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(coord11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n" + "'", str14, "k = 52\nnb pieces = 2\nstarting point = null\n.x\n.x\n");
        org.junit.Assert.assertNotNull(booleanArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true]");
        org.junit.Assert.assertNotNull(booleanArray21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertNotNull(solution33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ".x\n.x\n" + "'", str35, ".x\n.x\n");
        org.junit.Assert.assertNotNull(coordList36);
    }
}

